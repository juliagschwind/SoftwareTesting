Branch Coverage: 


Coverage of Test Suite: comp5111.assignment.cut.Regression__Test

comp5111.assignment.cut.Subject$NumberTasks
15 Branches from a total of 172 Branches were covered.
Percentage: 8.720930232558139%

comp5111.assignment.cut.Subject$CharTasks
6 Branches from a total of 24 Branches were covered.
Percentage: 25.0%

comp5111.assignment.cut.Subject$GregorianTasks
29 Branches from a total of 94 Branches were covered.
Percentage: 30.851063829787233%

comp5111.assignment.cut.Subject$ArrayTasks
3 Branches from a total of 22 Branches were covered.
Percentage: 13.636363636363635%

comp5111.assignment.cut.Subject
0 Branches from a total of 0 Branches were covered.
Percentage: 100.0%

comp5111.assignment.cut.Subject$FilenameTasks
8 Branches from a total of 98 Branches were covered.
Percentage: 8.16326530612245%

comp5111.assignment.cut.Subject$StringTasks
38 Branches from a total of 152 Branches were covered.
Percentage: 25.0%

comp5111.assignment.cut.Subject$BooleanTasks
0 Branches from a total of 4 Branches were covered.
Percentage: 0.0%

Overall Branch Coverage: 17.491166077738516%



In the following part you can see which branches were executed. Before every branch instruction you can see two numbers
in the form of (x,y), for Example (1,5). This indicates that the following Instruction can be found on line x of the Java code. 
y denotes that it is the y-th Jimple Instruction generated from the corresponding Java line. Only Branch instructions will be shown.
After each listed instructions you can find a NO if one or more branches weren't executed and a YES if one or more branches were takenIf it was executed you will also find a List of (x,y) values which denote the statements to which we jumped.



comp5111.assignment.cut.Subject$NumberTasks


In the following all of the instructions which were covered will be shown: 

(1215, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l0)  YES, jumped to: (1219, 0) 
(1340, 1): if $stack5 != 45 goto $stack6 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 0)  YES, jumped to: (1346, 0) 
(1337, 3): if $stack4 != 46 goto $stack5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)  YES, jumped to: (1340, 0) 
(1334, 1): if $stack1 == 0 goto $stack2 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (1335, 0) (1337, 0) 
(1296, 1): if $stack1 == 0 goto $stack2 = new java.math.BigDecimal  YES, jumped to: (1297, 0) (1299, 0) 
(1359, 0): if l4 != 0 goto l3 = l3 + 1  YES, jumped to: (1359, 1) 
(1197, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(l0)  YES, jumped to: (1200, 0) 
(1292, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  YES, jumped to: (1296, 0) 
(1356, 0): if l2 <= 1 goto (branch)  YES, jumped to: (1359, 0) 
(1359, 3): if $stack10 != 0 goto l3 = l3 + 1  YES, jumped to: (1360, 0) 
(1353, 0): if $stack13 == 0 goto (branch)  YES, jumped to: (1356, 0) 
(1352, 1): if $stack6 != 46 goto $stack13 = 0  YES, jumped to: (1352, 4) 
(1351, 2): if l3 >= $stack5 goto return 1  YES, jumped to: (1352, 0) 

In the following all of the instructions which were not covered will be shown: 

(993, 0): if l10 <= l2 goto l6#28 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>(l0, l10)  NO 
(1092, 4): if $stack33 != 0 goto l14 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>(l0)  NO 
(1088, 2): if $stack43 != 0 goto $stack44 = virtualinvoke l12#81.<java.lang.Float: java.lang.String toString()>()  NO 
(1092, 6): if $stack38 == 0 goto (branch)  NO 
(1088, 4): if $stack48 == 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1340, 1): if $stack5 != 45 goto $stack6 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 0)  NO 
(981, 0): if l10 <= -1 goto $stack107 = l9 + 1  NO 
(1270, 1): if $stack13 == 0 goto $stack14 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l1)  NO 
(1068, 0): if l7#20 != null goto l12#81 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)  NO 
(1068, 1): if l8 != null goto l12#81 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)  NO 
(1163, 2): if l1 < 0 goto return 1  NO 
(1353, 0): if $stack13 == 0 goto (branch)  NO 
(1031, 1): if $stack74 != 0 goto (branch)  NO 
(1254, 1): if $stack6 == 0 goto l1 = 0  NO 
(1031, 4): if $stack83 != 0 goto return l13#63  NO 
(961, 0): if l6 > 16 goto $stack122 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>(l0)  NO 
(1031, 6): if $stack84 == 0 goto (branch)  NO 
(961, 1): if l6 != 16 goto (branch)  NO 
(961, 2): if l5#11 <= 55 goto (branch)  NO 
(1279, 0): if l3 == 0 goto $stack11 = $stack9  NO 
(1089, 3): if $stack46 == 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1118, 0): if $stack7 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1)  NO 
(1341, 1): if $stack7 != 1 goto $stack8 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 1)  NO 
(953, 1): if l6 >= l2 goto l6 = l2 - l4  NO 
(1015, 0): if l7#20 != null goto $stack62 = new java.lang.NumberFormatException  NO 
(982, 0): if l10 < l9 goto $stack114 = new java.lang.NumberFormatException  NO 
(1015, 1): if l8 != null goto $stack62 = new java.lang.NumberFormatException  NO 
(1337, 3): if $stack4 != 46 goto $stack5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)  NO 
(982, 1): if l10 <= l2 goto $stack116 = l9 + 1  NO 
(1234, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Long: java.lang.Long decode(java.lang.String)>(l0)  NO 
(1267, 1): if $stack8 != 0 goto l2 = 16  NO 
(1267, 3): if $stack12 == 0 goto $stack13 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l1)  NO 
(945, 2): if l7 >= l6 goto (branch)  NO 
(1197, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(l0)  NO 
(1292, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  NO 
(1003, 0): if l11 == 0 goto (branch)  NO 
(1164, 1): if $stack3 == 48 goto l1 = l1 + -1  NO 
(937, 1): if $stack15 == 0 goto $stack16 = newarray (java.lang.String)[3]  NO 
(1160, 0): if l0 != null goto $stack2 = virtualinvoke l0.<java.lang.String: int length()>()  NO 
(999, 0): if $stack119 == 0 goto $stack101 = l2  NO 
(1094, 3): if $stack37 != 0 goto return l14  NO 
(1251, 0): if l0 != null goto $stack6 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  NO 
(1181, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(l0)  NO 
(1148, 1): if $stack2 == 0 goto $stack4 = 0  NO 
(1148, 3): if $stack3 == 0 goto $stack4 = 0  NO 
(1045, 1): if $stack76 != 0 goto (branch)  NO 
(979, 1): if $stack25 != 0 goto $stack119 = 0  NO 
(946, 1): if $stack138 == 0 goto l7 = l7 + 1  NO 
(979, 2): if l5#11 == 46 goto $stack119 = 0  NO 
(1045, 4): if $stack79 != 0 goto return l13#69  NO 
(1264, 0): if l4 != 43 goto $stack8 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l1)  NO 
(1045, 6): if $stack80 == 0 goto (branch)  NO 
(1359, 0): if l4 != 0 goto l3 = l3 + 1  NO 
(1004, 0): if l10 <= -1 goto l8 = null  NO 
(1359, 3): if $stack10 != 0 goto l3 = l3 + 1  NO 
(1004, 2): if l10 >= $stack90 goto l8 = null  NO 
(934, 0): if l0 != null goto $stack15 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  NO 
(1351, 2): if l3 >= $stack5 goto return 1  NO 
(992, 0): if l10 <= -1 goto (branch)  NO 
(1215, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l0)  NO 
(1087, 1): if $stack29 != 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1116, 0): if l2 == 45 goto $stack7 = 1  NO 
(955, 0): if l5#11 == 48 goto l4 = l4 + 1  NO 
(988, 1): if $stack119 == 0 goto $stack110 = l2  NO 
(1116, 1): if l2 != 43 goto $stack7 = 0  NO 
(1017, 1): if $stack65 != 0 goto $stack66 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>(l12)  NO 
(1273, 1): if $stack14 == 0 goto $stack9 = new java.math.BigInteger  NO 
(951, 0): if l4 <= 0 goto $stack19 = l2 - 1  NO 
(1017, 3): if $stack68 != 45 goto $stack66 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>(l12)  NO 
(1273, 4): if $stack19 <= $stack20 goto $stack9 = new java.math.BigInteger  NO 
(980, 0): if l9 <= -1 goto (branch)  NO 
(1017, 6): if $stack71 != 0 goto $stack67 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>(l12)  NO 
(1017, 8): if $stack66 == 0 goto $stack62 = new java.lang.NumberFormatException  NO 
(943, 1): if $stack18 == 43 goto $stack145 = 1  NO 
(1261, 0): if l4 != 45 goto (branch)  NO 
(943, 3): if $stack144 != 45 goto $stack145 = 0  NO 
(1356, 0): if l2 <= 1 goto (branch)  NO 
(1063, 0): if l10 <= -1 goto l8 = null  NO 
(1352, 1): if $stack6 != 46 goto $stack13 = 0  NO 
(1063, 2): if l10 >= $stack55 goto l8 = null  NO 
(964, 0): if l6 > 8 goto $stack123 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>(l0)  NO 
(964, 1): if l6 != 8 goto $stack124 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>(l0)  NO 
(1092, 1): if $stack30 != 0 goto (branch)  NO 
(964, 2): if l5#11 <= 55 goto $stack124 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>(l0)  NO 


comp5111.assignment.cut.Subject$CharTasks


In the following all of the instructions which were covered will be shown: 

(1536, 0): if l0 < 65 goto $stack1 = 0  YES, jumped to: (1536, 4) 
(1517, 1): if $stack1 != 0 goto $stack3 = 1  YES, jumped to: (1517, 2) 
(1517, 3): if $stack2 == 0 goto $stack3 = 0  YES, jumped to: (1517, 6) 
(1479, 0): if l0 < 32 goto $stack1 = 0  YES, jumped to: (1479, 4) 
(1460, 0): if l0 >= 128 goto $stack1 = 0  YES, jumped to: (1460, 1) 
(1555, 0): if l0 < 97 goto $stack1 = 0  YES, jumped to: (1555, 4) 

In the following all of the instructions which were not covered will be shown: 

(1441, 0): if l0 == null goto $stack2 = l1  NO 
(1536, 0): if l0 < 65 goto $stack1 = 0  NO 
(1536, 1): if l0 > 90 goto $stack1 = 0  NO 
(1517, 1): if $stack1 != 0 goto $stack3 = 1  NO 
(1498, 0): if l0 < 32 goto $stack1 = 1  NO 
(1517, 3): if $stack2 == 0 goto $stack3 = 0  NO 
(1498, 1): if l0 != 127 goto $stack1 = 0  NO 
(1479, 0): if l0 < 32 goto $stack1 = 0  NO 
(1479, 1): if l0 >= 127 goto $stack1 = 0  NO 
(1460, 0): if l0 >= 128 goto $stack1 = 0  NO 
(1555, 0): if l0 < 97 goto $stack1 = 0  NO 
(1555, 1): if l0 > 122 goto $stack1 = 0  NO 


comp5111.assignment.cut.Subject$GregorianTasks


In the following all of the instructions which were covered will be shown: 

(1761, 0): if l1 != 2 goto $stack4 = new java.lang.IllegalArgumentException  YES, jumped to: (1762, 0) 
(1732, 3): if $stack2 != 0 goto $stack4 = 1  YES, jumped to: (1732, 6) 
(1728, 0): if l0 <= 1900 goto $stack1 = l0 & 3  YES, jumped to: (1728, 1) 
(1759, 0): if l1 == 1 goto return 31  YES, jumped to: (1759, 1) (1759, 7) 
(1728, 1): if l0 >= 2100 goto $stack1 = l0 & 3  YES, jumped to: (1732, 0) 
(1759, 1): if l1 == 3 goto return 31  YES, jumped to: (1759, 2) 
(1759, 2): if l1 == 5 goto return 31  YES, jumped to: (1759, 3) 
(1759, 3): if l1 == 7 goto return 31  YES, jumped to: (1759, 4) 
(1821, 1): if l2 <= $stack9 goto return  YES, jumped to: (1827, 0) 
(1759, 4): if l1 == 8 goto return 31  YES, jumped to: (1759, 5) 
(1759, 5): if l1 == 10 goto return 31  YES, jumped to: (1759, 7) (1759, 6) 
(1759, 6): if l1 != 12 goto (branch)  YES, jumped to: (1760, 0) 
(1815, 0): if l1 < 1 goto $stack5 = new java.lang.IllegalArgumentException  YES, jumped to: (1815, 1) 
(1815, 1): if l1 <= 12 goto (branch)  YES, jumped to: (1818, 0) 
(1861, 0): if l2 < 1 goto $stack8 = new java.lang.IllegalArgumentException  YES, jumped to: (1862, 0) (1861, 1) 
(1861, 1): if l2 <= 31 goto $stack10 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)  YES, jumped to: (1862, 0) 
(1760, 0): if l1 == 4 goto return 30  YES, jumped to: (1760, 1) 
(1760, 1): if l1 == 6 goto return 30  YES, jumped to: (1760, 2) 
(1760, 2): if l1 == 9 goto return 30  YES, jumped to: (1760, 3) 
(1760, 3): if l1 != 11 goto (branch)  YES, jumped to: (1761, 0) 
(1818, 0): if l2 < 1 goto $stack7 = new java.lang.IllegalArgumentException  YES, jumped to: (1818, 1) (1819, 0) 
(1818, 1): if l2 <= 31 goto $stack9 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)  YES, jumped to: (1821, 0) 
(1812, 0): if l0 < -999999999 goto $stack3 = new java.lang.IllegalArgumentException  YES, jumped to: (1812, 1) 
(1812, 1): if l0 <= 999999999 goto (branch)  YES, jumped to: (1815, 0) 
(1732, 1): if $stack1 == 0 goto $stack4 = 1  YES, jumped to: (1732, 2) 

In the following all of the instructions which were not covered will be shown: 

(1732, 3): if $stack2 != 0 goto $stack4 = 1  NO 
(1761, 0): if l1 != 2 goto $stack4 = new java.lang.IllegalArgumentException  NO 
(1728, 0): if l0 <= 1900 goto $stack1 = l0 & 3  NO 
(1728, 1): if l0 >= 2100 goto $stack1 = l0 & 3  NO 
(1732, 5): if $stack3 != 0 goto $stack4 = 0  NO 
(1761, 2): if $stack6 == 0 goto $stack7 = 28  NO 
(1759, 1): if l1 == 3 goto return 31  NO 
(1759, 2): if l1 == 5 goto return 31  NO 
(1759, 3): if l1 == 7 goto return 31  NO 
(1821, 1): if l2 <= $stack9 goto return  NO 
(1759, 4): if l1 == 8 goto return 31  NO 
(1759, 6): if l1 != 12 goto (branch)  NO 
(1815, 0): if l1 < 1 goto $stack5 = new java.lang.IllegalArgumentException  NO 
(1815, 1): if l1 <= 12 goto (branch)  NO 
(1904, 0): if l1 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1)  NO 
(1933, 0): if l0 != 12 goto $stack1 = new java.lang.IllegalArgumentException  NO 
(1931, 0): if l0 != 10 goto (branch)  NO 
(1929, 0): if l0 != 8 goto (branch)  NO 
(1927, 0): if l0 != 6 goto (branch)  NO 
(1925, 0): if l0 != 4 goto (branch)  NO 
(1861, 1): if l2 <= 31 goto $stack10 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)  NO 
(1923, 0): if l0 != 2 goto (branch)  NO 
(1890, 0): if l7 > 0 goto return l7  NO 
(1729, 1): if $stack7 != 0 goto $stack8 = 0  NO 
(1760, 0): if l1 == 4 goto return 30  NO 
(1760, 1): if l1 == 6 goto return 30  NO 
(1760, 2): if l1 == 9 goto return 30  NO 
(1760, 3): if l1 != 11 goto (branch)  NO 
(1818, 1): if l2 <= 31 goto $stack9 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)  NO 
(1880, 0): if l4 >= 0 goto l6 = staticinvoke <java.lang.Math: int floorDiv(int,int)>(l5, 4)  NO 
(1878, 0): if l1 > 2 goto l6 = staticinvoke <java.lang.Math: int floorDiv(int,int)>(l5, 4)  NO 
(1909, 0): if l2 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l2)  NO 
(1812, 0): if l0 < -999999999 goto $stack3 = new java.lang.IllegalArgumentException  NO 
(1812, 1): if l0 <= 999999999 goto (branch)  NO 
(1874, 0): if l4 >= 0 goto (branch)  NO 
(1932, 0): if l0 != 11 goto (branch)  NO 
(1930, 0): if l0 != 9 goto (branch)  NO 
(1928, 0): if l0 != 7 goto (branch)  NO 
(1864, 1): if l2 <= $stack10 goto l3 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>(l1)  NO 
(1926, 0): if l0 != 5 goto (branch)  NO 
(1924, 0): if l0 != 3 goto (branch)  NO 
(1732, 1): if $stack1 == 0 goto $stack4 = 1  NO 
(1922, 0): if l0 != 1 goto (branch)  NO 


comp5111.assignment.cut.Subject$ArrayTasks


In the following all of the instructions which were covered will be shown: 

(1609, 0): if l0 == null goto $stack1 = 0  YES, jumped to: (1609, 1) (1609, 3) 
(1619, 1): if $stack1 != 0 goto $stack2 = 0  YES, jumped to: (1619, 4) 

In the following all of the instructions which were not covered will be shown: 

(1664, 1): if l2 < $stack4 goto (branch)  NO 
(1661, 0): if l0 == null goto return -1  NO 
(1661, 1): if l2 >= 0 goto $stack4 = lengthof l0  NO 
(1674, 1): if l3 < 0 goto return -1  NO 
(1675, 2): if $stack10 == 0 goto l3 = l3 + -1  NO 
(1673, 3): if $stack7 == 0 goto return -1  NO 
(1669, 1): if $stack12 != null goto l3 = l3 + -1  NO 
(1667, 0): if l1 != null goto $stack5 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>()  NO 
(1668, 1): if l3 < 0 goto (branch)  NO 
(1619, 1): if $stack1 != 0 goto $stack2 = 0  NO 


comp5111.assignment.cut.Subject


In the following all of the instructions which were covered will be shown: 


In the following all of the instructions which were not covered will be shown: 



comp5111.assignment.cut.Subject$FilenameTasks


In the following all of the instructions which were covered will be shown: 

(81, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>(l0)  YES, jumped to: (84, 0) 
(218, 4): if $stack10 != 0 goto l2 = l2 + 1  YES, jumped to: (213, 0) 
(245, 1): if $stack1 < 0 goto return l0  YES, jumped to: (249, 0) 
(100, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int)>(47)  YES, jumped to: (103, 0) 
(214, 2): if $stack6 == 0 goto $stack8 = <comp5111.assignment.cut.Subject$FilenameTasks: java.util.regex.Pattern REG_NAME_PART_PATTERN>  YES, jumped to: (218, 0) 
(213, 2): if l2 >= $stack4 goto return 1  YES, jumped to: (214, 0) (222, 0) 
(116, 1): if $stack7 == 0 goto return 0  YES, jumped to: (117, 0) 

In the following all of the instructions which were not covered will be shown: 

(155, 1): if $stack30 == 0 goto $stack31 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>("::")  NO 
(279, 0): if l8 != 63 goto (branch)  NO 
(275, 1): if $stack20 == 0 goto (branch)  NO 
(81, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>(l0)  NO 
(172, 0): if l4 <= 1 goto l3#27 = l3#27 + 1  NO 
(168, 2): if l5 >= $stack14 goto (branch)  NO 
(185, 1): if $stack19 <= 4 goto l7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l6, 16)  NO 
(218, 4): if $stack10 != 0 goto l2 = l2 + 1  NO 
(214, 2): if $stack6 == 0 goto $stack8 = <comp5111.assignment.cut.Subject$FilenameTasks: java.util.regex.Pattern REG_NAME_PART_PATTERN>  NO 
(148, 1): if $stack10 == 0 goto $stack11 = virtualinvoke l0.<java.lang.String: boolean endsWith(java.lang.String)>(":")  NO 
(148, 3): if $stack45 == 0 goto return 0  NO 
(194, 0): if l7 < 0 goto return 0  NO 
(194, 1): if l7 <= 65535 goto l3#27 = l3#27 + 1  NO 
(289, 1): if $stack13 == 0 goto $stack14 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(128, 1): if $stack11 <= 1 goto l2 = l2 + 1  NO 
(128, 3): if $stack14 == 0 goto l2 = l2 + 1  NO 
(124, 0): if l4 <= 255 goto $stack11 = virtualinvoke l3.<java.lang.String: int length()>()  NO 
(153, 0): if l1 == 0 goto $stack13 = lengthof l2  NO 
(281, 0): if l4 == 42 goto l4 = l8  NO 
(54, 0): if l0 != 92 goto $stack1 = new java.lang.IllegalArgumentException  NO 
(149, 1): if $stack11 == 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  NO 
(116, 1): if $stack7 == 0 goto return 0  NO 
(149, 3): if $stack41 != 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  NO 
(116, 3): if $stack8 == 4 goto l2 = 1  NO 
(145, 0): if l1 == 0 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  NO 
(178, 2): if l5 != $stack18 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  NO 
(273, 2): if l7 >= l6 goto $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()  NO 
(145, 3): if $stack49 == $stack50 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  NO 
(178, 4): if $stack24 == 0 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  NO 
(170, 1): if $stack16 == 0 goto l4 = 0  NO 
(232, 0): if l0 == 47 goto $stack1 = 1  NO 
(265, 1): if $stack9 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  NO 
(232, 1): if l0 != 92 goto $stack1 = 0  NO 
(265, 3): if $stack32 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  NO 
(100, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int)>(47)  NO 
(158, 1): if $stack31 == 0 goto $stack32 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(158, 3): if $stack36 != 0 goto $stack32 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(121, 1): if l2 > 4 goto return 1  NO 
(216, 2): if l2 != $stack14 goto $stack15 = 0  NO 
(245, 1): if $stack1 < 0 goto return l0  NO 
(51, 0): if l0 != 47 goto (branch)  NO 
(179, 1): if $stack27 != 0 goto l3#27 = l3#27 + 2  NO 
(274, 0): if l8 == 63 goto $stack20 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()  NO 
(274, 1): if l8 != 42 goto virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(l8)  NO 
(200, 0): if l3#27 > 8 goto $stack15 = 0  NO 
(200, 1): if l3#27 >= 8 goto $stack15 = 1  NO 
(200, 2): if l1 == 0 goto $stack15 = 0  NO 
(163, 1): if $stack13 <= 8 goto l3#27 = 0  NO 


comp5111.assignment.cut.Subject$StringTasks


In the following all of the instructions which were covered will be shown: 

(448, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (451, 0) 
(673, 1): if $stack13 != l7 goto l8 = l8 + 1  YES, jumped to: (672, 0) 
(611, 3): if $stack10 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (614, 0) 
(417, 2): if $stack6 != 0 goto l2 = l2 + 1  YES, jumped to: (418, 0) 
(349, 1): if l2 >= l1 goto return 1  YES, jumped to: (350, 0) 
(663, 0): if l0 == null goto return 1  YES, jumped to: (663, 1) 
(663, 1): if l1 != null goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (666, 0) 
(494, 1): if $stack4 != 1 goto $stack5 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (502, 0) 
(556, 1): if $stack9 == 0 goto l2 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (559, 0) (557, 0) 
(620, 1): if l8 >= l3 goto l6 = l6 + 1  YES, jumped to: (621, 0) (618, 0) 
(490, 1): if $stack3 == 0 goto $stack4 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (494, 0) 
(618, 1): if l6 >= l2 goto return 0  YES, jumped to: (619, 0) (636, 0) 
(323, 0): if l0 != null goto $stack1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (323, 3) 
(672, 1): if l8 >= l4 goto l6 = l6 + 1  YES, jumped to: (673, 0) (670, 0) 
(416, 1): if l2 >= l1 goto return 1  YES, jumped to: (417, 0) 
(670, 1): if l6 >= l2 goto return 1  YES, jumped to: (671, 0) (688, 0) 
(509, 0): if l2 == 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  YES, jumped to: (510, 0) 
(350, 2): if $stack5 != 0 goto l2 = l2 + 1  YES, jumped to: (351, 0) 
(412, 1): if $stack3 == 0 goto l1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (413, 0) (415, 0) 
(346, 0): if l1 != 0 goto l2 = 0  YES, jumped to: (347, 0) (349, 0) 
(377, 0): if l0 == null goto $stack2 = 1  YES, jumped to: (377, 1) 
(505, 0): if l2 != 10 goto (branch)  YES, jumped to: (509, 0) 
(377, 2): if $stack1 != 0 goto $stack2 = 0  YES, jumped to: (377, 3) (377, 5) 
(563, 3): if l6 >= $stack15 goto $stack16 = new java.lang.String  YES, jumped to: (580, 0) 
(621, 1): if $stack15 != l7 goto l8 = l8 + 1  YES, jumped to: (620, 0) 
(458, 0): if l4 != 10 goto return l3  YES, jumped to: (461, 0) 
(553, 0): if l0 != null goto $stack9 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (556, 0) 
(452, 0): if l1 >= 2 goto l2 = l1 - 1  YES, jumped to: (455, 0) 
(611, 1): if $stack9 != 0 goto return 0  YES, jumped to: (611, 2) (612, 0) 

In the following all of the instructions which were not covered will be shown: 

(448, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int length()>()  NO 
(799, 1): if $stack4 == 0 goto (branch)  NO 
(349, 1): if l2 >= l1 goto return 1  NO 
(795, 0): if l1 != null goto $stack4 = virtualinvoke l1.<java.lang.String: boolean isEmpty()>()  NO 
(506, 2): if $stack12 != 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  NO 
(568, 0): if l1 == 0 goto $stack25 = new java.lang.String  NO 
(568, 1): if l7 != 2 goto $stack25 = new java.lang.String  NO 
(663, 0): if l0 == null goto return 1  NO 
(791, 0): if l2 != 0 goto (branch)  NO 
(568, 2): if l5 != 1 goto $stack25 = new java.lang.String  NO 
(630, 0): if l6 >= l4 goto l8 = l8 + 1  NO 
(663, 1): if l1 != null goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(626, 0): if l8 != l5 goto (branch)  NO 
(630, 5): if $stack21 != $stack22 goto l8 = l8 + 1  NO 
(849, 0): if l1 == 0 goto $stack8 = 0  NO 
(849, 1): if l2 == 0 goto $stack8 = 0  NO 
(494, 1): if $stack4 != 1 goto $stack5 = virtualinvoke l0.<java.lang.String: int length()>()  NO 
(622, 1): if $stack18 != 0 goto (branch)  NO 
(845, 2): if $stack12 == 0 goto l4 = l4 + 1  NO 
(490, 1): if $stack3 == 0 goto $stack4 = virtualinvoke l0.<java.lang.String: int length()>()  NO 
(742, 0): if l0 != l1 goto (branch)  NO 
(833, 1): if $stack5 != 0 goto return 0  NO 
(416, 1): if l2 >= l1 goto return 1  NO 
(833, 3): if $stack6 != 1 goto l1 = 0  NO 
(350, 2): if $stack5 != 0 goto l2 = l2 + 1  NO 
(796, 0): if l2 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  NO 
(796, 4): if $stack15 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  NO 
(565, 0): if l7 != l5 goto (branch)  NO 
(751, 1): if $stack6 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(751, 3): if $stack12 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(458, 0): if l4 != 10 goto return l3  NO 
(553, 0): if l0 != null goto $stack9 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  NO 
(458, 3): if $stack9 != 13 goto return l3  NO 
(611, 3): if $stack10 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(673, 1): if $stack13 != l7 goto l8 = l8 + 1  NO 
(417, 2): if $stack6 != 0 goto l2 = l2 + 1  NO 
(863, 0): if l0 == null goto return l0  NO 
(863, 1): if l1 == null goto return l0  NO 
(863, 2): if l2 != null goto l3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>(l1)  NO 
(570, 0): if l8 == l4 goto (branch)  NO 
(756, 1): if l3 >= l2 goto return 1  NO 
(496, 0): if l1 == 13 goto return ""  NO 
(880, 0): if l6 != l4 goto $stack12 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l3)  NO 
(496, 1): if l1 != 10 goto return l0  NO 
(682, 0): if l6 >= l3 goto l8 = l8 + 1  NO 
(748, 2): if $stack4 == $stack5 goto $stack6 = l0 instanceof java.lang.String  NO 
(843, 2): if $stack10 == 0 goto $stack11 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 
(678, 0): if l8 != l5 goto (branch)  NO 
(839, 1): if l4 >= l3 goto (branch)  NO 
(682, 5): if $stack19 != $stack20 goto l8 = l8 + 1  NO 
(323, 0): if l0 != null goto $stack1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(802, 0): if l2 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  NO 
(674, 1): if $stack16 != 0 goto (branch)  NO 
(802, 4): if $stack8 == -1 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  NO 
(509, 0): if l2 == 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  NO 
(377, 0): if l0 == null goto $stack2 = 1  NO 
(505, 0): if l2 != 10 goto (branch)  NO 
(757, 2): if $stack8 == $stack9 goto l3 = l3 + 1  NO 
(563, 3): if l6 >= $stack15 goto $stack16 = new java.lang.String  NO 
(621, 1): if $stack15 != l7 goto l8 = l8 + 1  NO 
(877, 1): if l4 != $stack11 goto (branch)  NO 
(745, 0): if l0 == null goto return 0  NO 
(745, 1): if l1 != null goto $stack4 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(840, 0): if l1 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 
(840, 1): if l2 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 
(869, 0): if l3 >= 0 goto l4 = virtualinvoke l0.<java.lang.String: int length()>()  NO 
(452, 0): if l1 >= 2 goto l2 = l1 - 1  NO 


comp5111.assignment.cut.Subject$BooleanTasks


In the following all of the instructions which were covered will be shown: 


In the following all of the instructions which were not covered will be shown: 

(1393, 0): if l0 != l1 goto (branch)  NO 
(1396, 0): if l0 == 0 goto $stack2 = -1  NO 



Coverage of Test Suite: comp5111.assignment.cut.RegressionTest0

comp5111.assignment.cut.Subject$NumberTasks
45 Branches from a total of 172 Branches were covered.
Percentage: 26.16279069767442%

comp5111.assignment.cut.Subject$CharTasks
17 Branches from a total of 24 Branches were covered.
Percentage: 70.83333333333334%

comp5111.assignment.cut.Subject$GregorianTasks
73 Branches from a total of 94 Branches were covered.
Percentage: 77.6595744680851%

comp5111.assignment.cut.Subject$ArrayTasks
21 Branches from a total of 22 Branches were covered.
Percentage: 95.45454545454545%

comp5111.assignment.cut.Subject
0 Branches from a total of 0 Branches were covered.
Percentage: 100.0%

comp5111.assignment.cut.Subject$FilenameTasks
34 Branches from a total of 98 Branches were covered.
Percentage: 34.69387755102041%

comp5111.assignment.cut.Subject$StringTasks
96 Branches from a total of 152 Branches were covered.
Percentage: 63.1578947368421%

comp5111.assignment.cut.Subject$BooleanTasks
4 Branches from a total of 4 Branches were covered.
Percentage: 100.0%

Overall Branch Coverage: 51.23674911660777%



In the following part you can see which branches were executed. Before every branch instruction you can see two numbers
in the form of (x,y), for Example (1,5). This indicates that the following Instruction can be found on line x of the Java code. 
y denotes that it is the y-th Jimple Instruction generated from the corresponding Java line. Only Branch instructions will be shown.
After each listed instructions you can find a NO if one or more branches weren't executed and a YES if one or more branches were takenIf it was executed you will also find a List of (x,y) values which denote the statements to which we jumped.



comp5111.assignment.cut.Subject$NumberTasks


In the following all of the instructions which were covered will be shown: 

(1181, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(l0)  YES, jumped to: (1184, 0) 
(1340, 1): if $stack5 != 45 goto $stack6 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 0)  YES, jumped to: (1346, 0) 
(1334, 1): if $stack1 == 0 goto $stack2 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (1335, 0) (1337, 0) 
(1270, 1): if $stack13 == 0 goto $stack14 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l1)  YES, jumped to: (1273, 0) 
(979, 1): if $stack25 != 0 goto $stack119 = 0  YES, jumped to: (979, 2) 
(946, 1): if $stack138 == 0 goto l7 = l7 + 1  YES, jumped to: (945, 0) 
(979, 2): if l5#11 == 46 goto $stack119 = 0  YES, jumped to: (979, 3) 
(1264, 0): if l4 != 43 goto $stack8 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l1)  YES, jumped to: (1267, 0) 
(1359, 0): if l4 != 0 goto l3 = l3 + 1  YES, jumped to: (1359, 1) 
(1004, 0): if l10 <= -1 goto l8 = null  YES, jumped to: (1007, 0) 
(1359, 3): if $stack10 != 0 goto l3 = l3 + 1  YES, jumped to: (1360, 0) 
(1353, 0): if $stack13 == 0 goto (branch)  YES, jumped to: (1356, 0) 
(934, 0): if l0 != null goto $stack15 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  YES, jumped to: (937, 0) 
(1254, 1): if $stack6 == 0 goto l1 = 0  YES, jumped to: (1257, 0) (1255, 0) 
(1351, 2): if l3 >= $stack5 goto return 1  YES, jumped to: (1352, 0) 
(992, 0): if l10 <= -1 goto (branch)  YES, jumped to: (999, 0) 
(1215, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l0)  YES, jumped to: (1219, 0) 
(1118, 0): if $stack7 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1)  YES, jumped to: (1118, 3) 
(1116, 0): if l2 == 45 goto $stack7 = 1  YES, jumped to: (1116, 1) 
(1116, 1): if l2 != 43 goto $stack7 = 0  YES, jumped to: (1116, 4) 
(1273, 1): if $stack14 == 0 goto $stack9 = new java.math.BigInteger  YES, jumped to: (1278, 0) 
(951, 0): if l4 <= 0 goto $stack19 = l2 - 1  YES, jumped to: (969, 0) 
(1337, 3): if $stack4 != 46 goto $stack5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)  YES, jumped to: (1340, 0) 
(980, 0): if l9 <= -1 goto (branch)  YES, jumped to: (992, 0) 
(1267, 1): if $stack8 != 0 goto l2 = 16  YES, jumped to: (1267, 2) 
(1234, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Long: java.lang.Long decode(java.lang.String)>(l0)  YES, jumped to: (1237, 0) 
(1267, 3): if $stack12 == 0 goto $stack13 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l1)  YES, jumped to: (1270, 0) 
(1296, 1): if $stack1 == 0 goto $stack2 = new java.math.BigDecimal  YES, jumped to: (1299, 0) (1297, 0) 
(945, 2): if l7 >= l6 goto (branch)  YES, jumped to: (945, 3) (951, 0) 
(943, 1): if $stack18 == 43 goto $stack145 = 1  YES, jumped to: (943, 2) 
(1261, 0): if l4 != 45 goto (branch)  YES, jumped to: (1264, 0) 
(1197, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(l0)  YES, jumped to: (1200, 0) 
(1292, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  YES, jumped to: (1296, 0) 
(943, 3): if $stack144 != 45 goto $stack145 = 0  YES, jumped to: (943, 6) 
(1356, 0): if l2 <= 1 goto (branch)  YES, jumped to: (1359, 0) 
(1003, 0): if l11 == 0 goto (branch)  YES, jumped to: (1004, 0) 
(937, 1): if $stack15 == 0 goto $stack16 = newarray (java.lang.String)[3]  YES, jumped to: (938, 0) (941, 0) 
(999, 0): if $stack119 == 0 goto $stack101 = l2  YES, jumped to: (999, 1) 
(1352, 1): if $stack6 != 46 goto $stack13 = 0  YES, jumped to: (1352, 4) 
(1251, 0): if l0 != null goto $stack6 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (1254, 0) 

In the following all of the instructions which were not covered will be shown: 

(993, 0): if l10 <= l2 goto l6#28 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>(l0, l10)  NO 
(1092, 4): if $stack33 != 0 goto l14 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>(l0)  NO 
(1088, 2): if $stack43 != 0 goto $stack44 = virtualinvoke l12#81.<java.lang.Float: java.lang.String toString()>()  NO 
(1092, 6): if $stack38 == 0 goto (branch)  NO 
(1088, 4): if $stack48 == 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1340, 1): if $stack5 != 45 goto $stack6 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 0)  NO 
(981, 0): if l10 <= -1 goto $stack107 = l9 + 1  NO 
(1270, 1): if $stack13 == 0 goto $stack14 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l1)  NO 
(1068, 0): if l7#20 != null goto l12#81 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)  NO 
(1068, 1): if l8 != null goto l12#81 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)  NO 
(1163, 2): if l1 < 0 goto return 1  NO 
(1353, 0): if $stack13 == 0 goto (branch)  NO 
(1031, 1): if $stack74 != 0 goto (branch)  NO 
(1031, 4): if $stack83 != 0 goto return l13#63  NO 
(961, 0): if l6 > 16 goto $stack122 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>(l0)  NO 
(1031, 6): if $stack84 == 0 goto (branch)  NO 
(961, 1): if l6 != 16 goto (branch)  NO 
(961, 2): if l5#11 <= 55 goto (branch)  NO 
(1279, 0): if l3 == 0 goto $stack11 = $stack9  NO 
(1089, 3): if $stack46 == 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1118, 0): if $stack7 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1)  NO 
(1341, 1): if $stack7 != 1 goto $stack8 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 1)  NO 
(953, 1): if l6 >= l2 goto l6 = l2 - l4  NO 
(1015, 0): if l7#20 != null goto $stack62 = new java.lang.NumberFormatException  NO 
(982, 0): if l10 < l9 goto $stack114 = new java.lang.NumberFormatException  NO 
(1015, 1): if l8 != null goto $stack62 = new java.lang.NumberFormatException  NO 
(1337, 3): if $stack4 != 46 goto $stack5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)  NO 
(982, 1): if l10 <= l2 goto $stack116 = l9 + 1  NO 
(1234, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Long: java.lang.Long decode(java.lang.String)>(l0)  NO 
(1267, 1): if $stack8 != 0 goto l2 = 16  NO 
(1267, 3): if $stack12 == 0 goto $stack13 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l1)  NO 
(1197, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(l0)  NO 
(1292, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  NO 
(1003, 0): if l11 == 0 goto (branch)  NO 
(1164, 1): if $stack3 == 48 goto l1 = l1 + -1  NO 
(1160, 0): if l0 != null goto $stack2 = virtualinvoke l0.<java.lang.String: int length()>()  NO 
(999, 0): if $stack119 == 0 goto $stack101 = l2  NO 
(1094, 3): if $stack37 != 0 goto return l14  NO 
(1251, 0): if l0 != null goto $stack6 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  NO 
(1181, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(l0)  NO 
(1148, 1): if $stack2 == 0 goto $stack4 = 0  NO 
(1148, 3): if $stack3 == 0 goto $stack4 = 0  NO 
(1045, 1): if $stack76 != 0 goto (branch)  NO 
(979, 1): if $stack25 != 0 goto $stack119 = 0  NO 
(946, 1): if $stack138 == 0 goto l7 = l7 + 1  NO 
(979, 2): if l5#11 == 46 goto $stack119 = 0  NO 
(1045, 4): if $stack79 != 0 goto return l13#69  NO 
(1264, 0): if l4 != 43 goto $stack8 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l1)  NO 
(1045, 6): if $stack80 == 0 goto (branch)  NO 
(1359, 0): if l4 != 0 goto l3 = l3 + 1  NO 
(1004, 0): if l10 <= -1 goto l8 = null  NO 
(1359, 3): if $stack10 != 0 goto l3 = l3 + 1  NO 
(1004, 2): if l10 >= $stack90 goto l8 = null  NO 
(934, 0): if l0 != null goto $stack15 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  NO 
(1351, 2): if l3 >= $stack5 goto return 1  NO 
(992, 0): if l10 <= -1 goto (branch)  NO 
(1215, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l0)  NO 
(1087, 1): if $stack29 != 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1116, 0): if l2 == 45 goto $stack7 = 1  NO 
(955, 0): if l5#11 == 48 goto l4 = l4 + 1  NO 
(988, 1): if $stack119 == 0 goto $stack110 = l2  NO 
(1116, 1): if l2 != 43 goto $stack7 = 0  NO 
(1017, 1): if $stack65 != 0 goto $stack66 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>(l12)  NO 
(1273, 1): if $stack14 == 0 goto $stack9 = new java.math.BigInteger  NO 
(951, 0): if l4 <= 0 goto $stack19 = l2 - 1  NO 
(1017, 3): if $stack68 != 45 goto $stack66 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>(l12)  NO 
(1273, 4): if $stack19 <= $stack20 goto $stack9 = new java.math.BigInteger  NO 
(980, 0): if l9 <= -1 goto (branch)  NO 
(1017, 6): if $stack71 != 0 goto $stack67 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>(l12)  NO 
(1017, 8): if $stack66 == 0 goto $stack62 = new java.lang.NumberFormatException  NO 
(943, 1): if $stack18 == 43 goto $stack145 = 1  NO 
(1261, 0): if l4 != 45 goto (branch)  NO 
(943, 3): if $stack144 != 45 goto $stack145 = 0  NO 
(1356, 0): if l2 <= 1 goto (branch)  NO 
(1063, 0): if l10 <= -1 goto l8 = null  NO 
(1352, 1): if $stack6 != 46 goto $stack13 = 0  NO 
(1063, 2): if l10 >= $stack55 goto l8 = null  NO 
(964, 0): if l6 > 8 goto $stack123 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>(l0)  NO 
(964, 1): if l6 != 8 goto $stack124 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>(l0)  NO 
(1092, 1): if $stack30 != 0 goto (branch)  NO 
(964, 2): if l5#11 <= 55 goto $stack124 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>(l0)  NO 


comp5111.assignment.cut.Subject$CharTasks


In the following all of the instructions which were covered will be shown: 

(1441, 0): if l0 == null goto $stack2 = l1  YES, jumped to: (1441, 1) 
(1536, 0): if l0 < 65 goto $stack1 = 0  YES, jumped to: (1536, 4) (1536, 1) 
(1536, 1): if l0 > 90 goto $stack1 = 0  YES, jumped to: (1536, 4) 
(1517, 1): if $stack1 != 0 goto $stack3 = 1  YES, jumped to: (1517, 2) 
(1517, 3): if $stack2 == 0 goto $stack3 = 0  YES, jumped to: (1517, 6) (1517, 4) 
(1498, 0): if l0 < 32 goto $stack1 = 1  YES, jumped to: (1498, 1) (1498, 2) 
(1498, 1): if l0 != 127 goto $stack1 = 0  YES, jumped to: (1498, 4) 
(1479, 0): if l0 < 32 goto $stack1 = 0  YES, jumped to: (1479, 1) (1479, 4) 
(1479, 1): if l0 >= 127 goto $stack1 = 0  YES, jumped to: (1479, 2) 
(1460, 0): if l0 >= 128 goto $stack1 = 0  YES, jumped to: (1460, 1) 
(1555, 0): if l0 < 97 goto $stack1 = 0  YES, jumped to: (1555, 1) (1555, 4) 
(1555, 1): if l0 > 122 goto $stack1 = 0  YES, jumped to: (1555, 2) 

In the following all of the instructions which were not covered will be shown: 

(1441, 0): if l0 == null goto $stack2 = l1  NO 
(1536, 1): if l0 > 90 goto $stack1 = 0  NO 
(1517, 1): if $stack1 != 0 goto $stack3 = 1  NO 
(1498, 1): if l0 != 127 goto $stack1 = 0  NO 
(1479, 1): if l0 >= 127 goto $stack1 = 0  NO 
(1460, 0): if l0 >= 128 goto $stack1 = 0  NO 
(1555, 1): if l0 > 122 goto $stack1 = 0  NO 


comp5111.assignment.cut.Subject$GregorianTasks


In the following all of the instructions which were covered will be shown: 

(1761, 0): if l1 != 2 goto $stack4 = new java.lang.IllegalArgumentException  YES, jumped to: (1762, 0) (1761, 1) 
(1732, 3): if $stack2 != 0 goto $stack4 = 1  YES, jumped to: (1732, 6) 
(1728, 0): if l0 <= 1900 goto $stack1 = l0 & 3  YES, jumped to: (1732, 0) (1728, 1) 
(1759, 0): if l1 == 1 goto return 31  YES, jumped to: (1759, 1) (1759, 7) 
(1761, 2): if $stack6 == 0 goto $stack7 = 28  YES, jumped to: (1761, 3) 
(1728, 1): if l0 >= 2100 goto $stack1 = l0 & 3  YES, jumped to: (1732, 0) 
(1759, 1): if l1 == 3 goto return 31  YES, jumped to: (1759, 2) (1759, 7) 
(1759, 2): if l1 == 5 goto return 31  YES, jumped to: (1759, 3) (1759, 7) 
(1759, 3): if l1 == 7 goto return 31  YES, jumped to: (1759, 4) (1759, 7) 
(1821, 1): if l2 <= $stack9 goto return  YES, jumped to: (1827, 0) 
(1759, 4): if l1 == 8 goto return 31  YES, jumped to: (1759, 5) (1759, 7) 
(1759, 5): if l1 == 10 goto return 31  YES, jumped to: (1759, 6) (1759, 7) 
(1759, 6): if l1 != 12 goto (branch)  YES, jumped to: (1760, 0) 
(1815, 0): if l1 < 1 goto $stack5 = new java.lang.IllegalArgumentException  YES, jumped to: (1815, 1) (1816, 0) 
(1815, 1): if l1 <= 12 goto (branch)  YES, jumped to: (1818, 0) (1816, 0) 
(1904, 0): if l1 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1)  YES, jumped to: (1905, 0) 
(1931, 0): if l0 != 10 goto (branch)  YES, jumped to: (1931, 1) 
(1929, 0): if l0 != 8 goto (branch)  YES, jumped to: (1930, 0) (1929, 1) 
(1927, 0): if l0 != 6 goto (branch)  YES, jumped to: (1928, 0) (1927, 1) 
(1861, 0): if l2 < 1 goto $stack8 = new java.lang.IllegalArgumentException  YES, jumped to: (1862, 0) (1861, 1) 
(1925, 0): if l0 != 4 goto (branch)  YES, jumped to: (1926, 0) 
(1861, 1): if l2 <= 31 goto $stack10 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)  YES, jumped to: (1864, 0) (1862, 0) 
(1923, 0): if l0 != 2 goto (branch)  YES, jumped to: (1924, 0) 
(1890, 0): if l7 > 0 goto return l7  YES, jumped to: (1894, 0) (1891, 0) 
(1760, 0): if l1 == 4 goto return 30  YES, jumped to: (1760, 1) (1760, 4) 
(1760, 1): if l1 == 6 goto return 30  YES, jumped to: (1760, 2) (1760, 4) 
(1760, 2): if l1 == 9 goto return 30  YES, jumped to: (1760, 3) (1760, 4) 
(1760, 3): if l1 != 11 goto (branch)  YES, jumped to: (1761, 0) (1760, 4) 
(1818, 0): if l2 < 1 goto $stack7 = new java.lang.IllegalArgumentException  YES, jumped to: (1818, 1) (1819, 0) 
(1818, 1): if l2 <= 31 goto $stack9 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)  YES, jumped to: (1821, 0) (1819, 0) 
(1880, 0): if l4 >= 0 goto l6 = staticinvoke <java.lang.Math: int floorDiv(int,int)>(l5, 4)  YES, jumped to: (1881, 0) (1887, 0) 
(1878, 0): if l1 > 2 goto l6 = staticinvoke <java.lang.Math: int floorDiv(int,int)>(l5, 4)  YES, jumped to: (1887, 0) (1879, 0) 
(1909, 0): if l2 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l2)  YES, jumped to: (1912, 0) 
(1812, 0): if l0 < -999999999 goto $stack3 = new java.lang.IllegalArgumentException  YES, jumped to: (1812, 1) 
(1812, 1): if l0 <= 999999999 goto (branch)  YES, jumped to: (1815, 0) 
(1874, 0): if l4 >= 0 goto (branch)  YES, jumped to: (1878, 0) (1875, 0) 
(1930, 0): if l0 != 9 goto (branch)  YES, jumped to: (1931, 0) (1930, 1) 
(1928, 0): if l0 != 7 goto (branch)  YES, jumped to: (1929, 0) 
(1864, 1): if l2 <= $stack10 goto l3 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>(l1)  YES, jumped to: (1870, 0) (1865, 0) 
(1926, 0): if l0 != 5 goto (branch)  YES, jumped to: (1927, 0) (1926, 1) 
(1924, 0): if l0 != 3 goto (branch)  YES, jumped to: (1925, 0) (1924, 1) 
(1732, 1): if $stack1 == 0 goto $stack4 = 1  YES, jumped to: (1732, 2) (1732, 6) 
(1922, 0): if l0 != 1 goto (branch)  YES, jumped to: (1923, 0) (1922, 1) 

In the following all of the instructions which were not covered will be shown: 

(1732, 3): if $stack2 != 0 goto $stack4 = 1  NO 
(1728, 1): if l0 >= 2100 goto $stack1 = l0 & 3  NO 
(1732, 5): if $stack3 != 0 goto $stack4 = 0  NO 
(1761, 2): if $stack6 == 0 goto $stack7 = 28  NO 
(1821, 1): if l2 <= $stack9 goto return  NO 
(1759, 6): if l1 != 12 goto (branch)  NO 
(1904, 0): if l1 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1)  NO 
(1933, 0): if l0 != 12 goto $stack1 = new java.lang.IllegalArgumentException  NO 
(1931, 0): if l0 != 10 goto (branch)  NO 
(1925, 0): if l0 != 4 goto (branch)  NO 
(1923, 0): if l0 != 2 goto (branch)  NO 
(1729, 1): if $stack7 != 0 goto $stack8 = 0  NO 
(1909, 0): if l2 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l2)  NO 
(1812, 0): if l0 < -999999999 goto $stack3 = new java.lang.IllegalArgumentException  NO 
(1812, 1): if l0 <= 999999999 goto (branch)  NO 
(1932, 0): if l0 != 11 goto (branch)  NO 
(1928, 0): if l0 != 7 goto (branch)  NO 


comp5111.assignment.cut.Subject$ArrayTasks


In the following all of the instructions which were covered will be shown: 

(1664, 1): if l2 < $stack4 goto (branch)  YES, jumped to: (1665, 0) (1667, 0) 
(1661, 0): if l0 == null goto return -1  YES, jumped to: (1661, 1) (1662, 0) 
(1661, 1): if l2 >= 0 goto $stack4 = lengthof l0  YES, jumped to: (1662, 0) (1664, 0) 
(1609, 0): if l0 == null goto $stack1 = 0  YES, jumped to: (1609, 1) (1609, 3) 
(1674, 1): if l3 < 0 goto return -1  YES, jumped to: (1675, 0) (1680, 0) 
(1675, 2): if $stack10 == 0 goto l3 = l3 + -1  YES, jumped to: (1676, 0) (1674, 0) 
(1673, 3): if $stack7 == 0 goto return -1  YES, jumped to: (1680, 0) (1674, 0) 
(1669, 1): if $stack12 != null goto l3 = l3 + -1  YES, jumped to: (1668, 0) 
(1667, 0): if l1 != null goto $stack5 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>()  YES, jumped to: (1673, 0) (1668, 0) 
(1668, 1): if l3 < 0 goto (branch)  YES, jumped to: (1668, 2) (1669, 0) 
(1619, 1): if $stack1 != 0 goto $stack2 = 0  YES, jumped to: (1619, 4) (1619, 2) 

In the following all of the instructions which were not covered will be shown: 

(1669, 1): if $stack12 != null goto l3 = l3 + -1  NO 


comp5111.assignment.cut.Subject


In the following all of the instructions which were covered will be shown: 


In the following all of the instructions which were not covered will be shown: 



comp5111.assignment.cut.Subject$FilenameTasks


In the following all of the instructions which were covered will be shown: 

(153, 0): if l1 == 0 goto $stack13 = lengthof l2  YES, jumped to: (163, 0) 
(54, 0): if l0 != 92 goto $stack1 = new java.lang.IllegalArgumentException  YES, jumped to: (57, 0) 
(149, 1): if $stack11 == 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  YES, jumped to: (152, 0) 
(213, 2): if l2 >= $stack4 goto return 1  YES, jumped to: (214, 0) (222, 0) 
(116, 1): if $stack7 == 0 goto return 0  YES, jumped to: (117, 0) 
(81, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>(l0)  YES, jumped to: (84, 0) 
(145, 0): if l1 == 0 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  YES, jumped to: (148, 0) 
(178, 2): if l5 != $stack18 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  YES, jumped to: (178, 3) 
(178, 4): if $stack24 == 0 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  YES, jumped to: (185, 0) 
(172, 0): if l4 <= 1 goto l3#27 = l3#27 + 1  YES, jumped to: (198, 0) 
(170, 1): if $stack16 == 0 goto l4 = 0  YES, jumped to: (171, 0) (176, 0) 
(232, 0): if l0 == 47 goto $stack1 = 1  YES, jumped to: (232, 1) 
(265, 1): if $stack9 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (265, 2) 
(232, 1): if l0 != 92 goto $stack1 = 0  YES, jumped to: (232, 4) 
(168, 2): if l5 >= $stack14 goto (branch)  YES, jumped to: (169, 0) (200, 0) 
(265, 3): if $stack32 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (266, 0) 
(100, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int)>(47)  YES, jumped to: (103, 0) 
(185, 1): if $stack19 <= 4 goto l7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l6, 16)  YES, jumped to: (190, 0) (186, 0) 
(218, 4): if $stack10 != 0 goto l2 = l2 + 1  YES, jumped to: (213, 0) (219, 0) 
(216, 2): if l2 != $stack14 goto $stack15 = 0  YES, jumped to: (216, 3) 
(245, 1): if $stack1 < 0 goto return l0  YES, jumped to: (249, 0) 
(214, 2): if $stack6 == 0 goto $stack8 = <comp5111.assignment.cut.Subject$FilenameTasks: java.util.regex.Pattern REG_NAME_PART_PATTERN>  YES, jumped to: (218, 0) (216, 0) 
(51, 0): if l0 != 47 goto (branch)  YES, jumped to: (54, 0) 
(148, 1): if $stack10 == 0 goto $stack11 = virtualinvoke l0.<java.lang.String: boolean endsWith(java.lang.String)>(":")  YES, jumped to: (149, 0) 
(200, 0): if l3#27 > 8 goto $stack15 = 0  YES, jumped to: (200, 1) 
(200, 1): if l3#27 >= 8 goto $stack15 = 1  YES, jumped to: (200, 2) 
(200, 2): if l1 == 0 goto $stack15 = 0  YES, jumped to: (200, 5) 
(163, 1): if $stack13 <= 8 goto l3#27 = 0  YES, jumped to: (166, 0) 

In the following all of the instructions which were not covered will be shown: 

(155, 1): if $stack30 == 0 goto $stack31 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>("::")  NO 
(279, 0): if l8 != 63 goto (branch)  NO 
(275, 1): if $stack20 == 0 goto (branch)  NO 
(81, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>(l0)  NO 
(172, 0): if l4 <= 1 goto l3#27 = l3#27 + 1  NO 
(148, 1): if $stack10 == 0 goto $stack11 = virtualinvoke l0.<java.lang.String: boolean endsWith(java.lang.String)>(":")  NO 
(148, 3): if $stack45 == 0 goto return 0  NO 
(194, 0): if l7 < 0 goto return 0  NO 
(194, 1): if l7 <= 65535 goto l3#27 = l3#27 + 1  NO 
(289, 1): if $stack13 == 0 goto $stack14 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(128, 1): if $stack11 <= 1 goto l2 = l2 + 1  NO 
(128, 3): if $stack14 == 0 goto l2 = l2 + 1  NO 
(124, 0): if l4 <= 255 goto $stack11 = virtualinvoke l3.<java.lang.String: int length()>()  NO 
(153, 0): if l1 == 0 goto $stack13 = lengthof l2  NO 
(281, 0): if l4 == 42 goto l4 = l8  NO 
(54, 0): if l0 != 92 goto $stack1 = new java.lang.IllegalArgumentException  NO 
(149, 1): if $stack11 == 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  NO 
(116, 1): if $stack7 == 0 goto return 0  NO 
(149, 3): if $stack41 != 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  NO 
(116, 3): if $stack8 == 4 goto l2 = 1  NO 
(145, 0): if l1 == 0 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  NO 
(178, 2): if l5 != $stack18 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  NO 
(273, 2): if l7 >= l6 goto $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()  NO 
(145, 3): if $stack49 == $stack50 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  NO 
(178, 4): if $stack24 == 0 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  NO 
(232, 0): if l0 == 47 goto $stack1 = 1  NO 
(265, 1): if $stack9 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  NO 
(232, 1): if l0 != 92 goto $stack1 = 0  NO 
(265, 3): if $stack32 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  NO 
(100, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int)>(47)  NO 
(158, 1): if $stack31 == 0 goto $stack32 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(158, 3): if $stack36 != 0 goto $stack32 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(121, 1): if l2 > 4 goto return 1  NO 
(216, 2): if l2 != $stack14 goto $stack15 = 0  NO 
(245, 1): if $stack1 < 0 goto return l0  NO 
(51, 0): if l0 != 47 goto (branch)  NO 
(179, 1): if $stack27 != 0 goto l3#27 = l3#27 + 2  NO 
(274, 0): if l8 == 63 goto $stack20 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()  NO 
(274, 1): if l8 != 42 goto virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(l8)  NO 
(200, 0): if l3#27 > 8 goto $stack15 = 0  NO 
(200, 1): if l3#27 >= 8 goto $stack15 = 1  NO 
(200, 2): if l1 == 0 goto $stack15 = 0  NO 
(163, 1): if $stack13 <= 8 goto l3#27 = 0  NO 


comp5111.assignment.cut.Subject$StringTasks


In the following all of the instructions which were covered will be shown: 

(448, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (451, 0) 
(799, 1): if $stack4 == 0 goto (branch)  YES, jumped to: (802, 0) (800, 0) 
(349, 1): if l2 >= l1 goto return 1  YES, jumped to: (350, 0) 
(795, 0): if l1 != null goto $stack4 = virtualinvoke l1.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (799, 0) 
(568, 0): if l1 == 0 goto $stack25 = new java.lang.String  YES, jumped to: (575, 0) (568, 1) 
(663, 0): if l0 == null goto return 1  YES, jumped to: (663, 1) (664, 0) 
(791, 0): if l2 != 0 goto (branch)  YES, jumped to: (795, 0) (792, 0) 
(568, 1): if l7 != 2 goto $stack25 = new java.lang.String  YES, jumped to: (575, 0) (568, 2) 
(663, 1): if l1 != null goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (664, 0) (666, 0) 
(568, 2): if l5 != 1 goto $stack25 = new java.lang.String  YES, jumped to: (575, 0) 
(849, 0): if l1 == 0 goto $stack8 = 0  YES, jumped to: (849, 4) 
(494, 1): if $stack4 != 1 goto $stack5 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (502, 0) (495, 0) 
(845, 2): if $stack12 == 0 goto l4 = l4 + 1  YES, jumped to: (846, 0) (839, 0) 
(556, 1): if $stack9 == 0 goto l2 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (559, 0) (557, 0) 
(490, 1): if $stack3 == 0 goto $stack4 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (491, 0) (494, 0) 
(618, 1): if l6 >= l2 goto return 0  YES, jumped to: (619, 0) (636, 0) 
(742, 0): if l0 != l1 goto (branch)  YES, jumped to: (745, 0) (743, 0) 
(833, 1): if $stack5 != 0 goto return 0  YES, jumped to: (834, 0) (833, 2) 
(416, 1): if l2 >= l1 goto return 1  YES, jumped to: (417, 0) (421, 0) 
(672, 1): if l8 >= l4 goto l6 = l6 + 1  YES, jumped to: (673, 0) (670, 0) 
(833, 3): if $stack6 != 1 goto l1 = 0  YES, jumped to: (836, 0) (834, 0) 
(350, 2): if $stack5 != 0 goto l2 = l2 + 1  YES, jumped to: (351, 0) 
(412, 1): if $stack3 == 0 goto l1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (415, 0) (413, 0) 
(346, 0): if l1 != 0 goto l2 = 0  YES, jumped to: (347, 0) (349, 0) 
(565, 0): if l7 != l5 goto (branch)  YES, jumped to: (566, 0) (568, 0) 
(751, 1): if $stack6 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (751, 2) 
(751, 3): if $stack12 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (752, 0) 
(458, 0): if l4 != 10 goto return l3  YES, jumped to: (461, 0) 
(553, 0): if l0 != null goto $stack9 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (556, 0) 
(611, 1): if $stack9 != 0 goto return 0  YES, jumped to: (611, 2) (612, 0) 
(611, 3): if $stack10 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (614, 0) (612, 0) 
(673, 1): if $stack13 != l7 goto l8 = l8 + 1  YES, jumped to: (672, 0) 
(417, 2): if $stack6 != 0 goto l2 = l2 + 1  YES, jumped to: (418, 0) 
(863, 0): if l0 == null goto return l0  YES, jumped to: (863, 1) 
(863, 1): if l1 == null goto return l0  YES, jumped to: (863, 2) 
(863, 2): if l2 != null goto l3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>(l1)  YES, jumped to: (867, 0) 
(880, 0): if l6 != l4 goto $stack12 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l3)  YES, jumped to: (885, 0) (881, 0) 
(496, 0): if l1 == 13 goto return ""  YES, jumped to: (496, 1) 
(496, 1): if l1 != 10 goto return l0  YES, jumped to: (499, 0) 
(620, 1): if l8 >= l3 goto l6 = l6 + 1  YES, jumped to: (621, 0) (618, 0) 
(748, 2): if $stack4 == $stack5 goto $stack6 = l0 instanceof java.lang.String  YES, jumped to: (749, 0) (751, 0) 
(843, 2): if $stack10 == 0 goto $stack11 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  YES, jumped to: (845, 0) 
(839, 1): if l4 >= l3 goto (branch)  YES, jumped to: (840, 0) (849, 0) 
(323, 0): if l0 != null goto $stack1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (323, 3) (323, 1) 
(802, 0): if l2 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  YES, jumped to: (802, 1) (806, 0) 
(802, 4): if $stack8 == -1 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  YES, jumped to: (803, 0) (806, 0) 
(509, 0): if l2 == 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  YES, jumped to: (510, 0) 
(670, 1): if l6 >= l2 goto return 1  YES, jumped to: (671, 0) (688, 0) 
(377, 0): if l0 == null goto $stack2 = 1  YES, jumped to: (377, 1) (377, 3) 
(505, 0): if l2 != 10 goto (branch)  YES, jumped to: (509, 0) 
(377, 2): if $stack1 != 0 goto $stack2 = 0  YES, jumped to: (377, 3) (377, 5) 
(563, 3): if l6 >= $stack15 goto $stack16 = new java.lang.String  YES, jumped to: (580, 0) (564, 0) 
(877, 1): if l4 != $stack11 goto (branch)  YES, jumped to: (878, 0) (880, 0) 
(621, 1): if $stack15 != l7 goto l8 = l8 + 1  YES, jumped to: (620, 0) 
(745, 0): if l0 == null goto return 0  YES, jumped to: (745, 1) (746, 0) 
(745, 1): if l1 != null goto $stack4 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (748, 0) (746, 0) 
(840, 0): if l1 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  YES, jumped to: (843, 0) 
(869, 0): if l3 >= 0 goto l4 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (873, 0) (870, 0) 
(452, 0): if l1 >= 2 goto l2 = l1 - 1  YES, jumped to: (455, 0) (453, 0) 

In the following all of the instructions which were not covered will be shown: 

(448, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int length()>()  NO 
(349, 1): if l2 >= l1 goto return 1  NO 
(795, 0): if l1 != null goto $stack4 = virtualinvoke l1.<java.lang.String: boolean isEmpty()>()  NO 
(506, 2): if $stack12 != 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  NO 
(568, 2): if l5 != 1 goto $stack25 = new java.lang.String  NO 
(630, 0): if l6 >= l4 goto l8 = l8 + 1  NO 
(626, 0): if l8 != l5 goto (branch)  NO 
(630, 5): if $stack21 != $stack22 goto l8 = l8 + 1  NO 
(849, 0): if l1 == 0 goto $stack8 = 0  NO 
(849, 1): if l2 == 0 goto $stack8 = 0  NO 
(622, 1): if $stack18 != 0 goto (branch)  NO 
(350, 2): if $stack5 != 0 goto l2 = l2 + 1  NO 
(796, 0): if l2 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  NO 
(796, 4): if $stack15 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  NO 
(751, 1): if $stack6 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(751, 3): if $stack12 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(458, 0): if l4 != 10 goto return l3  NO 
(553, 0): if l0 != null goto $stack9 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  NO 
(458, 3): if $stack9 != 13 goto return l3  NO 
(673, 1): if $stack13 != l7 goto l8 = l8 + 1  NO 
(417, 2): if $stack6 != 0 goto l2 = l2 + 1  NO 
(863, 0): if l0 == null goto return l0  NO 
(863, 1): if l1 == null goto return l0  NO 
(863, 2): if l2 != null goto l3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>(l1)  NO 
(570, 0): if l8 == l4 goto (branch)  NO 
(756, 1): if l3 >= l2 goto return 1  NO 
(496, 0): if l1 == 13 goto return ""  NO 
(496, 1): if l1 != 10 goto return l0  NO 
(682, 0): if l6 >= l3 goto l8 = l8 + 1  NO 
(843, 2): if $stack10 == 0 goto $stack11 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 
(678, 0): if l8 != l5 goto (branch)  NO 
(682, 5): if $stack19 != $stack20 goto l8 = l8 + 1  NO 
(674, 1): if $stack16 != 0 goto (branch)  NO 
(509, 0): if l2 == 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  NO 
(505, 0): if l2 != 10 goto (branch)  NO 
(757, 2): if $stack8 == $stack9 goto l3 = l3 + 1  NO 
(621, 1): if $stack15 != l7 goto l8 = l8 + 1  NO 
(840, 0): if l1 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 
(840, 1): if l2 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 


comp5111.assignment.cut.Subject$BooleanTasks


In the following all of the instructions which were covered will be shown: 

(1393, 0): if l0 != l1 goto (branch)  YES, jumped to: (1396, 0) (1394, 0) 
(1396, 0): if l0 == 0 goto $stack2 = -1  YES, jumped to: (1396, 3) (1396, 1) 

In the following all of the instructions which were not covered will be shown: 




Coverage of Test Suite: comp5111.assignment.cut.RegressionTest1

comp5111.assignment.cut.Subject$NumberTasks
45 Branches from a total of 172 Branches were covered.
Percentage: 26.16279069767442%

comp5111.assignment.cut.Subject$CharTasks
17 Branches from a total of 24 Branches were covered.
Percentage: 70.83333333333334%

comp5111.assignment.cut.Subject$GregorianTasks
75 Branches from a total of 94 Branches were covered.
Percentage: 79.7872340425532%

comp5111.assignment.cut.Subject$ArrayTasks
21 Branches from a total of 22 Branches were covered.
Percentage: 95.45454545454545%

comp5111.assignment.cut.Subject
0 Branches from a total of 0 Branches were covered.
Percentage: 100.0%

comp5111.assignment.cut.Subject$FilenameTasks
34 Branches from a total of 98 Branches were covered.
Percentage: 34.69387755102041%

comp5111.assignment.cut.Subject$StringTasks
96 Branches from a total of 152 Branches were covered.
Percentage: 63.1578947368421%

comp5111.assignment.cut.Subject$BooleanTasks
4 Branches from a total of 4 Branches were covered.
Percentage: 100.0%

Overall Branch Coverage: 51.590106007067135%



In the following part you can see which branches were executed. Before every branch instruction you can see two numbers
in the form of (x,y), for Example (1,5). This indicates that the following Instruction can be found on line x of the Java code. 
y denotes that it is the y-th Jimple Instruction generated from the corresponding Java line. Only Branch instructions will be shown.
After each listed instructions you can find a NO if one or more branches weren't executed and a YES if one or more branches were takenIf it was executed you will also find a List of (x,y) values which denote the statements to which we jumped.



comp5111.assignment.cut.Subject$NumberTasks


In the following all of the instructions which were covered will be shown: 

(1181, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(l0)  YES, jumped to: (1184, 0) 
(1340, 1): if $stack5 != 45 goto $stack6 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 0)  YES, jumped to: (1346, 0) 
(1334, 1): if $stack1 == 0 goto $stack2 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (1335, 0) (1337, 0) 
(1270, 1): if $stack13 == 0 goto $stack14 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l1)  YES, jumped to: (1273, 0) 
(979, 1): if $stack25 != 0 goto $stack119 = 0  YES, jumped to: (979, 2) 
(946, 1): if $stack138 == 0 goto l7 = l7 + 1  YES, jumped to: (945, 0) 
(979, 2): if l5#11 == 46 goto $stack119 = 0  YES, jumped to: (979, 3) 
(1264, 0): if l4 != 43 goto $stack8 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l1)  YES, jumped to: (1267, 0) 
(1359, 0): if l4 != 0 goto l3 = l3 + 1  YES, jumped to: (1359, 1) 
(1359, 3): if $stack10 != 0 goto l3 = l3 + 1  YES, jumped to: (1360, 0) 
(1004, 0): if l10 <= -1 goto l8 = null  YES, jumped to: (1007, 0) 
(1353, 0): if $stack13 == 0 goto (branch)  YES, jumped to: (1356, 0) 
(934, 0): if l0 != null goto $stack15 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  YES, jumped to: (937, 0) 
(1254, 1): if $stack6 == 0 goto l1 = 0  YES, jumped to: (1257, 0) (1255, 0) 
(1351, 2): if l3 >= $stack5 goto return 1  YES, jumped to: (1352, 0) 
(992, 0): if l10 <= -1 goto (branch)  YES, jumped to: (999, 0) 
(1215, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l0)  YES, jumped to: (1219, 0) 
(1118, 0): if $stack7 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1)  YES, jumped to: (1118, 3) 
(1116, 0): if l2 == 45 goto $stack7 = 1  YES, jumped to: (1116, 1) 
(1116, 1): if l2 != 43 goto $stack7 = 0  YES, jumped to: (1116, 4) 
(1273, 1): if $stack14 == 0 goto $stack9 = new java.math.BigInteger  YES, jumped to: (1278, 0) 
(951, 0): if l4 <= 0 goto $stack19 = l2 - 1  YES, jumped to: (969, 0) 
(1337, 3): if $stack4 != 46 goto $stack5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)  YES, jumped to: (1340, 0) 
(980, 0): if l9 <= -1 goto (branch)  YES, jumped to: (992, 0) 
(1267, 1): if $stack8 != 0 goto l2 = 16  YES, jumped to: (1267, 2) 
(1234, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Long: java.lang.Long decode(java.lang.String)>(l0)  YES, jumped to: (1237, 0) 
(1267, 3): if $stack12 == 0 goto $stack13 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l1)  YES, jumped to: (1270, 0) 
(1296, 1): if $stack1 == 0 goto $stack2 = new java.math.BigDecimal  YES, jumped to: (1297, 0) (1299, 0) 
(945, 2): if l7 >= l6 goto (branch)  YES, jumped to: (945, 3) (951, 0) 
(943, 1): if $stack18 == 43 goto $stack145 = 1  YES, jumped to: (943, 2) 
(1261, 0): if l4 != 45 goto (branch)  YES, jumped to: (1264, 0) 
(1197, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(l0)  YES, jumped to: (1200, 0) 
(1292, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  YES, jumped to: (1296, 0) 
(1356, 0): if l2 <= 1 goto (branch)  YES, jumped to: (1359, 0) 
(943, 3): if $stack144 != 45 goto $stack145 = 0  YES, jumped to: (943, 6) 
(1003, 0): if l11 == 0 goto (branch)  YES, jumped to: (1004, 0) 
(937, 1): if $stack15 == 0 goto $stack16 = newarray (java.lang.String)[3]  YES, jumped to: (941, 0) (938, 0) 
(1352, 1): if $stack6 != 46 goto $stack13 = 0  YES, jumped to: (1352, 4) 
(999, 0): if $stack119 == 0 goto $stack101 = l2  YES, jumped to: (999, 1) 
(1251, 0): if l0 != null goto $stack6 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (1254, 0) 

In the following all of the instructions which were not covered will be shown: 

(993, 0): if l10 <= l2 goto l6#28 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>(l0, l10)  NO 
(1092, 4): if $stack33 != 0 goto l14 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>(l0)  NO 
(1088, 2): if $stack43 != 0 goto $stack44 = virtualinvoke l12#81.<java.lang.Float: java.lang.String toString()>()  NO 
(1092, 6): if $stack38 == 0 goto (branch)  NO 
(1088, 4): if $stack48 == 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1340, 1): if $stack5 != 45 goto $stack6 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 0)  NO 
(981, 0): if l10 <= -1 goto $stack107 = l9 + 1  NO 
(1270, 1): if $stack13 == 0 goto $stack14 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l1)  NO 
(1068, 0): if l7#20 != null goto l12#81 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)  NO 
(1068, 1): if l8 != null goto l12#81 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)  NO 
(1163, 2): if l1 < 0 goto return 1  NO 
(1353, 0): if $stack13 == 0 goto (branch)  NO 
(1031, 1): if $stack74 != 0 goto (branch)  NO 
(1031, 4): if $stack83 != 0 goto return l13#63  NO 
(961, 0): if l6 > 16 goto $stack122 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>(l0)  NO 
(1031, 6): if $stack84 == 0 goto (branch)  NO 
(961, 1): if l6 != 16 goto (branch)  NO 
(961, 2): if l5#11 <= 55 goto (branch)  NO 
(1279, 0): if l3 == 0 goto $stack11 = $stack9  NO 
(1089, 3): if $stack46 == 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1118, 0): if $stack7 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1)  NO 
(1341, 1): if $stack7 != 1 goto $stack8 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 1)  NO 
(953, 1): if l6 >= l2 goto l6 = l2 - l4  NO 
(1015, 0): if l7#20 != null goto $stack62 = new java.lang.NumberFormatException  NO 
(982, 0): if l10 < l9 goto $stack114 = new java.lang.NumberFormatException  NO 
(1015, 1): if l8 != null goto $stack62 = new java.lang.NumberFormatException  NO 
(1337, 3): if $stack4 != 46 goto $stack5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)  NO 
(982, 1): if l10 <= l2 goto $stack116 = l9 + 1  NO 
(1234, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Long: java.lang.Long decode(java.lang.String)>(l0)  NO 
(1267, 1): if $stack8 != 0 goto l2 = 16  NO 
(1267, 3): if $stack12 == 0 goto $stack13 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l1)  NO 
(1197, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(l0)  NO 
(1292, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  NO 
(1003, 0): if l11 == 0 goto (branch)  NO 
(1164, 1): if $stack3 == 48 goto l1 = l1 + -1  NO 
(1160, 0): if l0 != null goto $stack2 = virtualinvoke l0.<java.lang.String: int length()>()  NO 
(999, 0): if $stack119 == 0 goto $stack101 = l2  NO 
(1094, 3): if $stack37 != 0 goto return l14  NO 
(1251, 0): if l0 != null goto $stack6 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  NO 
(1181, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(l0)  NO 
(1148, 1): if $stack2 == 0 goto $stack4 = 0  NO 
(1148, 3): if $stack3 == 0 goto $stack4 = 0  NO 
(1045, 1): if $stack76 != 0 goto (branch)  NO 
(979, 1): if $stack25 != 0 goto $stack119 = 0  NO 
(946, 1): if $stack138 == 0 goto l7 = l7 + 1  NO 
(979, 2): if l5#11 == 46 goto $stack119 = 0  NO 
(1045, 4): if $stack79 != 0 goto return l13#69  NO 
(1264, 0): if l4 != 43 goto $stack8 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l1)  NO 
(1045, 6): if $stack80 == 0 goto (branch)  NO 
(1359, 0): if l4 != 0 goto l3 = l3 + 1  NO 
(1004, 0): if l10 <= -1 goto l8 = null  NO 
(1359, 3): if $stack10 != 0 goto l3 = l3 + 1  NO 
(1004, 2): if l10 >= $stack90 goto l8 = null  NO 
(934, 0): if l0 != null goto $stack15 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  NO 
(1351, 2): if l3 >= $stack5 goto return 1  NO 
(992, 0): if l10 <= -1 goto (branch)  NO 
(1215, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l0)  NO 
(1087, 1): if $stack29 != 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1116, 0): if l2 == 45 goto $stack7 = 1  NO 
(955, 0): if l5#11 == 48 goto l4 = l4 + 1  NO 
(988, 1): if $stack119 == 0 goto $stack110 = l2  NO 
(1116, 1): if l2 != 43 goto $stack7 = 0  NO 
(1017, 1): if $stack65 != 0 goto $stack66 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>(l12)  NO 
(1273, 1): if $stack14 == 0 goto $stack9 = new java.math.BigInteger  NO 
(951, 0): if l4 <= 0 goto $stack19 = l2 - 1  NO 
(1017, 3): if $stack68 != 45 goto $stack66 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>(l12)  NO 
(1273, 4): if $stack19 <= $stack20 goto $stack9 = new java.math.BigInteger  NO 
(980, 0): if l9 <= -1 goto (branch)  NO 
(1017, 6): if $stack71 != 0 goto $stack67 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>(l12)  NO 
(1017, 8): if $stack66 == 0 goto $stack62 = new java.lang.NumberFormatException  NO 
(943, 1): if $stack18 == 43 goto $stack145 = 1  NO 
(1261, 0): if l4 != 45 goto (branch)  NO 
(943, 3): if $stack144 != 45 goto $stack145 = 0  NO 
(1356, 0): if l2 <= 1 goto (branch)  NO 
(1063, 0): if l10 <= -1 goto l8 = null  NO 
(1352, 1): if $stack6 != 46 goto $stack13 = 0  NO 
(1063, 2): if l10 >= $stack55 goto l8 = null  NO 
(964, 0): if l6 > 8 goto $stack123 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>(l0)  NO 
(964, 1): if l6 != 8 goto $stack124 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>(l0)  NO 
(1092, 1): if $stack30 != 0 goto (branch)  NO 
(964, 2): if l5#11 <= 55 goto $stack124 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>(l0)  NO 


comp5111.assignment.cut.Subject$CharTasks


In the following all of the instructions which were covered will be shown: 

(1441, 0): if l0 == null goto $stack2 = l1  YES, jumped to: (1441, 1) 
(1536, 0): if l0 < 65 goto $stack1 = 0  YES, jumped to: (1536, 1) (1536, 4) 
(1536, 1): if l0 > 90 goto $stack1 = 0  YES, jumped to: (1536, 4) 
(1517, 1): if $stack1 != 0 goto $stack3 = 1  YES, jumped to: (1517, 2) 
(1498, 0): if l0 < 32 goto $stack1 = 1  YES, jumped to: (1498, 1) (1498, 2) 
(1517, 3): if $stack2 == 0 goto $stack3 = 0  YES, jumped to: (1517, 4) (1517, 6) 
(1498, 1): if l0 != 127 goto $stack1 = 0  YES, jumped to: (1498, 4) 
(1479, 0): if l0 < 32 goto $stack1 = 0  YES, jumped to: (1479, 1) (1479, 4) 
(1479, 1): if l0 >= 127 goto $stack1 = 0  YES, jumped to: (1479, 2) 
(1460, 0): if l0 >= 128 goto $stack1 = 0  YES, jumped to: (1460, 1) 
(1555, 0): if l0 < 97 goto $stack1 = 0  YES, jumped to: (1555, 4) (1555, 1) 
(1555, 1): if l0 > 122 goto $stack1 = 0  YES, jumped to: (1555, 2) 

In the following all of the instructions which were not covered will be shown: 

(1441, 0): if l0 == null goto $stack2 = l1  NO 
(1536, 1): if l0 > 90 goto $stack1 = 0  NO 
(1517, 1): if $stack1 != 0 goto $stack3 = 1  NO 
(1498, 1): if l0 != 127 goto $stack1 = 0  NO 
(1479, 1): if l0 >= 127 goto $stack1 = 0  NO 
(1460, 0): if l0 >= 128 goto $stack1 = 0  NO 
(1555, 1): if l0 > 122 goto $stack1 = 0  NO 


comp5111.assignment.cut.Subject$GregorianTasks


In the following all of the instructions which were covered will be shown: 

(1761, 0): if l1 != 2 goto $stack4 = new java.lang.IllegalArgumentException  YES, jumped to: (1762, 0) (1761, 1) 
(1732, 3): if $stack2 != 0 goto $stack4 = 1  YES, jumped to: (1732, 6) 
(1728, 0): if l0 <= 1900 goto $stack1 = l0 & 3  YES, jumped to: (1732, 0) (1728, 1) 
(1759, 0): if l1 == 1 goto return 31  YES, jumped to: (1759, 1) (1759, 7) 
(1728, 1): if l0 >= 2100 goto $stack1 = l0 & 3  YES, jumped to: (1732, 0) 
(1761, 2): if $stack6 == 0 goto $stack7 = 28  YES, jumped to: (1761, 3) 
(1759, 1): if l1 == 3 goto return 31  YES, jumped to: (1759, 2) (1759, 7) 
(1759, 2): if l1 == 5 goto return 31  YES, jumped to: (1759, 3) (1759, 7) 
(1759, 3): if l1 == 7 goto return 31  YES, jumped to: (1759, 4) (1759, 7) 
(1821, 1): if l2 <= $stack9 goto return  YES, jumped to: (1827, 0) (1822, 0) 
(1759, 4): if l1 == 8 goto return 31  YES, jumped to: (1759, 5) (1759, 7) 
(1759, 5): if l1 == 10 goto return 31  YES, jumped to: (1759, 6) (1759, 7) 
(1759, 6): if l1 != 12 goto (branch)  YES, jumped to: (1760, 0) (1759, 7) 
(1815, 0): if l1 < 1 goto $stack5 = new java.lang.IllegalArgumentException  YES, jumped to: (1816, 0) (1815, 1) 
(1815, 1): if l1 <= 12 goto (branch)  YES, jumped to: (1816, 0) (1818, 0) 
(1904, 0): if l1 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1)  YES, jumped to: (1905, 0) 
(1933, 0): if l0 != 12 goto $stack1 = new java.lang.IllegalArgumentException  YES, jumped to: (1933, 1) 
(1931, 0): if l0 != 10 goto (branch)  YES, jumped to: (1931, 1) (1932, 0) 
(1929, 0): if l0 != 8 goto (branch)  YES, jumped to: (1930, 0) (1929, 1) 
(1927, 0): if l0 != 6 goto (branch)  YES, jumped to: (1928, 0) 
(1861, 0): if l2 < 1 goto $stack8 = new java.lang.IllegalArgumentException  YES, jumped to: (1861, 1) (1862, 0) 
(1925, 0): if l0 != 4 goto (branch)  YES, jumped to: (1926, 0) 
(1861, 1): if l2 <= 31 goto $stack10 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)  YES, jumped to: (1864, 0) (1862, 0) 
(1923, 0): if l0 != 2 goto (branch)  YES, jumped to: (1924, 0) 
(1890, 0): if l7 > 0 goto return l7  YES, jumped to: (1894, 0) (1891, 0) 
(1760, 0): if l1 == 4 goto return 30  YES, jumped to: (1760, 1) (1760, 4) 
(1760, 1): if l1 == 6 goto return 30  YES, jumped to: (1760, 2) (1760, 4) 
(1760, 2): if l1 == 9 goto return 30  YES, jumped to: (1760, 3) (1760, 4) 
(1760, 3): if l1 != 11 goto (branch)  YES, jumped to: (1761, 0) (1760, 4) 
(1818, 0): if l2 < 1 goto $stack7 = new java.lang.IllegalArgumentException  YES, jumped to: (1819, 0) (1818, 1) 
(1818, 1): if l2 <= 31 goto $stack9 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)  YES, jumped to: (1819, 0) (1821, 0) 
(1880, 0): if l4 >= 0 goto l6 = staticinvoke <java.lang.Math: int floorDiv(int,int)>(l5, 4)  YES, jumped to: (1887, 0) (1881, 0) 
(1878, 0): if l1 > 2 goto l6 = staticinvoke <java.lang.Math: int floorDiv(int,int)>(l5, 4)  YES, jumped to: (1879, 0) (1887, 0) 
(1909, 0): if l2 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l2)  YES, jumped to: (1912, 0) 
(1812, 0): if l0 < -999999999 goto $stack3 = new java.lang.IllegalArgumentException  YES, jumped to: (1812, 1) 
(1812, 1): if l0 <= 999999999 goto (branch)  YES, jumped to: (1815, 0) 
(1874, 0): if l4 >= 0 goto (branch)  YES, jumped to: (1878, 0) (1875, 0) 
(1932, 0): if l0 != 11 goto (branch)  YES, jumped to: (1933, 0) (1932, 1) 
(1930, 0): if l0 != 9 goto (branch)  YES, jumped to: (1931, 0) 
(1928, 0): if l0 != 7 goto (branch)  YES, jumped to: (1929, 0) 
(1864, 1): if l2 <= $stack10 goto l3 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>(l1)  YES, jumped to: (1870, 0) 
(1926, 0): if l0 != 5 goto (branch)  YES, jumped to: (1927, 0) (1926, 1) 
(1924, 0): if l0 != 3 goto (branch)  YES, jumped to: (1925, 0) 
(1732, 1): if $stack1 == 0 goto $stack4 = 1  YES, jumped to: (1732, 6) (1732, 2) 
(1922, 0): if l0 != 1 goto (branch)  YES, jumped to: (1922, 1) (1923, 0) 

In the following all of the instructions which were not covered will be shown: 

(1732, 3): if $stack2 != 0 goto $stack4 = 1  NO 
(1728, 1): if l0 >= 2100 goto $stack1 = l0 & 3  NO 
(1732, 5): if $stack3 != 0 goto $stack4 = 0  NO 
(1761, 2): if $stack6 == 0 goto $stack7 = 28  NO 
(1904, 0): if l1 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1)  NO 
(1933, 0): if l0 != 12 goto $stack1 = new java.lang.IllegalArgumentException  NO 
(1927, 0): if l0 != 6 goto (branch)  NO 
(1925, 0): if l0 != 4 goto (branch)  NO 
(1923, 0): if l0 != 2 goto (branch)  NO 
(1729, 1): if $stack7 != 0 goto $stack8 = 0  NO 
(1909, 0): if l2 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l2)  NO 
(1812, 0): if l0 < -999999999 goto $stack3 = new java.lang.IllegalArgumentException  NO 
(1812, 1): if l0 <= 999999999 goto (branch)  NO 
(1930, 0): if l0 != 9 goto (branch)  NO 
(1928, 0): if l0 != 7 goto (branch)  NO 
(1864, 1): if l2 <= $stack10 goto l3 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>(l1)  NO 
(1924, 0): if l0 != 3 goto (branch)  NO 


comp5111.assignment.cut.Subject$ArrayTasks


In the following all of the instructions which were covered will be shown: 

(1664, 1): if l2 < $stack4 goto (branch)  YES, jumped to: (1665, 0) (1667, 0) 
(1661, 0): if l0 == null goto return -1  YES, jumped to: (1661, 1) (1662, 0) 
(1661, 1): if l2 >= 0 goto $stack4 = lengthof l0  YES, jumped to: (1662, 0) (1664, 0) 
(1609, 0): if l0 == null goto $stack1 = 0  YES, jumped to: (1609, 1) (1609, 3) 
(1674, 1): if l3 < 0 goto return -1  YES, jumped to: (1675, 0) (1680, 0) 
(1675, 2): if $stack10 == 0 goto l3 = l3 + -1  YES, jumped to: (1674, 0) (1676, 0) 
(1673, 3): if $stack7 == 0 goto return -1  YES, jumped to: (1680, 0) (1674, 0) 
(1669, 1): if $stack12 != null goto l3 = l3 + -1  YES, jumped to: (1668, 0) 
(1667, 0): if l1 != null goto $stack5 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>()  YES, jumped to: (1673, 0) (1668, 0) 
(1668, 1): if l3 < 0 goto (branch)  YES, jumped to: (1669, 0) (1668, 2) 
(1619, 1): if $stack1 != 0 goto $stack2 = 0  YES, jumped to: (1619, 4) (1619, 2) 

In the following all of the instructions which were not covered will be shown: 

(1669, 1): if $stack12 != null goto l3 = l3 + -1  NO 


comp5111.assignment.cut.Subject


In the following all of the instructions which were covered will be shown: 


In the following all of the instructions which were not covered will be shown: 



comp5111.assignment.cut.Subject$FilenameTasks


In the following all of the instructions which were covered will be shown: 

(153, 0): if l1 == 0 goto $stack13 = lengthof l2  YES, jumped to: (163, 0) 
(54, 0): if l0 != 92 goto $stack1 = new java.lang.IllegalArgumentException  YES, jumped to: (57, 0) 
(149, 1): if $stack11 == 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  YES, jumped to: (152, 0) 
(116, 1): if $stack7 == 0 goto return 0  YES, jumped to: (117, 0) 
(213, 2): if l2 >= $stack4 goto return 1  YES, jumped to: (214, 0) (222, 0) 
(145, 0): if l1 == 0 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  YES, jumped to: (148, 0) 
(81, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>(l0)  YES, jumped to: (84, 0) 
(178, 2): if l5 != $stack18 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  YES, jumped to: (178, 3) 
(178, 4): if $stack24 == 0 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  YES, jumped to: (185, 0) 
(172, 0): if l4 <= 1 goto l3#27 = l3#27 + 1  YES, jumped to: (198, 0) 
(170, 1): if $stack16 == 0 goto l4 = 0  YES, jumped to: (176, 0) (171, 0) 
(232, 0): if l0 == 47 goto $stack1 = 1  YES, jumped to: (232, 1) 
(265, 1): if $stack9 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (265, 2) 
(232, 1): if l0 != 92 goto $stack1 = 0  YES, jumped to: (232, 4) 
(168, 2): if l5 >= $stack14 goto (branch)  YES, jumped to: (169, 0) (200, 0) 
(265, 3): if $stack32 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (266, 0) 
(100, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int)>(47)  YES, jumped to: (103, 0) 
(185, 1): if $stack19 <= 4 goto l7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l6, 16)  YES, jumped to: (190, 0) (186, 0) 
(218, 4): if $stack10 != 0 goto l2 = l2 + 1  YES, jumped to: (219, 0) (213, 0) 
(216, 2): if l2 != $stack14 goto $stack15 = 0  YES, jumped to: (216, 3) 
(214, 2): if $stack6 == 0 goto $stack8 = <comp5111.assignment.cut.Subject$FilenameTasks: java.util.regex.Pattern REG_NAME_PART_PATTERN>  YES, jumped to: (218, 0) (216, 0) 
(245, 1): if $stack1 < 0 goto return l0  YES, jumped to: (249, 0) 
(148, 1): if $stack10 == 0 goto $stack11 = virtualinvoke l0.<java.lang.String: boolean endsWith(java.lang.String)>(":")  YES, jumped to: (149, 0) 
(51, 0): if l0 != 47 goto (branch)  YES, jumped to: (54, 0) 
(200, 0): if l3#27 > 8 goto $stack15 = 0  YES, jumped to: (200, 1) 
(200, 1): if l3#27 >= 8 goto $stack15 = 1  YES, jumped to: (200, 2) 
(200, 2): if l1 == 0 goto $stack15 = 0  YES, jumped to: (200, 5) 
(163, 1): if $stack13 <= 8 goto l3#27 = 0  YES, jumped to: (166, 0) 

In the following all of the instructions which were not covered will be shown: 

(155, 1): if $stack30 == 0 goto $stack31 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>("::")  NO 
(279, 0): if l8 != 63 goto (branch)  NO 
(275, 1): if $stack20 == 0 goto (branch)  NO 
(81, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>(l0)  NO 
(172, 0): if l4 <= 1 goto l3#27 = l3#27 + 1  NO 
(148, 1): if $stack10 == 0 goto $stack11 = virtualinvoke l0.<java.lang.String: boolean endsWith(java.lang.String)>(":")  NO 
(148, 3): if $stack45 == 0 goto return 0  NO 
(194, 0): if l7 < 0 goto return 0  NO 
(194, 1): if l7 <= 65535 goto l3#27 = l3#27 + 1  NO 
(289, 1): if $stack13 == 0 goto $stack14 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(128, 1): if $stack11 <= 1 goto l2 = l2 + 1  NO 
(128, 3): if $stack14 == 0 goto l2 = l2 + 1  NO 
(124, 0): if l4 <= 255 goto $stack11 = virtualinvoke l3.<java.lang.String: int length()>()  NO 
(153, 0): if l1 == 0 goto $stack13 = lengthof l2  NO 
(281, 0): if l4 == 42 goto l4 = l8  NO 
(54, 0): if l0 != 92 goto $stack1 = new java.lang.IllegalArgumentException  NO 
(149, 1): if $stack11 == 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  NO 
(116, 1): if $stack7 == 0 goto return 0  NO 
(149, 3): if $stack41 != 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  NO 
(116, 3): if $stack8 == 4 goto l2 = 1  NO 
(145, 0): if l1 == 0 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  NO 
(178, 2): if l5 != $stack18 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  NO 
(273, 2): if l7 >= l6 goto $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()  NO 
(145, 3): if $stack49 == $stack50 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  NO 
(178, 4): if $stack24 == 0 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  NO 
(232, 0): if l0 == 47 goto $stack1 = 1  NO 
(265, 1): if $stack9 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  NO 
(232, 1): if l0 != 92 goto $stack1 = 0  NO 
(265, 3): if $stack32 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  NO 
(100, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int)>(47)  NO 
(158, 1): if $stack31 == 0 goto $stack32 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(158, 3): if $stack36 != 0 goto $stack32 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(121, 1): if l2 > 4 goto return 1  NO 
(216, 2): if l2 != $stack14 goto $stack15 = 0  NO 
(245, 1): if $stack1 < 0 goto return l0  NO 
(51, 0): if l0 != 47 goto (branch)  NO 
(179, 1): if $stack27 != 0 goto l3#27 = l3#27 + 2  NO 
(274, 0): if l8 == 63 goto $stack20 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()  NO 
(274, 1): if l8 != 42 goto virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(l8)  NO 
(200, 0): if l3#27 > 8 goto $stack15 = 0  NO 
(200, 1): if l3#27 >= 8 goto $stack15 = 1  NO 
(200, 2): if l1 == 0 goto $stack15 = 0  NO 
(163, 1): if $stack13 <= 8 goto l3#27 = 0  NO 


comp5111.assignment.cut.Subject$StringTasks


In the following all of the instructions which were covered will be shown: 

(448, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (451, 0) 
(799, 1): if $stack4 == 0 goto (branch)  YES, jumped to: (800, 0) (802, 0) 
(349, 1): if l2 >= l1 goto return 1  YES, jumped to: (350, 0) 
(795, 0): if l1 != null goto $stack4 = virtualinvoke l1.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (799, 0) 
(568, 0): if l1 == 0 goto $stack25 = new java.lang.String  YES, jumped to: (575, 0) (568, 1) 
(663, 0): if l0 == null goto return 1  YES, jumped to: (664, 0) (663, 1) 
(791, 0): if l2 != 0 goto (branch)  YES, jumped to: (792, 0) (795, 0) 
(568, 1): if l7 != 2 goto $stack25 = new java.lang.String  YES, jumped to: (575, 0) (568, 2) 
(663, 1): if l1 != null goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (666, 0) (664, 0) 
(568, 2): if l5 != 1 goto $stack25 = new java.lang.String  YES, jumped to: (575, 0) 
(849, 0): if l1 == 0 goto $stack8 = 0  YES, jumped to: (849, 4) 
(494, 1): if $stack4 != 1 goto $stack5 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (502, 0) (495, 0) 
(845, 2): if $stack12 == 0 goto l4 = l4 + 1  YES, jumped to: (846, 0) (839, 0) 
(556, 1): if $stack9 == 0 goto l2 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (559, 0) (557, 0) 
(490, 1): if $stack3 == 0 goto $stack4 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (491, 0) (494, 0) 
(618, 1): if l6 >= l2 goto return 0  YES, jumped to: (619, 0) (636, 0) 
(742, 0): if l0 != l1 goto (branch)  YES, jumped to: (745, 0) (743, 0) 
(833, 1): if $stack5 != 0 goto return 0  YES, jumped to: (833, 2) (834, 0) 
(416, 1): if l2 >= l1 goto return 1  YES, jumped to: (417, 0) (421, 0) 
(672, 1): if l8 >= l4 goto l6 = l6 + 1  YES, jumped to: (673, 0) (670, 0) 
(833, 3): if $stack6 != 1 goto l1 = 0  YES, jumped to: (836, 0) (834, 0) 
(350, 2): if $stack5 != 0 goto l2 = l2 + 1  YES, jumped to: (351, 0) 
(412, 1): if $stack3 == 0 goto l1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (413, 0) (415, 0) 
(346, 0): if l1 != 0 goto l2 = 0  YES, jumped to: (347, 0) (349, 0) 
(565, 0): if l7 != l5 goto (branch)  YES, jumped to: (566, 0) (568, 0) 
(751, 1): if $stack6 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (751, 2) 
(751, 3): if $stack12 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (752, 0) 
(458, 0): if l4 != 10 goto return l3  YES, jumped to: (461, 0) 
(553, 0): if l0 != null goto $stack9 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (556, 0) 
(611, 1): if $stack9 != 0 goto return 0  YES, jumped to: (612, 0) (611, 2) 
(673, 1): if $stack13 != l7 goto l8 = l8 + 1  YES, jumped to: (672, 0) 
(611, 3): if $stack10 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (614, 0) (612, 0) 
(863, 0): if l0 == null goto return l0  YES, jumped to: (863, 1) 
(417, 2): if $stack6 != 0 goto l2 = l2 + 1  YES, jumped to: (418, 0) 
(863, 1): if l1 == null goto return l0  YES, jumped to: (863, 2) 
(863, 2): if l2 != null goto l3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>(l1)  YES, jumped to: (867, 0) 
(496, 0): if l1 == 13 goto return ""  YES, jumped to: (496, 1) 
(880, 0): if l6 != l4 goto $stack12 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l3)  YES, jumped to: (885, 0) (881, 0) 
(496, 1): if l1 != 10 goto return l0  YES, jumped to: (499, 0) 
(620, 1): if l8 >= l3 goto l6 = l6 + 1  YES, jumped to: (621, 0) (618, 0) 
(748, 2): if $stack4 == $stack5 goto $stack6 = l0 instanceof java.lang.String  YES, jumped to: (749, 0) (751, 0) 
(843, 2): if $stack10 == 0 goto $stack11 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  YES, jumped to: (845, 0) 
(839, 1): if l4 >= l3 goto (branch)  YES, jumped to: (840, 0) (849, 0) 
(323, 0): if l0 != null goto $stack1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (323, 3) (323, 1) 
(802, 0): if l2 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  YES, jumped to: (802, 1) (806, 0) 
(802, 4): if $stack8 == -1 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  YES, jumped to: (803, 0) (806, 0) 
(509, 0): if l2 == 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  YES, jumped to: (510, 0) 
(670, 1): if l6 >= l2 goto return 1  YES, jumped to: (671, 0) (688, 0) 
(377, 0): if l0 == null goto $stack2 = 1  YES, jumped to: (377, 1) (377, 3) 
(505, 0): if l2 != 10 goto (branch)  YES, jumped to: (509, 0) 
(377, 2): if $stack1 != 0 goto $stack2 = 0  YES, jumped to: (377, 3) (377, 5) 
(563, 3): if l6 >= $stack15 goto $stack16 = new java.lang.String  YES, jumped to: (564, 0) (580, 0) 
(877, 1): if l4 != $stack11 goto (branch)  YES, jumped to: (878, 0) (880, 0) 
(621, 1): if $stack15 != l7 goto l8 = l8 + 1  YES, jumped to: (620, 0) 
(745, 0): if l0 == null goto return 0  YES, jumped to: (745, 1) (746, 0) 
(745, 1): if l1 != null goto $stack4 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (748, 0) (746, 0) 
(840, 0): if l1 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  YES, jumped to: (843, 0) 
(869, 0): if l3 >= 0 goto l4 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (873, 0) (870, 0) 
(452, 0): if l1 >= 2 goto l2 = l1 - 1  YES, jumped to: (453, 0) (455, 0) 

In the following all of the instructions which were not covered will be shown: 

(448, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int length()>()  NO 
(349, 1): if l2 >= l1 goto return 1  NO 
(795, 0): if l1 != null goto $stack4 = virtualinvoke l1.<java.lang.String: boolean isEmpty()>()  NO 
(506, 2): if $stack12 != 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  NO 
(568, 2): if l5 != 1 goto $stack25 = new java.lang.String  NO 
(630, 0): if l6 >= l4 goto l8 = l8 + 1  NO 
(626, 0): if l8 != l5 goto (branch)  NO 
(630, 5): if $stack21 != $stack22 goto l8 = l8 + 1  NO 
(849, 0): if l1 == 0 goto $stack8 = 0  NO 
(849, 1): if l2 == 0 goto $stack8 = 0  NO 
(622, 1): if $stack18 != 0 goto (branch)  NO 
(350, 2): if $stack5 != 0 goto l2 = l2 + 1  NO 
(796, 0): if l2 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  NO 
(796, 4): if $stack15 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  NO 
(751, 1): if $stack6 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(751, 3): if $stack12 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(458, 0): if l4 != 10 goto return l3  NO 
(553, 0): if l0 != null goto $stack9 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  NO 
(458, 3): if $stack9 != 13 goto return l3  NO 
(673, 1): if $stack13 != l7 goto l8 = l8 + 1  NO 
(417, 2): if $stack6 != 0 goto l2 = l2 + 1  NO 
(863, 0): if l0 == null goto return l0  NO 
(863, 1): if l1 == null goto return l0  NO 
(863, 2): if l2 != null goto l3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>(l1)  NO 
(570, 0): if l8 == l4 goto (branch)  NO 
(756, 1): if l3 >= l2 goto return 1  NO 
(496, 0): if l1 == 13 goto return ""  NO 
(496, 1): if l1 != 10 goto return l0  NO 
(682, 0): if l6 >= l3 goto l8 = l8 + 1  NO 
(843, 2): if $stack10 == 0 goto $stack11 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 
(678, 0): if l8 != l5 goto (branch)  NO 
(682, 5): if $stack19 != $stack20 goto l8 = l8 + 1  NO 
(674, 1): if $stack16 != 0 goto (branch)  NO 
(509, 0): if l2 == 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  NO 
(505, 0): if l2 != 10 goto (branch)  NO 
(757, 2): if $stack8 == $stack9 goto l3 = l3 + 1  NO 
(621, 1): if $stack15 != l7 goto l8 = l8 + 1  NO 
(840, 0): if l1 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 
(840, 1): if l2 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 


comp5111.assignment.cut.Subject$BooleanTasks


In the following all of the instructions which were covered will be shown: 

(1393, 0): if l0 != l1 goto (branch)  YES, jumped to: (1396, 0) (1394, 0) 
(1396, 0): if l0 == 0 goto $stack2 = -1  YES, jumped to: (1396, 3) (1396, 1) 

In the following all of the instructions which were not covered will be shown: 




Coverage of Test Suite: comp5111.assignment.cut.RegressionTest2

comp5111.assignment.cut.Subject$NumberTasks
45 Branches from a total of 172 Branches were covered.
Percentage: 26.16279069767442%

comp5111.assignment.cut.Subject$CharTasks
17 Branches from a total of 24 Branches were covered.
Percentage: 70.83333333333334%

comp5111.assignment.cut.Subject$GregorianTasks
72 Branches from a total of 94 Branches were covered.
Percentage: 76.59574468085107%

comp5111.assignment.cut.Subject$ArrayTasks
21 Branches from a total of 22 Branches were covered.
Percentage: 95.45454545454545%

comp5111.assignment.cut.Subject
0 Branches from a total of 0 Branches were covered.
Percentage: 100.0%

comp5111.assignment.cut.Subject$FilenameTasks
34 Branches from a total of 98 Branches were covered.
Percentage: 34.69387755102041%

comp5111.assignment.cut.Subject$StringTasks
96 Branches from a total of 152 Branches were covered.
Percentage: 63.1578947368421%

comp5111.assignment.cut.Subject$BooleanTasks
4 Branches from a total of 4 Branches were covered.
Percentage: 100.0%

Overall Branch Coverage: 51.060070671378085%



In the following part you can see which branches were executed. Before every branch instruction you can see two numbers
in the form of (x,y), for Example (1,5). This indicates that the following Instruction can be found on line x of the Java code. 
y denotes that it is the y-th Jimple Instruction generated from the corresponding Java line. Only Branch instructions will be shown.
After each listed instructions you can find a NO if one or more branches weren't executed and a YES if one or more branches were takenIf it was executed you will also find a List of (x,y) values which denote the statements to which we jumped.



comp5111.assignment.cut.Subject$NumberTasks


In the following all of the instructions which were covered will be shown: 

(1181, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(l0)  YES, jumped to: (1184, 0) 
(1340, 1): if $stack5 != 45 goto $stack6 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 0)  YES, jumped to: (1346, 0) 
(1270, 1): if $stack13 == 0 goto $stack14 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l1)  YES, jumped to: (1273, 0) 
(1334, 1): if $stack1 == 0 goto $stack2 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (1337, 0) (1335, 0) 
(979, 1): if $stack25 != 0 goto $stack119 = 0  YES, jumped to: (979, 2) 
(946, 1): if $stack138 == 0 goto l7 = l7 + 1  YES, jumped to: (945, 0) 
(979, 2): if l5#11 == 46 goto $stack119 = 0  YES, jumped to: (979, 3) 
(1264, 0): if l4 != 43 goto $stack8 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l1)  YES, jumped to: (1267, 0) 
(1359, 0): if l4 != 0 goto l3 = l3 + 1  YES, jumped to: (1359, 1) 
(1004, 0): if l10 <= -1 goto l8 = null  YES, jumped to: (1007, 0) 
(1359, 3): if $stack10 != 0 goto l3 = l3 + 1  YES, jumped to: (1360, 0) 
(1353, 0): if $stack13 == 0 goto (branch)  YES, jumped to: (1356, 0) 
(934, 0): if l0 != null goto $stack15 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  YES, jumped to: (937, 0) 
(1254, 1): if $stack6 == 0 goto l1 = 0  YES, jumped to: (1257, 0) (1255, 0) 
(1351, 2): if l3 >= $stack5 goto return 1  YES, jumped to: (1352, 0) 
(992, 0): if l10 <= -1 goto (branch)  YES, jumped to: (999, 0) 
(1215, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l0)  YES, jumped to: (1219, 0) 
(1118, 0): if $stack7 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1)  YES, jumped to: (1118, 3) 
(1116, 0): if l2 == 45 goto $stack7 = 1  YES, jumped to: (1116, 1) 
(1116, 1): if l2 != 43 goto $stack7 = 0  YES, jumped to: (1116, 4) 
(1273, 1): if $stack14 == 0 goto $stack9 = new java.math.BigInteger  YES, jumped to: (1278, 0) 
(951, 0): if l4 <= 0 goto $stack19 = l2 - 1  YES, jumped to: (969, 0) 
(1337, 3): if $stack4 != 46 goto $stack5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)  YES, jumped to: (1340, 0) 
(980, 0): if l9 <= -1 goto (branch)  YES, jumped to: (992, 0) 
(1267, 1): if $stack8 != 0 goto l2 = 16  YES, jumped to: (1267, 2) 
(1234, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Long: java.lang.Long decode(java.lang.String)>(l0)  YES, jumped to: (1237, 0) 
(1267, 3): if $stack12 == 0 goto $stack13 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l1)  YES, jumped to: (1270, 0) 
(1296, 1): if $stack1 == 0 goto $stack2 = new java.math.BigDecimal  YES, jumped to: (1299, 0) (1297, 0) 
(945, 2): if l7 >= l6 goto (branch)  YES, jumped to: (945, 3) (951, 0) 
(943, 1): if $stack18 == 43 goto $stack145 = 1  YES, jumped to: (943, 2) 
(1261, 0): if l4 != 45 goto (branch)  YES, jumped to: (1264, 0) 
(1197, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(l0)  YES, jumped to: (1200, 0) 
(1292, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  YES, jumped to: (1296, 0) 
(943, 3): if $stack144 != 45 goto $stack145 = 0  YES, jumped to: (943, 6) 
(1356, 0): if l2 <= 1 goto (branch)  YES, jumped to: (1359, 0) 
(1003, 0): if l11 == 0 goto (branch)  YES, jumped to: (1004, 0) 
(937, 1): if $stack15 == 0 goto $stack16 = newarray (java.lang.String)[3]  YES, jumped to: (941, 0) (938, 0) 
(999, 0): if $stack119 == 0 goto $stack101 = l2  YES, jumped to: (999, 1) 
(1352, 1): if $stack6 != 46 goto $stack13 = 0  YES, jumped to: (1352, 4) 
(1251, 0): if l0 != null goto $stack6 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (1254, 0) 

In the following all of the instructions which were not covered will be shown: 

(993, 0): if l10 <= l2 goto l6#28 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>(l0, l10)  NO 
(1092, 4): if $stack33 != 0 goto l14 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>(l0)  NO 
(1088, 2): if $stack43 != 0 goto $stack44 = virtualinvoke l12#81.<java.lang.Float: java.lang.String toString()>()  NO 
(1092, 6): if $stack38 == 0 goto (branch)  NO 
(1088, 4): if $stack48 == 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1340, 1): if $stack5 != 45 goto $stack6 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 0)  NO 
(981, 0): if l10 <= -1 goto $stack107 = l9 + 1  NO 
(1270, 1): if $stack13 == 0 goto $stack14 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l1)  NO 
(1068, 0): if l7#20 != null goto l12#81 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)  NO 
(1068, 1): if l8 != null goto l12#81 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)  NO 
(1163, 2): if l1 < 0 goto return 1  NO 
(1353, 0): if $stack13 == 0 goto (branch)  NO 
(1031, 1): if $stack74 != 0 goto (branch)  NO 
(1031, 4): if $stack83 != 0 goto return l13#63  NO 
(961, 0): if l6 > 16 goto $stack122 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>(l0)  NO 
(1031, 6): if $stack84 == 0 goto (branch)  NO 
(961, 1): if l6 != 16 goto (branch)  NO 
(961, 2): if l5#11 <= 55 goto (branch)  NO 
(1279, 0): if l3 == 0 goto $stack11 = $stack9  NO 
(1089, 3): if $stack46 == 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1118, 0): if $stack7 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1)  NO 
(1341, 1): if $stack7 != 1 goto $stack8 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 1)  NO 
(953, 1): if l6 >= l2 goto l6 = l2 - l4  NO 
(1015, 0): if l7#20 != null goto $stack62 = new java.lang.NumberFormatException  NO 
(982, 0): if l10 < l9 goto $stack114 = new java.lang.NumberFormatException  NO 
(1015, 1): if l8 != null goto $stack62 = new java.lang.NumberFormatException  NO 
(1337, 3): if $stack4 != 46 goto $stack5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)  NO 
(982, 1): if l10 <= l2 goto $stack116 = l9 + 1  NO 
(1234, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Long: java.lang.Long decode(java.lang.String)>(l0)  NO 
(1267, 1): if $stack8 != 0 goto l2 = 16  NO 
(1267, 3): if $stack12 == 0 goto $stack13 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l1)  NO 
(1197, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(l0)  NO 
(1292, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  NO 
(1003, 0): if l11 == 0 goto (branch)  NO 
(1164, 1): if $stack3 == 48 goto l1 = l1 + -1  NO 
(1160, 0): if l0 != null goto $stack2 = virtualinvoke l0.<java.lang.String: int length()>()  NO 
(999, 0): if $stack119 == 0 goto $stack101 = l2  NO 
(1094, 3): if $stack37 != 0 goto return l14  NO 
(1251, 0): if l0 != null goto $stack6 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  NO 
(1181, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(l0)  NO 
(1148, 1): if $stack2 == 0 goto $stack4 = 0  NO 
(1148, 3): if $stack3 == 0 goto $stack4 = 0  NO 
(1045, 1): if $stack76 != 0 goto (branch)  NO 
(979, 1): if $stack25 != 0 goto $stack119 = 0  NO 
(946, 1): if $stack138 == 0 goto l7 = l7 + 1  NO 
(979, 2): if l5#11 == 46 goto $stack119 = 0  NO 
(1045, 4): if $stack79 != 0 goto return l13#69  NO 
(1264, 0): if l4 != 43 goto $stack8 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l1)  NO 
(1045, 6): if $stack80 == 0 goto (branch)  NO 
(1359, 0): if l4 != 0 goto l3 = l3 + 1  NO 
(1004, 0): if l10 <= -1 goto l8 = null  NO 
(1359, 3): if $stack10 != 0 goto l3 = l3 + 1  NO 
(1004, 2): if l10 >= $stack90 goto l8 = null  NO 
(934, 0): if l0 != null goto $stack15 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  NO 
(1351, 2): if l3 >= $stack5 goto return 1  NO 
(992, 0): if l10 <= -1 goto (branch)  NO 
(1215, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l0)  NO 
(1087, 1): if $stack29 != 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1116, 0): if l2 == 45 goto $stack7 = 1  NO 
(955, 0): if l5#11 == 48 goto l4 = l4 + 1  NO 
(988, 1): if $stack119 == 0 goto $stack110 = l2  NO 
(1116, 1): if l2 != 43 goto $stack7 = 0  NO 
(1017, 1): if $stack65 != 0 goto $stack66 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>(l12)  NO 
(1273, 1): if $stack14 == 0 goto $stack9 = new java.math.BigInteger  NO 
(951, 0): if l4 <= 0 goto $stack19 = l2 - 1  NO 
(1017, 3): if $stack68 != 45 goto $stack66 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>(l12)  NO 
(1273, 4): if $stack19 <= $stack20 goto $stack9 = new java.math.BigInteger  NO 
(980, 0): if l9 <= -1 goto (branch)  NO 
(1017, 6): if $stack71 != 0 goto $stack67 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>(l12)  NO 
(1017, 8): if $stack66 == 0 goto $stack62 = new java.lang.NumberFormatException  NO 
(943, 1): if $stack18 == 43 goto $stack145 = 1  NO 
(1261, 0): if l4 != 45 goto (branch)  NO 
(943, 3): if $stack144 != 45 goto $stack145 = 0  NO 
(1356, 0): if l2 <= 1 goto (branch)  NO 
(1063, 0): if l10 <= -1 goto l8 = null  NO 
(1352, 1): if $stack6 != 46 goto $stack13 = 0  NO 
(1063, 2): if l10 >= $stack55 goto l8 = null  NO 
(964, 0): if l6 > 8 goto $stack123 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>(l0)  NO 
(964, 1): if l6 != 8 goto $stack124 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>(l0)  NO 
(1092, 1): if $stack30 != 0 goto (branch)  NO 
(964, 2): if l5#11 <= 55 goto $stack124 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>(l0)  NO 


comp5111.assignment.cut.Subject$CharTasks


In the following all of the instructions which were covered will be shown: 

(1441, 0): if l0 == null goto $stack2 = l1  YES, jumped to: (1441, 1) 
(1536, 0): if l0 < 65 goto $stack1 = 0  YES, jumped to: (1536, 4) (1536, 1) 
(1536, 1): if l0 > 90 goto $stack1 = 0  YES, jumped to: (1536, 4) 
(1517, 1): if $stack1 != 0 goto $stack3 = 1  YES, jumped to: (1517, 2) 
(1517, 3): if $stack2 == 0 goto $stack3 = 0  YES, jumped to: (1517, 6) (1517, 4) 
(1498, 0): if l0 < 32 goto $stack1 = 1  YES, jumped to: (1498, 2) (1498, 1) 
(1498, 1): if l0 != 127 goto $stack1 = 0  YES, jumped to: (1498, 4) 
(1479, 0): if l0 < 32 goto $stack1 = 0  YES, jumped to: (1479, 4) (1479, 1) 
(1479, 1): if l0 >= 127 goto $stack1 = 0  YES, jumped to: (1479, 2) 
(1460, 0): if l0 >= 128 goto $stack1 = 0  YES, jumped to: (1460, 1) 
(1555, 0): if l0 < 97 goto $stack1 = 0  YES, jumped to: (1555, 4) (1555, 1) 
(1555, 1): if l0 > 122 goto $stack1 = 0  YES, jumped to: (1555, 2) 

In the following all of the instructions which were not covered will be shown: 

(1441, 0): if l0 == null goto $stack2 = l1  NO 
(1536, 1): if l0 > 90 goto $stack1 = 0  NO 
(1517, 1): if $stack1 != 0 goto $stack3 = 1  NO 
(1498, 1): if l0 != 127 goto $stack1 = 0  NO 
(1479, 1): if l0 >= 127 goto $stack1 = 0  NO 
(1460, 0): if l0 >= 128 goto $stack1 = 0  NO 
(1555, 1): if l0 > 122 goto $stack1 = 0  NO 


comp5111.assignment.cut.Subject$GregorianTasks


In the following all of the instructions which were covered will be shown: 

(1761, 0): if l1 != 2 goto $stack4 = new java.lang.IllegalArgumentException  YES, jumped to: (1762, 0) (1761, 1) 
(1732, 3): if $stack2 != 0 goto $stack4 = 1  YES, jumped to: (1732, 6) 
(1728, 0): if l0 <= 1900 goto $stack1 = l0 & 3  YES, jumped to: (1732, 0) (1728, 1) 
(1759, 0): if l1 == 1 goto return 31  YES, jumped to: (1759, 7) (1759, 1) 
(1728, 1): if l0 >= 2100 goto $stack1 = l0 & 3  YES, jumped to: (1732, 0) 
(1761, 2): if $stack6 == 0 goto $stack7 = 28  YES, jumped to: (1761, 3) 
(1759, 1): if l1 == 3 goto return 31  YES, jumped to: (1759, 2) (1759, 7) 
(1759, 2): if l1 == 5 goto return 31  YES, jumped to: (1759, 3) (1759, 7) 
(1821, 1): if l2 <= $stack9 goto return  YES, jumped to: (1827, 0) 
(1759, 3): if l1 == 7 goto return 31  YES, jumped to: (1759, 4) (1759, 7) 
(1759, 4): if l1 == 8 goto return 31  YES, jumped to: (1759, 5) (1759, 7) 
(1759, 5): if l1 == 10 goto return 31  YES, jumped to: (1759, 6) (1759, 7) 
(1759, 6): if l1 != 12 goto (branch)  YES, jumped to: (1760, 0) (1759, 7) 
(1815, 0): if l1 < 1 goto $stack5 = new java.lang.IllegalArgumentException  YES, jumped to: (1815, 1) (1816, 0) 
(1815, 1): if l1 <= 12 goto (branch)  YES, jumped to: (1818, 0) (1816, 0) 
(1931, 0): if l0 != 10 goto (branch)  YES, jumped to: (1931, 1) (1932, 0) 
(1929, 0): if l0 != 8 goto (branch)  YES, jumped to: (1930, 0) (1929, 1) 
(1927, 0): if l0 != 6 goto (branch)  YES, jumped to: (1928, 0) (1927, 1) 
(1861, 0): if l2 < 1 goto $stack8 = new java.lang.IllegalArgumentException  YES, jumped to: (1861, 1) (1862, 0) 
(1925, 0): if l0 != 4 goto (branch)  YES, jumped to: (1926, 0) 
(1861, 1): if l2 <= 31 goto $stack10 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)  YES, jumped to: (1862, 0) (1864, 0) 
(1923, 0): if l0 != 2 goto (branch)  YES, jumped to: (1924, 0) (1923, 1) 
(1890, 0): if l7 > 0 goto return l7  YES, jumped to: (1894, 0) (1891, 0) 
(1760, 0): if l1 == 4 goto return 30  YES, jumped to: (1760, 1) (1760, 4) 
(1760, 1): if l1 == 6 goto return 30  YES, jumped to: (1760, 2) (1760, 4) 
(1760, 2): if l1 == 9 goto return 30  YES, jumped to: (1760, 3) (1760, 4) 
(1760, 3): if l1 != 11 goto (branch)  YES, jumped to: (1761, 0) (1760, 4) 
(1818, 0): if l2 < 1 goto $stack7 = new java.lang.IllegalArgumentException  YES, jumped to: (1818, 1) (1819, 0) 
(1818, 1): if l2 <= 31 goto $stack9 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)  YES, jumped to: (1821, 0) (1819, 0) 
(1880, 0): if l4 >= 0 goto l6 = staticinvoke <java.lang.Math: int floorDiv(int,int)>(l5, 4)  YES, jumped to: (1881, 0) (1887, 0) 
(1878, 0): if l1 > 2 goto l6 = staticinvoke <java.lang.Math: int floorDiv(int,int)>(l5, 4)  YES, jumped to: (1879, 0) (1887, 0) 
(1812, 0): if l0 < -999999999 goto $stack3 = new java.lang.IllegalArgumentException  YES, jumped to: (1812, 1) 
(1812, 1): if l0 <= 999999999 goto (branch)  YES, jumped to: (1815, 0) 
(1874, 0): if l4 >= 0 goto (branch)  YES, jumped to: (1878, 0) (1875, 0) 
(1932, 0): if l0 != 11 goto (branch)  YES, jumped to: (1932, 1) 
(1930, 0): if l0 != 9 goto (branch)  YES, jumped to: (1930, 1) (1931, 0) 
(1928, 0): if l0 != 7 goto (branch)  YES, jumped to: (1929, 0) 
(1864, 1): if l2 <= $stack10 goto l3 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>(l1)  YES, jumped to: (1870, 0) 
(1926, 0): if l0 != 5 goto (branch)  YES, jumped to: (1927, 0) 
(1924, 0): if l0 != 3 goto (branch)  YES, jumped to: (1925, 0) 
(1732, 1): if $stack1 == 0 goto $stack4 = 1  YES, jumped to: (1732, 6) (1732, 2) 
(1922, 0): if l0 != 1 goto (branch)  YES, jumped to: (1922, 1) (1923, 0) 

In the following all of the instructions which were not covered will be shown: 

(1732, 3): if $stack2 != 0 goto $stack4 = 1  NO 
(1728, 1): if l0 >= 2100 goto $stack1 = l0 & 3  NO 
(1732, 5): if $stack3 != 0 goto $stack4 = 0  NO 
(1761, 2): if $stack6 == 0 goto $stack7 = 28  NO 
(1821, 1): if l2 <= $stack9 goto return  NO 
(1904, 0): if l1 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1)  NO 
(1933, 0): if l0 != 12 goto $stack1 = new java.lang.IllegalArgumentException  NO 
(1925, 0): if l0 != 4 goto (branch)  NO 
(1729, 1): if $stack7 != 0 goto $stack8 = 0  NO 
(1909, 0): if l2 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l2)  NO 
(1812, 0): if l0 < -999999999 goto $stack3 = new java.lang.IllegalArgumentException  NO 
(1812, 1): if l0 <= 999999999 goto (branch)  NO 
(1932, 0): if l0 != 11 goto (branch)  NO 
(1928, 0): if l0 != 7 goto (branch)  NO 
(1864, 1): if l2 <= $stack10 goto l3 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>(l1)  NO 
(1926, 0): if l0 != 5 goto (branch)  NO 
(1924, 0): if l0 != 3 goto (branch)  NO 


comp5111.assignment.cut.Subject$ArrayTasks


In the following all of the instructions which were covered will be shown: 

(1664, 1): if l2 < $stack4 goto (branch)  YES, jumped to: (1665, 0) (1667, 0) 
(1661, 0): if l0 == null goto return -1  YES, jumped to: (1661, 1) (1662, 0) 
(1661, 1): if l2 >= 0 goto $stack4 = lengthof l0  YES, jumped to: (1664, 0) (1662, 0) 
(1609, 0): if l0 == null goto $stack1 = 0  YES, jumped to: (1609, 1) (1609, 3) 
(1674, 1): if l3 < 0 goto return -1  YES, jumped to: (1675, 0) (1680, 0) 
(1675, 2): if $stack10 == 0 goto l3 = l3 + -1  YES, jumped to: (1674, 0) (1676, 0) 
(1673, 3): if $stack7 == 0 goto return -1  YES, jumped to: (1674, 0) (1680, 0) 
(1669, 1): if $stack12 != null goto l3 = l3 + -1  YES, jumped to: (1668, 0) 
(1667, 0): if l1 != null goto $stack5 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>()  YES, jumped to: (1673, 0) (1668, 0) 
(1668, 1): if l3 < 0 goto (branch)  YES, jumped to: (1669, 0) (1668, 2) 
(1619, 1): if $stack1 != 0 goto $stack2 = 0  YES, jumped to: (1619, 4) (1619, 2) 

In the following all of the instructions which were not covered will be shown: 

(1669, 1): if $stack12 != null goto l3 = l3 + -1  NO 


comp5111.assignment.cut.Subject


In the following all of the instructions which were covered will be shown: 


In the following all of the instructions which were not covered will be shown: 



comp5111.assignment.cut.Subject$FilenameTasks


In the following all of the instructions which were covered will be shown: 

(153, 0): if l1 == 0 goto $stack13 = lengthof l2  YES, jumped to: (163, 0) 
(54, 0): if l0 != 92 goto $stack1 = new java.lang.IllegalArgumentException  YES, jumped to: (57, 0) 
(149, 1): if $stack11 == 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  YES, jumped to: (152, 0) 
(116, 1): if $stack7 == 0 goto return 0  YES, jumped to: (117, 0) 
(213, 2): if l2 >= $stack4 goto return 1  YES, jumped to: (214, 0) (222, 0) 
(81, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>(l0)  YES, jumped to: (84, 0) 
(145, 0): if l1 == 0 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  YES, jumped to: (148, 0) 
(178, 2): if l5 != $stack18 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  YES, jumped to: (178, 3) 
(178, 4): if $stack24 == 0 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  YES, jumped to: (185, 0) 
(172, 0): if l4 <= 1 goto l3#27 = l3#27 + 1  YES, jumped to: (198, 0) 
(170, 1): if $stack16 == 0 goto l4 = 0  YES, jumped to: (171, 0) (176, 0) 
(265, 1): if $stack9 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (265, 2) 
(232, 0): if l0 == 47 goto $stack1 = 1  YES, jumped to: (232, 1) 
(232, 1): if l0 != 92 goto $stack1 = 0  YES, jumped to: (232, 4) 
(265, 3): if $stack32 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (266, 0) 
(168, 2): if l5 >= $stack14 goto (branch)  YES, jumped to: (169, 0) (200, 0) 
(100, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int)>(47)  YES, jumped to: (103, 0) 
(185, 1): if $stack19 <= 4 goto l7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l6, 16)  YES, jumped to: (190, 0) (186, 0) 
(216, 2): if l2 != $stack14 goto $stack15 = 0  YES, jumped to: (216, 3) 
(218, 4): if $stack10 != 0 goto l2 = l2 + 1  YES, jumped to: (219, 0) (213, 0) 
(245, 1): if $stack1 < 0 goto return l0  YES, jumped to: (249, 0) 
(214, 2): if $stack6 == 0 goto $stack8 = <comp5111.assignment.cut.Subject$FilenameTasks: java.util.regex.Pattern REG_NAME_PART_PATTERN>  YES, jumped to: (216, 0) (218, 0) 
(51, 0): if l0 != 47 goto (branch)  YES, jumped to: (54, 0) 
(148, 1): if $stack10 == 0 goto $stack11 = virtualinvoke l0.<java.lang.String: boolean endsWith(java.lang.String)>(":")  YES, jumped to: (149, 0) 
(200, 0): if l3#27 > 8 goto $stack15 = 0  YES, jumped to: (200, 1) 
(200, 1): if l3#27 >= 8 goto $stack15 = 1  YES, jumped to: (200, 2) 
(200, 2): if l1 == 0 goto $stack15 = 0  YES, jumped to: (200, 5) 
(163, 1): if $stack13 <= 8 goto l3#27 = 0  YES, jumped to: (166, 0) 

In the following all of the instructions which were not covered will be shown: 

(155, 1): if $stack30 == 0 goto $stack31 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>("::")  NO 
(279, 0): if l8 != 63 goto (branch)  NO 
(275, 1): if $stack20 == 0 goto (branch)  NO 
(81, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>(l0)  NO 
(172, 0): if l4 <= 1 goto l3#27 = l3#27 + 1  NO 
(148, 1): if $stack10 == 0 goto $stack11 = virtualinvoke l0.<java.lang.String: boolean endsWith(java.lang.String)>(":")  NO 
(148, 3): if $stack45 == 0 goto return 0  NO 
(194, 0): if l7 < 0 goto return 0  NO 
(194, 1): if l7 <= 65535 goto l3#27 = l3#27 + 1  NO 
(289, 1): if $stack13 == 0 goto $stack14 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(128, 1): if $stack11 <= 1 goto l2 = l2 + 1  NO 
(128, 3): if $stack14 == 0 goto l2 = l2 + 1  NO 
(124, 0): if l4 <= 255 goto $stack11 = virtualinvoke l3.<java.lang.String: int length()>()  NO 
(153, 0): if l1 == 0 goto $stack13 = lengthof l2  NO 
(281, 0): if l4 == 42 goto l4 = l8  NO 
(54, 0): if l0 != 92 goto $stack1 = new java.lang.IllegalArgumentException  NO 
(149, 1): if $stack11 == 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  NO 
(116, 1): if $stack7 == 0 goto return 0  NO 
(149, 3): if $stack41 != 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  NO 
(116, 3): if $stack8 == 4 goto l2 = 1  NO 
(145, 0): if l1 == 0 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  NO 
(178, 2): if l5 != $stack18 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  NO 
(273, 2): if l7 >= l6 goto $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()  NO 
(145, 3): if $stack49 == $stack50 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  NO 
(178, 4): if $stack24 == 0 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  NO 
(232, 0): if l0 == 47 goto $stack1 = 1  NO 
(265, 1): if $stack9 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  NO 
(232, 1): if l0 != 92 goto $stack1 = 0  NO 
(265, 3): if $stack32 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  NO 
(100, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int)>(47)  NO 
(158, 1): if $stack31 == 0 goto $stack32 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(158, 3): if $stack36 != 0 goto $stack32 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(121, 1): if l2 > 4 goto return 1  NO 
(216, 2): if l2 != $stack14 goto $stack15 = 0  NO 
(245, 1): if $stack1 < 0 goto return l0  NO 
(51, 0): if l0 != 47 goto (branch)  NO 
(179, 1): if $stack27 != 0 goto l3#27 = l3#27 + 2  NO 
(274, 0): if l8 == 63 goto $stack20 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()  NO 
(274, 1): if l8 != 42 goto virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(l8)  NO 
(200, 0): if l3#27 > 8 goto $stack15 = 0  NO 
(200, 1): if l3#27 >= 8 goto $stack15 = 1  NO 
(200, 2): if l1 == 0 goto $stack15 = 0  NO 
(163, 1): if $stack13 <= 8 goto l3#27 = 0  NO 


comp5111.assignment.cut.Subject$StringTasks


In the following all of the instructions which were covered will be shown: 

(448, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (451, 0) 
(799, 1): if $stack4 == 0 goto (branch)  YES, jumped to: (800, 0) (802, 0) 
(349, 1): if l2 >= l1 goto return 1  YES, jumped to: (350, 0) 
(795, 0): if l1 != null goto $stack4 = virtualinvoke l1.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (799, 0) 
(568, 0): if l1 == 0 goto $stack25 = new java.lang.String  YES, jumped to: (568, 1) (575, 0) 
(791, 0): if l2 != 0 goto (branch)  YES, jumped to: (795, 0) (792, 0) 
(663, 0): if l0 == null goto return 1  YES, jumped to: (663, 1) (664, 0) 
(568, 1): if l7 != 2 goto $stack25 = new java.lang.String  YES, jumped to: (575, 0) (568, 2) 
(663, 1): if l1 != null goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (666, 0) (664, 0) 
(568, 2): if l5 != 1 goto $stack25 = new java.lang.String  YES, jumped to: (575, 0) 
(849, 0): if l1 == 0 goto $stack8 = 0  YES, jumped to: (849, 4) 
(494, 1): if $stack4 != 1 goto $stack5 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (502, 0) (495, 0) 
(845, 2): if $stack12 == 0 goto l4 = l4 + 1  YES, jumped to: (846, 0) (839, 0) 
(556, 1): if $stack9 == 0 goto l2 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (557, 0) (559, 0) 
(490, 1): if $stack3 == 0 goto $stack4 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (494, 0) (491, 0) 
(618, 1): if l6 >= l2 goto return 0  YES, jumped to: (619, 0) (636, 0) 
(742, 0): if l0 != l1 goto (branch)  YES, jumped to: (745, 0) (743, 0) 
(833, 1): if $stack5 != 0 goto return 0  YES, jumped to: (834, 0) (833, 2) 
(416, 1): if l2 >= l1 goto return 1  YES, jumped to: (417, 0) (421, 0) 
(672, 1): if l8 >= l4 goto l6 = l6 + 1  YES, jumped to: (673, 0) (670, 0) 
(833, 3): if $stack6 != 1 goto l1 = 0  YES, jumped to: (836, 0) (834, 0) 
(350, 2): if $stack5 != 0 goto l2 = l2 + 1  YES, jumped to: (351, 0) 
(412, 1): if $stack3 == 0 goto l1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (413, 0) (415, 0) 
(346, 0): if l1 != 0 goto l2 = 0  YES, jumped to: (347, 0) (349, 0) 
(565, 0): if l7 != l5 goto (branch)  YES, jumped to: (566, 0) (568, 0) 
(751, 1): if $stack6 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (751, 2) 
(751, 3): if $stack12 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (752, 0) 
(458, 0): if l4 != 10 goto return l3  YES, jumped to: (461, 0) 
(553, 0): if l0 != null goto $stack9 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (556, 0) 
(611, 1): if $stack9 != 0 goto return 0  YES, jumped to: (612, 0) (611, 2) 
(673, 1): if $stack13 != l7 goto l8 = l8 + 1  YES, jumped to: (672, 0) 
(611, 3): if $stack10 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (614, 0) (612, 0) 
(863, 0): if l0 == null goto return l0  YES, jumped to: (863, 1) 
(417, 2): if $stack6 != 0 goto l2 = l2 + 1  YES, jumped to: (418, 0) 
(863, 1): if l1 == null goto return l0  YES, jumped to: (863, 2) 
(863, 2): if l2 != null goto l3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>(l1)  YES, jumped to: (867, 0) 
(496, 0): if l1 == 13 goto return ""  YES, jumped to: (496, 1) 
(880, 0): if l6 != l4 goto $stack12 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l3)  YES, jumped to: (885, 0) (881, 0) 
(496, 1): if l1 != 10 goto return l0  YES, jumped to: (499, 0) 
(620, 1): if l8 >= l3 goto l6 = l6 + 1  YES, jumped to: (621, 0) (618, 0) 
(748, 2): if $stack4 == $stack5 goto $stack6 = l0 instanceof java.lang.String  YES, jumped to: (749, 0) (751, 0) 
(843, 2): if $stack10 == 0 goto $stack11 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  YES, jumped to: (845, 0) 
(839, 1): if l4 >= l3 goto (branch)  YES, jumped to: (840, 0) (849, 0) 
(323, 0): if l0 != null goto $stack1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (323, 3) (323, 1) 
(802, 0): if l2 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  YES, jumped to: (802, 1) (806, 0) 
(802, 4): if $stack8 == -1 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  YES, jumped to: (803, 0) (806, 0) 
(509, 0): if l2 == 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  YES, jumped to: (510, 0) 
(670, 1): if l6 >= l2 goto return 1  YES, jumped to: (671, 0) (688, 0) 
(377, 0): if l0 == null goto $stack2 = 1  YES, jumped to: (377, 1) (377, 3) 
(505, 0): if l2 != 10 goto (branch)  YES, jumped to: (509, 0) 
(377, 2): if $stack1 != 0 goto $stack2 = 0  YES, jumped to: (377, 3) (377, 5) 
(563, 3): if l6 >= $stack15 goto $stack16 = new java.lang.String  YES, jumped to: (564, 0) (580, 0) 
(877, 1): if l4 != $stack11 goto (branch)  YES, jumped to: (878, 0) (880, 0) 
(621, 1): if $stack15 != l7 goto l8 = l8 + 1  YES, jumped to: (620, 0) 
(745, 0): if l0 == null goto return 0  YES, jumped to: (745, 1) (746, 0) 
(745, 1): if l1 != null goto $stack4 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (746, 0) (748, 0) 
(840, 0): if l1 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  YES, jumped to: (843, 0) 
(869, 0): if l3 >= 0 goto l4 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (873, 0) (870, 0) 
(452, 0): if l1 >= 2 goto l2 = l1 - 1  YES, jumped to: (453, 0) (455, 0) 

In the following all of the instructions which were not covered will be shown: 

(448, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int length()>()  NO 
(349, 1): if l2 >= l1 goto return 1  NO 
(795, 0): if l1 != null goto $stack4 = virtualinvoke l1.<java.lang.String: boolean isEmpty()>()  NO 
(506, 2): if $stack12 != 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  NO 
(568, 2): if l5 != 1 goto $stack25 = new java.lang.String  NO 
(630, 0): if l6 >= l4 goto l8 = l8 + 1  NO 
(626, 0): if l8 != l5 goto (branch)  NO 
(630, 5): if $stack21 != $stack22 goto l8 = l8 + 1  NO 
(849, 0): if l1 == 0 goto $stack8 = 0  NO 
(849, 1): if l2 == 0 goto $stack8 = 0  NO 
(622, 1): if $stack18 != 0 goto (branch)  NO 
(350, 2): if $stack5 != 0 goto l2 = l2 + 1  NO 
(796, 0): if l2 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  NO 
(796, 4): if $stack15 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  NO 
(751, 1): if $stack6 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(751, 3): if $stack12 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(458, 0): if l4 != 10 goto return l3  NO 
(553, 0): if l0 != null goto $stack9 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  NO 
(458, 3): if $stack9 != 13 goto return l3  NO 
(673, 1): if $stack13 != l7 goto l8 = l8 + 1  NO 
(417, 2): if $stack6 != 0 goto l2 = l2 + 1  NO 
(863, 0): if l0 == null goto return l0  NO 
(863, 1): if l1 == null goto return l0  NO 
(863, 2): if l2 != null goto l3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>(l1)  NO 
(570, 0): if l8 == l4 goto (branch)  NO 
(756, 1): if l3 >= l2 goto return 1  NO 
(496, 0): if l1 == 13 goto return ""  NO 
(496, 1): if l1 != 10 goto return l0  NO 
(682, 0): if l6 >= l3 goto l8 = l8 + 1  NO 
(843, 2): if $stack10 == 0 goto $stack11 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 
(678, 0): if l8 != l5 goto (branch)  NO 
(682, 5): if $stack19 != $stack20 goto l8 = l8 + 1  NO 
(674, 1): if $stack16 != 0 goto (branch)  NO 
(509, 0): if l2 == 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  NO 
(505, 0): if l2 != 10 goto (branch)  NO 
(757, 2): if $stack8 == $stack9 goto l3 = l3 + 1  NO 
(621, 1): if $stack15 != l7 goto l8 = l8 + 1  NO 
(840, 0): if l1 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 
(840, 1): if l2 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 


comp5111.assignment.cut.Subject$BooleanTasks


In the following all of the instructions which were covered will be shown: 

(1393, 0): if l0 != l1 goto (branch)  YES, jumped to: (1396, 0) (1394, 0) 
(1396, 0): if l0 == 0 goto $stack2 = -1  YES, jumped to: (1396, 1) (1396, 3) 

In the following all of the instructions which were not covered will be shown: 




Coverage of Test Suite: comp5111.assignment.cut.RegressionTest3

comp5111.assignment.cut.Subject$NumberTasks
45 Branches from a total of 172 Branches were covered.
Percentage: 26.16279069767442%

comp5111.assignment.cut.Subject$CharTasks
17 Branches from a total of 24 Branches were covered.
Percentage: 70.83333333333334%

comp5111.assignment.cut.Subject$GregorianTasks
78 Branches from a total of 94 Branches were covered.
Percentage: 82.97872340425532%

comp5111.assignment.cut.Subject$ArrayTasks
21 Branches from a total of 22 Branches were covered.
Percentage: 95.45454545454545%

comp5111.assignment.cut.Subject
0 Branches from a total of 0 Branches were covered.
Percentage: 100.0%

comp5111.assignment.cut.Subject$FilenameTasks
34 Branches from a total of 98 Branches were covered.
Percentage: 34.69387755102041%

comp5111.assignment.cut.Subject$StringTasks
96 Branches from a total of 152 Branches were covered.
Percentage: 63.1578947368421%

comp5111.assignment.cut.Subject$BooleanTasks
4 Branches from a total of 4 Branches were covered.
Percentage: 100.0%

Overall Branch Coverage: 52.120141342756185%



In the following part you can see which branches were executed. Before every branch instruction you can see two numbers
in the form of (x,y), for Example (1,5). This indicates that the following Instruction can be found on line x of the Java code. 
y denotes that it is the y-th Jimple Instruction generated from the corresponding Java line. Only Branch instructions will be shown.
After each listed instructions you can find a NO if one or more branches weren't executed and a YES if one or more branches were takenIf it was executed you will also find a List of (x,y) values which denote the statements to which we jumped.



comp5111.assignment.cut.Subject$NumberTasks


In the following all of the instructions which were covered will be shown: 

(1181, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(l0)  YES, jumped to: (1184, 0) 
(1340, 1): if $stack5 != 45 goto $stack6 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 0)  YES, jumped to: (1346, 0) 
(1334, 1): if $stack1 == 0 goto $stack2 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (1335, 0) (1337, 0) 
(1270, 1): if $stack13 == 0 goto $stack14 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l1)  YES, jumped to: (1273, 0) 
(979, 1): if $stack25 != 0 goto $stack119 = 0  YES, jumped to: (979, 2) 
(946, 1): if $stack138 == 0 goto l7 = l7 + 1  YES, jumped to: (945, 0) 
(979, 2): if l5#11 == 46 goto $stack119 = 0  YES, jumped to: (979, 3) 
(1264, 0): if l4 != 43 goto $stack8 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l1)  YES, jumped to: (1267, 0) 
(1359, 0): if l4 != 0 goto l3 = l3 + 1  YES, jumped to: (1359, 1) 
(1359, 3): if $stack10 != 0 goto l3 = l3 + 1  YES, jumped to: (1360, 0) 
(1004, 0): if l10 <= -1 goto l8 = null  YES, jumped to: (1007, 0) 
(1353, 0): if $stack13 == 0 goto (branch)  YES, jumped to: (1356, 0) 
(934, 0): if l0 != null goto $stack15 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  YES, jumped to: (937, 0) 
(1254, 1): if $stack6 == 0 goto l1 = 0  YES, jumped to: (1255, 0) (1257, 0) 
(1351, 2): if l3 >= $stack5 goto return 1  YES, jumped to: (1352, 0) 
(992, 0): if l10 <= -1 goto (branch)  YES, jumped to: (999, 0) 
(1215, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l0)  YES, jumped to: (1219, 0) 
(1118, 0): if $stack7 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1)  YES, jumped to: (1118, 3) 
(1116, 0): if l2 == 45 goto $stack7 = 1  YES, jumped to: (1116, 1) 
(1116, 1): if l2 != 43 goto $stack7 = 0  YES, jumped to: (1116, 4) 
(1273, 1): if $stack14 == 0 goto $stack9 = new java.math.BigInteger  YES, jumped to: (1278, 0) 
(951, 0): if l4 <= 0 goto $stack19 = l2 - 1  YES, jumped to: (969, 0) 
(1337, 3): if $stack4 != 46 goto $stack5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)  YES, jumped to: (1340, 0) 
(980, 0): if l9 <= -1 goto (branch)  YES, jumped to: (992, 0) 
(1267, 1): if $stack8 != 0 goto l2 = 16  YES, jumped to: (1267, 2) 
(1234, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Long: java.lang.Long decode(java.lang.String)>(l0)  YES, jumped to: (1237, 0) 
(1267, 3): if $stack12 == 0 goto $stack13 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l1)  YES, jumped to: (1270, 0) 
(1296, 1): if $stack1 == 0 goto $stack2 = new java.math.BigDecimal  YES, jumped to: (1299, 0) (1297, 0) 
(945, 2): if l7 >= l6 goto (branch)  YES, jumped to: (945, 3) (951, 0) 
(943, 1): if $stack18 == 43 goto $stack145 = 1  YES, jumped to: (943, 2) 
(1197, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(l0)  YES, jumped to: (1200, 0) 
(1261, 0): if l4 != 45 goto (branch)  YES, jumped to: (1264, 0) 
(1292, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  YES, jumped to: (1296, 0) 
(1356, 0): if l2 <= 1 goto (branch)  YES, jumped to: (1359, 0) 
(943, 3): if $stack144 != 45 goto $stack145 = 0  YES, jumped to: (943, 6) 
(1003, 0): if l11 == 0 goto (branch)  YES, jumped to: (1004, 0) 
(937, 1): if $stack15 == 0 goto $stack16 = newarray (java.lang.String)[3]  YES, jumped to: (938, 0) (941, 0) 
(1352, 1): if $stack6 != 46 goto $stack13 = 0  YES, jumped to: (1352, 4) 
(999, 0): if $stack119 == 0 goto $stack101 = l2  YES, jumped to: (999, 1) 
(1251, 0): if l0 != null goto $stack6 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (1254, 0) 

In the following all of the instructions which were not covered will be shown: 

(993, 0): if l10 <= l2 goto l6#28 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>(l0, l10)  NO 
(1092, 4): if $stack33 != 0 goto l14 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>(l0)  NO 
(1088, 2): if $stack43 != 0 goto $stack44 = virtualinvoke l12#81.<java.lang.Float: java.lang.String toString()>()  NO 
(1092, 6): if $stack38 == 0 goto (branch)  NO 
(1088, 4): if $stack48 == 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1340, 1): if $stack5 != 45 goto $stack6 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 0)  NO 
(981, 0): if l10 <= -1 goto $stack107 = l9 + 1  NO 
(1270, 1): if $stack13 == 0 goto $stack14 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l1)  NO 
(1068, 0): if l7#20 != null goto l12#81 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)  NO 
(1068, 1): if l8 != null goto l12#81 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)  NO 
(1163, 2): if l1 < 0 goto return 1  NO 
(1353, 0): if $stack13 == 0 goto (branch)  NO 
(1031, 1): if $stack74 != 0 goto (branch)  NO 
(1031, 4): if $stack83 != 0 goto return l13#63  NO 
(961, 0): if l6 > 16 goto $stack122 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>(l0)  NO 
(1031, 6): if $stack84 == 0 goto (branch)  NO 
(961, 1): if l6 != 16 goto (branch)  NO 
(961, 2): if l5#11 <= 55 goto (branch)  NO 
(1279, 0): if l3 == 0 goto $stack11 = $stack9  NO 
(1089, 3): if $stack46 == 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1118, 0): if $stack7 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1)  NO 
(1341, 1): if $stack7 != 1 goto $stack8 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 1)  NO 
(953, 1): if l6 >= l2 goto l6 = l2 - l4  NO 
(1015, 0): if l7#20 != null goto $stack62 = new java.lang.NumberFormatException  NO 
(982, 0): if l10 < l9 goto $stack114 = new java.lang.NumberFormatException  NO 
(1015, 1): if l8 != null goto $stack62 = new java.lang.NumberFormatException  NO 
(1337, 3): if $stack4 != 46 goto $stack5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)  NO 
(982, 1): if l10 <= l2 goto $stack116 = l9 + 1  NO 
(1234, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Long: java.lang.Long decode(java.lang.String)>(l0)  NO 
(1267, 1): if $stack8 != 0 goto l2 = 16  NO 
(1267, 3): if $stack12 == 0 goto $stack13 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l1)  NO 
(1197, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(l0)  NO 
(1292, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  NO 
(1003, 0): if l11 == 0 goto (branch)  NO 
(1164, 1): if $stack3 == 48 goto l1 = l1 + -1  NO 
(1160, 0): if l0 != null goto $stack2 = virtualinvoke l0.<java.lang.String: int length()>()  NO 
(999, 0): if $stack119 == 0 goto $stack101 = l2  NO 
(1094, 3): if $stack37 != 0 goto return l14  NO 
(1251, 0): if l0 != null goto $stack6 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  NO 
(1181, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(l0)  NO 
(1148, 1): if $stack2 == 0 goto $stack4 = 0  NO 
(1148, 3): if $stack3 == 0 goto $stack4 = 0  NO 
(1045, 1): if $stack76 != 0 goto (branch)  NO 
(979, 1): if $stack25 != 0 goto $stack119 = 0  NO 
(946, 1): if $stack138 == 0 goto l7 = l7 + 1  NO 
(979, 2): if l5#11 == 46 goto $stack119 = 0  NO 
(1045, 4): if $stack79 != 0 goto return l13#69  NO 
(1264, 0): if l4 != 43 goto $stack8 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l1)  NO 
(1045, 6): if $stack80 == 0 goto (branch)  NO 
(1359, 0): if l4 != 0 goto l3 = l3 + 1  NO 
(1004, 0): if l10 <= -1 goto l8 = null  NO 
(1359, 3): if $stack10 != 0 goto l3 = l3 + 1  NO 
(1004, 2): if l10 >= $stack90 goto l8 = null  NO 
(934, 0): if l0 != null goto $stack15 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  NO 
(1351, 2): if l3 >= $stack5 goto return 1  NO 
(992, 0): if l10 <= -1 goto (branch)  NO 
(1215, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l0)  NO 
(1087, 1): if $stack29 != 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1116, 0): if l2 == 45 goto $stack7 = 1  NO 
(955, 0): if l5#11 == 48 goto l4 = l4 + 1  NO 
(988, 1): if $stack119 == 0 goto $stack110 = l2  NO 
(1116, 1): if l2 != 43 goto $stack7 = 0  NO 
(1017, 1): if $stack65 != 0 goto $stack66 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>(l12)  NO 
(1273, 1): if $stack14 == 0 goto $stack9 = new java.math.BigInteger  NO 
(951, 0): if l4 <= 0 goto $stack19 = l2 - 1  NO 
(1017, 3): if $stack68 != 45 goto $stack66 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>(l12)  NO 
(1273, 4): if $stack19 <= $stack20 goto $stack9 = new java.math.BigInteger  NO 
(980, 0): if l9 <= -1 goto (branch)  NO 
(1017, 6): if $stack71 != 0 goto $stack67 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>(l12)  NO 
(1017, 8): if $stack66 == 0 goto $stack62 = new java.lang.NumberFormatException  NO 
(943, 1): if $stack18 == 43 goto $stack145 = 1  NO 
(1261, 0): if l4 != 45 goto (branch)  NO 
(943, 3): if $stack144 != 45 goto $stack145 = 0  NO 
(1356, 0): if l2 <= 1 goto (branch)  NO 
(1063, 0): if l10 <= -1 goto l8 = null  NO 
(1352, 1): if $stack6 != 46 goto $stack13 = 0  NO 
(1063, 2): if l10 >= $stack55 goto l8 = null  NO 
(964, 0): if l6 > 8 goto $stack123 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>(l0)  NO 
(964, 1): if l6 != 8 goto $stack124 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>(l0)  NO 
(1092, 1): if $stack30 != 0 goto (branch)  NO 
(964, 2): if l5#11 <= 55 goto $stack124 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>(l0)  NO 


comp5111.assignment.cut.Subject$CharTasks


In the following all of the instructions which were covered will be shown: 

(1441, 0): if l0 == null goto $stack2 = l1  YES, jumped to: (1441, 1) 
(1536, 0): if l0 < 65 goto $stack1 = 0  YES, jumped to: (1536, 4) (1536, 1) 
(1536, 1): if l0 > 90 goto $stack1 = 0  YES, jumped to: (1536, 4) 
(1517, 1): if $stack1 != 0 goto $stack3 = 1  YES, jumped to: (1517, 2) 
(1517, 3): if $stack2 == 0 goto $stack3 = 0  YES, jumped to: (1517, 6) (1517, 4) 
(1498, 0): if l0 < 32 goto $stack1 = 1  YES, jumped to: (1498, 1) (1498, 2) 
(1498, 1): if l0 != 127 goto $stack1 = 0  YES, jumped to: (1498, 4) 
(1479, 0): if l0 < 32 goto $stack1 = 0  YES, jumped to: (1479, 1) (1479, 4) 
(1479, 1): if l0 >= 127 goto $stack1 = 0  YES, jumped to: (1479, 2) 
(1460, 0): if l0 >= 128 goto $stack1 = 0  YES, jumped to: (1460, 1) 
(1555, 0): if l0 < 97 goto $stack1 = 0  YES, jumped to: (1555, 4) (1555, 1) 
(1555, 1): if l0 > 122 goto $stack1 = 0  YES, jumped to: (1555, 2) 

In the following all of the instructions which were not covered will be shown: 

(1441, 0): if l0 == null goto $stack2 = l1  NO 
(1536, 1): if l0 > 90 goto $stack1 = 0  NO 
(1517, 1): if $stack1 != 0 goto $stack3 = 1  NO 
(1498, 1): if l0 != 127 goto $stack1 = 0  NO 
(1479, 1): if l0 >= 127 goto $stack1 = 0  NO 
(1460, 0): if l0 >= 128 goto $stack1 = 0  NO 
(1555, 1): if l0 > 122 goto $stack1 = 0  NO 


comp5111.assignment.cut.Subject$GregorianTasks


In the following all of the instructions which were covered will be shown: 

(1732, 3): if $stack2 != 0 goto $stack4 = 1  YES, jumped to: (1732, 6) 
(1761, 0): if l1 != 2 goto $stack4 = new java.lang.IllegalArgumentException  YES, jumped to: (1762, 0) (1761, 1) 
(1728, 0): if l0 <= 1900 goto $stack1 = l0 & 3  YES, jumped to: (1732, 0) (1728, 1) 
(1759, 0): if l1 == 1 goto return 31  YES, jumped to: (1759, 1) (1759, 7) 
(1761, 2): if $stack6 == 0 goto $stack7 = 28  YES, jumped to: (1761, 3) 
(1728, 1): if l0 >= 2100 goto $stack1 = l0 & 3  YES, jumped to: (1732, 0) 
(1759, 1): if l1 == 3 goto return 31  YES, jumped to: (1759, 2) (1759, 7) 
(1759, 2): if l1 == 5 goto return 31  YES, jumped to: (1759, 3) (1759, 7) 
(1759, 3): if l1 == 7 goto return 31  YES, jumped to: (1759, 4) (1759, 7) 
(1821, 1): if l2 <= $stack9 goto return  YES, jumped to: (1827, 0) (1822, 0) 
(1759, 4): if l1 == 8 goto return 31  YES, jumped to: (1759, 5) (1759, 7) 
(1759, 5): if l1 == 10 goto return 31  YES, jumped to: (1759, 6) (1759, 7) 
(1759, 6): if l1 != 12 goto (branch)  YES, jumped to: (1760, 0) (1759, 7) 
(1815, 0): if l1 < 1 goto $stack5 = new java.lang.IllegalArgumentException  YES, jumped to: (1816, 0) (1815, 1) 
(1815, 1): if l1 <= 12 goto (branch)  YES, jumped to: (1818, 0) (1816, 0) 
(1904, 0): if l1 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1)  YES, jumped to: (1905, 0) 
(1933, 0): if l0 != 12 goto $stack1 = new java.lang.IllegalArgumentException  YES, jumped to: (1933, 1) 
(1931, 0): if l0 != 10 goto (branch)  YES, jumped to: (1931, 1) (1932, 0) 
(1929, 0): if l0 != 8 goto (branch)  YES, jumped to: (1930, 0) (1929, 1) 
(1927, 0): if l0 != 6 goto (branch)  YES, jumped to: (1928, 0) (1927, 1) 
(1861, 0): if l2 < 1 goto $stack8 = new java.lang.IllegalArgumentException  YES, jumped to: (1861, 1) (1862, 0) 
(1925, 0): if l0 != 4 goto (branch)  YES, jumped to: (1926, 0) 
(1861, 1): if l2 <= 31 goto $stack10 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)  YES, jumped to: (1862, 0) (1864, 0) 
(1923, 0): if l0 != 2 goto (branch)  YES, jumped to: (1924, 0) 
(1890, 0): if l7 > 0 goto return l7  YES, jumped to: (1891, 0) (1894, 0) 
(1760, 0): if l1 == 4 goto return 30  YES, jumped to: (1760, 1) (1760, 4) 
(1760, 1): if l1 == 6 goto return 30  YES, jumped to: (1760, 2) (1760, 4) 
(1760, 2): if l1 == 9 goto return 30  YES, jumped to: (1760, 3) (1760, 4) 
(1760, 3): if l1 != 11 goto (branch)  YES, jumped to: (1761, 0) (1760, 4) 
(1818, 0): if l2 < 1 goto $stack7 = new java.lang.IllegalArgumentException  YES, jumped to: (1818, 1) (1819, 0) 
(1818, 1): if l2 <= 31 goto $stack9 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)  YES, jumped to: (1821, 0) (1819, 0) 
(1880, 0): if l4 >= 0 goto l6 = staticinvoke <java.lang.Math: int floorDiv(int,int)>(l5, 4)  YES, jumped to: (1887, 0) (1881, 0) 
(1878, 0): if l1 > 2 goto l6 = staticinvoke <java.lang.Math: int floorDiv(int,int)>(l5, 4)  YES, jumped to: (1879, 0) (1887, 0) 
(1909, 0): if l2 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l2)  YES, jumped to: (1912, 0) 
(1812, 0): if l0 < -999999999 goto $stack3 = new java.lang.IllegalArgumentException  YES, jumped to: (1812, 1) 
(1812, 1): if l0 <= 999999999 goto (branch)  YES, jumped to: (1815, 0) 
(1874, 0): if l4 >= 0 goto (branch)  YES, jumped to: (1875, 0) (1878, 0) 
(1932, 0): if l0 != 11 goto (branch)  YES, jumped to: (1932, 1) (1933, 0) 
(1930, 0): if l0 != 9 goto (branch)  YES, jumped to: (1931, 0) (1930, 1) 
(1928, 0): if l0 != 7 goto (branch)  YES, jumped to: (1929, 0) (1928, 1) 
(1864, 1): if l2 <= $stack10 goto l3 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>(l1)  YES, jumped to: (1870, 0) 
(1926, 0): if l0 != 5 goto (branch)  YES, jumped to: (1927, 0) 
(1924, 0): if l0 != 3 goto (branch)  YES, jumped to: (1925, 0) (1924, 1) 
(1732, 1): if $stack1 == 0 goto $stack4 = 1  YES, jumped to: (1732, 2) (1732, 6) 
(1922, 0): if l0 != 1 goto (branch)  YES, jumped to: (1922, 1) (1923, 0) 

In the following all of the instructions which were not covered will be shown: 

(1732, 3): if $stack2 != 0 goto $stack4 = 1  NO 
(1728, 1): if l0 >= 2100 goto $stack1 = l0 & 3  NO 
(1732, 5): if $stack3 != 0 goto $stack4 = 0  NO 
(1761, 2): if $stack6 == 0 goto $stack7 = 28  NO 
(1904, 0): if l1 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1)  NO 
(1933, 0): if l0 != 12 goto $stack1 = new java.lang.IllegalArgumentException  NO 
(1925, 0): if l0 != 4 goto (branch)  NO 
(1923, 0): if l0 != 2 goto (branch)  NO 
(1729, 1): if $stack7 != 0 goto $stack8 = 0  NO 
(1909, 0): if l2 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l2)  NO 
(1812, 0): if l0 < -999999999 goto $stack3 = new java.lang.IllegalArgumentException  NO 
(1812, 1): if l0 <= 999999999 goto (branch)  NO 
(1864, 1): if l2 <= $stack10 goto l3 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>(l1)  NO 
(1926, 0): if l0 != 5 goto (branch)  NO 


comp5111.assignment.cut.Subject$ArrayTasks


In the following all of the instructions which were covered will be shown: 

(1664, 1): if l2 < $stack4 goto (branch)  YES, jumped to: (1667, 0) (1665, 0) 
(1661, 0): if l0 == null goto return -1  YES, jumped to: (1661, 1) (1662, 0) 
(1661, 1): if l2 >= 0 goto $stack4 = lengthof l0  YES, jumped to: (1664, 0) (1662, 0) 
(1609, 0): if l0 == null goto $stack1 = 0  YES, jumped to: (1609, 1) (1609, 3) 
(1674, 1): if l3 < 0 goto return -1  YES, jumped to: (1675, 0) (1680, 0) 
(1675, 2): if $stack10 == 0 goto l3 = l3 + -1  YES, jumped to: (1674, 0) (1676, 0) 
(1673, 3): if $stack7 == 0 goto return -1  YES, jumped to: (1674, 0) (1680, 0) 
(1669, 1): if $stack12 != null goto l3 = l3 + -1  YES, jumped to: (1668, 0) 
(1667, 0): if l1 != null goto $stack5 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>()  YES, jumped to: (1668, 0) (1673, 0) 
(1668, 1): if l3 < 0 goto (branch)  YES, jumped to: (1669, 0) (1668, 2) 
(1619, 1): if $stack1 != 0 goto $stack2 = 0  YES, jumped to: (1619, 4) (1619, 2) 

In the following all of the instructions which were not covered will be shown: 

(1669, 1): if $stack12 != null goto l3 = l3 + -1  NO 


comp5111.assignment.cut.Subject


In the following all of the instructions which were covered will be shown: 


In the following all of the instructions which were not covered will be shown: 



comp5111.assignment.cut.Subject$FilenameTasks


In the following all of the instructions which were covered will be shown: 

(153, 0): if l1 == 0 goto $stack13 = lengthof l2  YES, jumped to: (163, 0) 
(54, 0): if l0 != 92 goto $stack1 = new java.lang.IllegalArgumentException  YES, jumped to: (57, 0) 
(149, 1): if $stack11 == 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  YES, jumped to: (152, 0) 
(213, 2): if l2 >= $stack4 goto return 1  YES, jumped to: (214, 0) (222, 0) 
(116, 1): if $stack7 == 0 goto return 0  YES, jumped to: (117, 0) 
(81, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>(l0)  YES, jumped to: (84, 0) 
(145, 0): if l1 == 0 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  YES, jumped to: (148, 0) 
(178, 2): if l5 != $stack18 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  YES, jumped to: (178, 3) 
(178, 4): if $stack24 == 0 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  YES, jumped to: (185, 0) 
(172, 0): if l4 <= 1 goto l3#27 = l3#27 + 1  YES, jumped to: (198, 0) 
(170, 1): if $stack16 == 0 goto l4 = 0  YES, jumped to: (171, 0) (176, 0) 
(232, 0): if l0 == 47 goto $stack1 = 1  YES, jumped to: (232, 1) 
(265, 1): if $stack9 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (265, 2) 
(232, 1): if l0 != 92 goto $stack1 = 0  YES, jumped to: (232, 4) 
(168, 2): if l5 >= $stack14 goto (branch)  YES, jumped to: (169, 0) (200, 0) 
(265, 3): if $stack32 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (266, 0) 
(100, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int)>(47)  YES, jumped to: (103, 0) 
(185, 1): if $stack19 <= 4 goto l7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l6, 16)  YES, jumped to: (190, 0) (186, 0) 
(216, 2): if l2 != $stack14 goto $stack15 = 0  YES, jumped to: (216, 3) 
(218, 4): if $stack10 != 0 goto l2 = l2 + 1  YES, jumped to: (213, 0) (219, 0) 
(245, 1): if $stack1 < 0 goto return l0  YES, jumped to: (249, 0) 
(214, 2): if $stack6 == 0 goto $stack8 = <comp5111.assignment.cut.Subject$FilenameTasks: java.util.regex.Pattern REG_NAME_PART_PATTERN>  YES, jumped to: (216, 0) (218, 0) 
(51, 0): if l0 != 47 goto (branch)  YES, jumped to: (54, 0) 
(148, 1): if $stack10 == 0 goto $stack11 = virtualinvoke l0.<java.lang.String: boolean endsWith(java.lang.String)>(":")  YES, jumped to: (149, 0) 
(200, 0): if l3#27 > 8 goto $stack15 = 0  YES, jumped to: (200, 1) 
(200, 1): if l3#27 >= 8 goto $stack15 = 1  YES, jumped to: (200, 2) 
(200, 2): if l1 == 0 goto $stack15 = 0  YES, jumped to: (200, 5) 
(163, 1): if $stack13 <= 8 goto l3#27 = 0  YES, jumped to: (166, 0) 

In the following all of the instructions which were not covered will be shown: 

(155, 1): if $stack30 == 0 goto $stack31 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>("::")  NO 
(279, 0): if l8 != 63 goto (branch)  NO 
(275, 1): if $stack20 == 0 goto (branch)  NO 
(81, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>(l0)  NO 
(172, 0): if l4 <= 1 goto l3#27 = l3#27 + 1  NO 
(148, 1): if $stack10 == 0 goto $stack11 = virtualinvoke l0.<java.lang.String: boolean endsWith(java.lang.String)>(":")  NO 
(148, 3): if $stack45 == 0 goto return 0  NO 
(194, 0): if l7 < 0 goto return 0  NO 
(194, 1): if l7 <= 65535 goto l3#27 = l3#27 + 1  NO 
(289, 1): if $stack13 == 0 goto $stack14 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(128, 1): if $stack11 <= 1 goto l2 = l2 + 1  NO 
(128, 3): if $stack14 == 0 goto l2 = l2 + 1  NO 
(124, 0): if l4 <= 255 goto $stack11 = virtualinvoke l3.<java.lang.String: int length()>()  NO 
(153, 0): if l1 == 0 goto $stack13 = lengthof l2  NO 
(281, 0): if l4 == 42 goto l4 = l8  NO 
(54, 0): if l0 != 92 goto $stack1 = new java.lang.IllegalArgumentException  NO 
(149, 1): if $stack11 == 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  NO 
(116, 1): if $stack7 == 0 goto return 0  NO 
(149, 3): if $stack41 != 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  NO 
(116, 3): if $stack8 == 4 goto l2 = 1  NO 
(145, 0): if l1 == 0 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  NO 
(178, 2): if l5 != $stack18 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  NO 
(273, 2): if l7 >= l6 goto $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()  NO 
(145, 3): if $stack49 == $stack50 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  NO 
(178, 4): if $stack24 == 0 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  NO 
(232, 0): if l0 == 47 goto $stack1 = 1  NO 
(265, 1): if $stack9 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  NO 
(232, 1): if l0 != 92 goto $stack1 = 0  NO 
(265, 3): if $stack32 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  NO 
(100, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int)>(47)  NO 
(158, 1): if $stack31 == 0 goto $stack32 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(158, 3): if $stack36 != 0 goto $stack32 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(121, 1): if l2 > 4 goto return 1  NO 
(216, 2): if l2 != $stack14 goto $stack15 = 0  NO 
(245, 1): if $stack1 < 0 goto return l0  NO 
(51, 0): if l0 != 47 goto (branch)  NO 
(179, 1): if $stack27 != 0 goto l3#27 = l3#27 + 2  NO 
(274, 0): if l8 == 63 goto $stack20 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()  NO 
(274, 1): if l8 != 42 goto virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(l8)  NO 
(200, 0): if l3#27 > 8 goto $stack15 = 0  NO 
(200, 1): if l3#27 >= 8 goto $stack15 = 1  NO 
(200, 2): if l1 == 0 goto $stack15 = 0  NO 
(163, 1): if $stack13 <= 8 goto l3#27 = 0  NO 


comp5111.assignment.cut.Subject$StringTasks


In the following all of the instructions which were covered will be shown: 

(448, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (451, 0) 
(799, 1): if $stack4 == 0 goto (branch)  YES, jumped to: (802, 0) (800, 0) 
(349, 1): if l2 >= l1 goto return 1  YES, jumped to: (350, 0) 
(795, 0): if l1 != null goto $stack4 = virtualinvoke l1.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (799, 0) 
(568, 0): if l1 == 0 goto $stack25 = new java.lang.String  YES, jumped to: (568, 1) (575, 0) 
(791, 0): if l2 != 0 goto (branch)  YES, jumped to: (792, 0) (795, 0) 
(663, 0): if l0 == null goto return 1  YES, jumped to: (663, 1) (664, 0) 
(568, 1): if l7 != 2 goto $stack25 = new java.lang.String  YES, jumped to: (575, 0) (568, 2) 
(663, 1): if l1 != null goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (666, 0) (664, 0) 
(568, 2): if l5 != 1 goto $stack25 = new java.lang.String  YES, jumped to: (575, 0) 
(849, 0): if l1 == 0 goto $stack8 = 0  YES, jumped to: (849, 4) 
(494, 1): if $stack4 != 1 goto $stack5 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (502, 0) (495, 0) 
(845, 2): if $stack12 == 0 goto l4 = l4 + 1  YES, jumped to: (846, 0) (839, 0) 
(556, 1): if $stack9 == 0 goto l2 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (557, 0) (559, 0) 
(490, 1): if $stack3 == 0 goto $stack4 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (491, 0) (494, 0) 
(618, 1): if l6 >= l2 goto return 0  YES, jumped to: (619, 0) (636, 0) 
(742, 0): if l0 != l1 goto (branch)  YES, jumped to: (745, 0) (743, 0) 
(833, 1): if $stack5 != 0 goto return 0  YES, jumped to: (834, 0) (833, 2) 
(416, 1): if l2 >= l1 goto return 1  YES, jumped to: (417, 0) (421, 0) 
(672, 1): if l8 >= l4 goto l6 = l6 + 1  YES, jumped to: (673, 0) (670, 0) 
(833, 3): if $stack6 != 1 goto l1 = 0  YES, jumped to: (836, 0) (834, 0) 
(350, 2): if $stack5 != 0 goto l2 = l2 + 1  YES, jumped to: (351, 0) 
(412, 1): if $stack3 == 0 goto l1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (415, 0) (413, 0) 
(346, 0): if l1 != 0 goto l2 = 0  YES, jumped to: (349, 0) (347, 0) 
(565, 0): if l7 != l5 goto (branch)  YES, jumped to: (566, 0) (568, 0) 
(751, 1): if $stack6 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (751, 2) 
(751, 3): if $stack12 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (752, 0) 
(458, 0): if l4 != 10 goto return l3  YES, jumped to: (461, 0) 
(553, 0): if l0 != null goto $stack9 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (556, 0) 
(611, 1): if $stack9 != 0 goto return 0  YES, jumped to: (611, 2) (612, 0) 
(673, 1): if $stack13 != l7 goto l8 = l8 + 1  YES, jumped to: (672, 0) 
(611, 3): if $stack10 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (612, 0) (614, 0) 
(417, 2): if $stack6 != 0 goto l2 = l2 + 1  YES, jumped to: (418, 0) 
(863, 0): if l0 == null goto return l0  YES, jumped to: (863, 1) 
(863, 1): if l1 == null goto return l0  YES, jumped to: (863, 2) 
(863, 2): if l2 != null goto l3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>(l1)  YES, jumped to: (867, 0) 
(496, 0): if l1 == 13 goto return ""  YES, jumped to: (496, 1) 
(880, 0): if l6 != l4 goto $stack12 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l3)  YES, jumped to: (885, 0) (881, 0) 
(496, 1): if l1 != 10 goto return l0  YES, jumped to: (499, 0) 
(620, 1): if l8 >= l3 goto l6 = l6 + 1  YES, jumped to: (621, 0) (618, 0) 
(748, 2): if $stack4 == $stack5 goto $stack6 = l0 instanceof java.lang.String  YES, jumped to: (749, 0) (751, 0) 
(843, 2): if $stack10 == 0 goto $stack11 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  YES, jumped to: (845, 0) 
(839, 1): if l4 >= l3 goto (branch)  YES, jumped to: (840, 0) (849, 0) 
(323, 0): if l0 != null goto $stack1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (323, 3) (323, 1) 
(802, 0): if l2 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  YES, jumped to: (802, 1) (806, 0) 
(802, 4): if $stack8 == -1 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  YES, jumped to: (803, 0) (806, 0) 
(509, 0): if l2 == 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  YES, jumped to: (510, 0) 
(670, 1): if l6 >= l2 goto return 1  YES, jumped to: (671, 0) (688, 0) 
(377, 0): if l0 == null goto $stack2 = 1  YES, jumped to: (377, 1) (377, 3) 
(505, 0): if l2 != 10 goto (branch)  YES, jumped to: (509, 0) 
(377, 2): if $stack1 != 0 goto $stack2 = 0  YES, jumped to: (377, 3) (377, 5) 
(563, 3): if l6 >= $stack15 goto $stack16 = new java.lang.String  YES, jumped to: (564, 0) (580, 0) 
(877, 1): if l4 != $stack11 goto (branch)  YES, jumped to: (878, 0) (880, 0) 
(621, 1): if $stack15 != l7 goto l8 = l8 + 1  YES, jumped to: (620, 0) 
(745, 0): if l0 == null goto return 0  YES, jumped to: (745, 1) (746, 0) 
(745, 1): if l1 != null goto $stack4 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (748, 0) (746, 0) 
(840, 0): if l1 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  YES, jumped to: (843, 0) 
(869, 0): if l3 >= 0 goto l4 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (870, 0) (873, 0) 
(452, 0): if l1 >= 2 goto l2 = l1 - 1  YES, jumped to: (453, 0) (455, 0) 

In the following all of the instructions which were not covered will be shown: 

(448, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int length()>()  NO 
(349, 1): if l2 >= l1 goto return 1  NO 
(795, 0): if l1 != null goto $stack4 = virtualinvoke l1.<java.lang.String: boolean isEmpty()>()  NO 
(506, 2): if $stack12 != 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  NO 
(568, 2): if l5 != 1 goto $stack25 = new java.lang.String  NO 
(630, 0): if l6 >= l4 goto l8 = l8 + 1  NO 
(626, 0): if l8 != l5 goto (branch)  NO 
(630, 5): if $stack21 != $stack22 goto l8 = l8 + 1  NO 
(849, 0): if l1 == 0 goto $stack8 = 0  NO 
(849, 1): if l2 == 0 goto $stack8 = 0  NO 
(622, 1): if $stack18 != 0 goto (branch)  NO 
(350, 2): if $stack5 != 0 goto l2 = l2 + 1  NO 
(796, 0): if l2 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  NO 
(796, 4): if $stack15 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  NO 
(751, 1): if $stack6 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(751, 3): if $stack12 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(458, 0): if l4 != 10 goto return l3  NO 
(553, 0): if l0 != null goto $stack9 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  NO 
(458, 3): if $stack9 != 13 goto return l3  NO 
(673, 1): if $stack13 != l7 goto l8 = l8 + 1  NO 
(417, 2): if $stack6 != 0 goto l2 = l2 + 1  NO 
(863, 0): if l0 == null goto return l0  NO 
(863, 1): if l1 == null goto return l0  NO 
(863, 2): if l2 != null goto l3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>(l1)  NO 
(570, 0): if l8 == l4 goto (branch)  NO 
(756, 1): if l3 >= l2 goto return 1  NO 
(496, 0): if l1 == 13 goto return ""  NO 
(496, 1): if l1 != 10 goto return l0  NO 
(682, 0): if l6 >= l3 goto l8 = l8 + 1  NO 
(843, 2): if $stack10 == 0 goto $stack11 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 
(678, 0): if l8 != l5 goto (branch)  NO 
(682, 5): if $stack19 != $stack20 goto l8 = l8 + 1  NO 
(674, 1): if $stack16 != 0 goto (branch)  NO 
(509, 0): if l2 == 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  NO 
(505, 0): if l2 != 10 goto (branch)  NO 
(757, 2): if $stack8 == $stack9 goto l3 = l3 + 1  NO 
(621, 1): if $stack15 != l7 goto l8 = l8 + 1  NO 
(840, 0): if l1 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 
(840, 1): if l2 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 


comp5111.assignment.cut.Subject$BooleanTasks


In the following all of the instructions which were covered will be shown: 

(1393, 0): if l0 != l1 goto (branch)  YES, jumped to: (1396, 0) (1394, 0) 
(1396, 0): if l0 == 0 goto $stack2 = -1  YES, jumped to: (1396, 3) (1396, 1) 

In the following all of the instructions which were not covered will be shown: 




Coverage of Test Suite: comp5111.assignment.cut.RegressionTest4

comp5111.assignment.cut.Subject$NumberTasks
45 Branches from a total of 172 Branches were covered.
Percentage: 26.16279069767442%

comp5111.assignment.cut.Subject$CharTasks
17 Branches from a total of 24 Branches were covered.
Percentage: 70.83333333333334%

comp5111.assignment.cut.Subject$GregorianTasks
71 Branches from a total of 94 Branches were covered.
Percentage: 75.53191489361703%

comp5111.assignment.cut.Subject$ArrayTasks
21 Branches from a total of 22 Branches were covered.
Percentage: 95.45454545454545%

comp5111.assignment.cut.Subject
0 Branches from a total of 0 Branches were covered.
Percentage: 100.0%

comp5111.assignment.cut.Subject$FilenameTasks
34 Branches from a total of 98 Branches were covered.
Percentage: 34.69387755102041%

comp5111.assignment.cut.Subject$StringTasks
96 Branches from a total of 152 Branches were covered.
Percentage: 63.1578947368421%

comp5111.assignment.cut.Subject$BooleanTasks
4 Branches from a total of 4 Branches were covered.
Percentage: 100.0%

Overall Branch Coverage: 50.8833922261484%



In the following part you can see which branches were executed. Before every branch instruction you can see two numbers
in the form of (x,y), for Example (1,5). This indicates that the following Instruction can be found on line x of the Java code. 
y denotes that it is the y-th Jimple Instruction generated from the corresponding Java line. Only Branch instructions will be shown.
After each listed instructions you can find a NO if one or more branches weren't executed and a YES if one or more branches were takenIf it was executed you will also find a List of (x,y) values which denote the statements to which we jumped.



comp5111.assignment.cut.Subject$NumberTasks


In the following all of the instructions which were covered will be shown: 

(1181, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(l0)  YES, jumped to: (1184, 0) 
(1340, 1): if $stack5 != 45 goto $stack6 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 0)  YES, jumped to: (1346, 0) 
(1334, 1): if $stack1 == 0 goto $stack2 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (1337, 0) (1335, 0) 
(1270, 1): if $stack13 == 0 goto $stack14 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l1)  YES, jumped to: (1273, 0) 
(979, 1): if $stack25 != 0 goto $stack119 = 0  YES, jumped to: (979, 2) 
(946, 1): if $stack138 == 0 goto l7 = l7 + 1  YES, jumped to: (945, 0) 
(979, 2): if l5#11 == 46 goto $stack119 = 0  YES, jumped to: (979, 3) 
(1264, 0): if l4 != 43 goto $stack8 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l1)  YES, jumped to: (1267, 0) 
(1359, 0): if l4 != 0 goto l3 = l3 + 1  YES, jumped to: (1359, 1) 
(1359, 3): if $stack10 != 0 goto l3 = l3 + 1  YES, jumped to: (1360, 0) 
(1004, 0): if l10 <= -1 goto l8 = null  YES, jumped to: (1007, 0) 
(1353, 0): if $stack13 == 0 goto (branch)  YES, jumped to: (1356, 0) 
(934, 0): if l0 != null goto $stack15 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  YES, jumped to: (937, 0) 
(1254, 1): if $stack6 == 0 goto l1 = 0  YES, jumped to: (1255, 0) (1257, 0) 
(1351, 2): if l3 >= $stack5 goto return 1  YES, jumped to: (1352, 0) 
(992, 0): if l10 <= -1 goto (branch)  YES, jumped to: (999, 0) 
(1215, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l0)  YES, jumped to: (1219, 0) 
(1118, 0): if $stack7 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1)  YES, jumped to: (1118, 3) 
(1116, 0): if l2 == 45 goto $stack7 = 1  YES, jumped to: (1116, 1) 
(1116, 1): if l2 != 43 goto $stack7 = 0  YES, jumped to: (1116, 4) 
(1273, 1): if $stack14 == 0 goto $stack9 = new java.math.BigInteger  YES, jumped to: (1278, 0) 
(951, 0): if l4 <= 0 goto $stack19 = l2 - 1  YES, jumped to: (969, 0) 
(1337, 3): if $stack4 != 46 goto $stack5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)  YES, jumped to: (1340, 0) 
(980, 0): if l9 <= -1 goto (branch)  YES, jumped to: (992, 0) 
(1267, 1): if $stack8 != 0 goto l2 = 16  YES, jumped to: (1267, 2) 
(1234, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Long: java.lang.Long decode(java.lang.String)>(l0)  YES, jumped to: (1237, 0) 
(1267, 3): if $stack12 == 0 goto $stack13 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l1)  YES, jumped to: (1270, 0) 
(1296, 1): if $stack1 == 0 goto $stack2 = new java.math.BigDecimal  YES, jumped to: (1299, 0) (1297, 0) 
(945, 2): if l7 >= l6 goto (branch)  YES, jumped to: (945, 3) (951, 0) 
(943, 1): if $stack18 == 43 goto $stack145 = 1  YES, jumped to: (943, 2) 
(1197, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(l0)  YES, jumped to: (1200, 0) 
(1261, 0): if l4 != 45 goto (branch)  YES, jumped to: (1264, 0) 
(1356, 0): if l2 <= 1 goto (branch)  YES, jumped to: (1359, 0) 
(1292, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  YES, jumped to: (1296, 0) 
(943, 3): if $stack144 != 45 goto $stack145 = 0  YES, jumped to: (943, 6) 
(1003, 0): if l11 == 0 goto (branch)  YES, jumped to: (1004, 0) 
(937, 1): if $stack15 == 0 goto $stack16 = newarray (java.lang.String)[3]  YES, jumped to: (941, 0) (938, 0) 
(1352, 1): if $stack6 != 46 goto $stack13 = 0  YES, jumped to: (1352, 4) 
(999, 0): if $stack119 == 0 goto $stack101 = l2  YES, jumped to: (999, 1) 
(1251, 0): if l0 != null goto $stack6 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (1254, 0) 

In the following all of the instructions which were not covered will be shown: 

(993, 0): if l10 <= l2 goto l6#28 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>(l0, l10)  NO 
(1092, 4): if $stack33 != 0 goto l14 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>(l0)  NO 
(1088, 2): if $stack43 != 0 goto $stack44 = virtualinvoke l12#81.<java.lang.Float: java.lang.String toString()>()  NO 
(1092, 6): if $stack38 == 0 goto (branch)  NO 
(1088, 4): if $stack48 == 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1340, 1): if $stack5 != 45 goto $stack6 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 0)  NO 
(981, 0): if l10 <= -1 goto $stack107 = l9 + 1  NO 
(1270, 1): if $stack13 == 0 goto $stack14 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l1)  NO 
(1068, 0): if l7#20 != null goto l12#81 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)  NO 
(1068, 1): if l8 != null goto l12#81 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)  NO 
(1163, 2): if l1 < 0 goto return 1  NO 
(1353, 0): if $stack13 == 0 goto (branch)  NO 
(1031, 1): if $stack74 != 0 goto (branch)  NO 
(1031, 4): if $stack83 != 0 goto return l13#63  NO 
(961, 0): if l6 > 16 goto $stack122 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>(l0)  NO 
(1031, 6): if $stack84 == 0 goto (branch)  NO 
(961, 1): if l6 != 16 goto (branch)  NO 
(961, 2): if l5#11 <= 55 goto (branch)  NO 
(1279, 0): if l3 == 0 goto $stack11 = $stack9  NO 
(1089, 3): if $stack46 == 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1118, 0): if $stack7 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1)  NO 
(1341, 1): if $stack7 != 1 goto $stack8 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 1)  NO 
(953, 1): if l6 >= l2 goto l6 = l2 - l4  NO 
(1015, 0): if l7#20 != null goto $stack62 = new java.lang.NumberFormatException  NO 
(982, 0): if l10 < l9 goto $stack114 = new java.lang.NumberFormatException  NO 
(1015, 1): if l8 != null goto $stack62 = new java.lang.NumberFormatException  NO 
(1337, 3): if $stack4 != 46 goto $stack5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)  NO 
(982, 1): if l10 <= l2 goto $stack116 = l9 + 1  NO 
(1234, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Long: java.lang.Long decode(java.lang.String)>(l0)  NO 
(1267, 1): if $stack8 != 0 goto l2 = 16  NO 
(1267, 3): if $stack12 == 0 goto $stack13 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l1)  NO 
(1197, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(l0)  NO 
(1292, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  NO 
(1003, 0): if l11 == 0 goto (branch)  NO 
(1164, 1): if $stack3 == 48 goto l1 = l1 + -1  NO 
(1160, 0): if l0 != null goto $stack2 = virtualinvoke l0.<java.lang.String: int length()>()  NO 
(999, 0): if $stack119 == 0 goto $stack101 = l2  NO 
(1094, 3): if $stack37 != 0 goto return l14  NO 
(1251, 0): if l0 != null goto $stack6 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  NO 
(1181, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(l0)  NO 
(1148, 1): if $stack2 == 0 goto $stack4 = 0  NO 
(1148, 3): if $stack3 == 0 goto $stack4 = 0  NO 
(1045, 1): if $stack76 != 0 goto (branch)  NO 
(979, 1): if $stack25 != 0 goto $stack119 = 0  NO 
(946, 1): if $stack138 == 0 goto l7 = l7 + 1  NO 
(979, 2): if l5#11 == 46 goto $stack119 = 0  NO 
(1045, 4): if $stack79 != 0 goto return l13#69  NO 
(1264, 0): if l4 != 43 goto $stack8 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l1)  NO 
(1045, 6): if $stack80 == 0 goto (branch)  NO 
(1359, 0): if l4 != 0 goto l3 = l3 + 1  NO 
(1004, 0): if l10 <= -1 goto l8 = null  NO 
(1359, 3): if $stack10 != 0 goto l3 = l3 + 1  NO 
(1004, 2): if l10 >= $stack90 goto l8 = null  NO 
(934, 0): if l0 != null goto $stack15 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)  NO 
(1351, 2): if l3 >= $stack5 goto return 1  NO 
(992, 0): if l10 <= -1 goto (branch)  NO 
(1215, 0): if l0 != null goto $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l0)  NO 
(1087, 1): if $stack29 != 0 goto $stack30 = virtualinvoke l13#69.<java.lang.Double: boolean isInfinite()>()  NO 
(1116, 0): if l2 == 45 goto $stack7 = 1  NO 
(955, 0): if l5#11 == 48 goto l4 = l4 + 1  NO 
(988, 1): if $stack119 == 0 goto $stack110 = l2  NO 
(1116, 1): if l2 != 43 goto $stack7 = 0  NO 
(1017, 1): if $stack65 != 0 goto $stack66 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>(l12)  NO 
(1273, 1): if $stack14 == 0 goto $stack9 = new java.math.BigInteger  NO 
(951, 0): if l4 <= 0 goto $stack19 = l2 - 1  NO 
(1017, 3): if $stack68 != 45 goto $stack66 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>(l12)  NO 
(1273, 4): if $stack19 <= $stack20 goto $stack9 = new java.math.BigInteger  NO 
(980, 0): if l9 <= -1 goto (branch)  NO 
(1017, 6): if $stack71 != 0 goto $stack67 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>(l12)  NO 
(1017, 8): if $stack66 == 0 goto $stack62 = new java.lang.NumberFormatException  NO 
(943, 1): if $stack18 == 43 goto $stack145 = 1  NO 
(1261, 0): if l4 != 45 goto (branch)  NO 
(943, 3): if $stack144 != 45 goto $stack145 = 0  NO 
(1356, 0): if l2 <= 1 goto (branch)  NO 
(1063, 0): if l10 <= -1 goto l8 = null  NO 
(1352, 1): if $stack6 != 46 goto $stack13 = 0  NO 
(1063, 2): if l10 >= $stack55 goto l8 = null  NO 
(964, 0): if l6 > 8 goto $stack123 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>(l0)  NO 
(964, 1): if l6 != 8 goto $stack124 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>(l0)  NO 
(1092, 1): if $stack30 != 0 goto (branch)  NO 
(964, 2): if l5#11 <= 55 goto $stack124 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>(l0)  NO 


comp5111.assignment.cut.Subject$CharTasks


In the following all of the instructions which were covered will be shown: 

(1441, 0): if l0 == null goto $stack2 = l1  YES, jumped to: (1441, 1) 
(1536, 0): if l0 < 65 goto $stack1 = 0  YES, jumped to: (1536, 4) (1536, 1) 
(1536, 1): if l0 > 90 goto $stack1 = 0  YES, jumped to: (1536, 4) 
(1517, 1): if $stack1 != 0 goto $stack3 = 1  YES, jumped to: (1517, 2) 
(1517, 3): if $stack2 == 0 goto $stack3 = 0  YES, jumped to: (1517, 6) (1517, 4) 
(1498, 0): if l0 < 32 goto $stack1 = 1  YES, jumped to: (1498, 1) (1498, 2) 
(1498, 1): if l0 != 127 goto $stack1 = 0  YES, jumped to: (1498, 4) 
(1479, 0): if l0 < 32 goto $stack1 = 0  YES, jumped to: (1479, 4) (1479, 1) 
(1479, 1): if l0 >= 127 goto $stack1 = 0  YES, jumped to: (1479, 2) 
(1460, 0): if l0 >= 128 goto $stack1 = 0  YES, jumped to: (1460, 1) 
(1555, 0): if l0 < 97 goto $stack1 = 0  YES, jumped to: (1555, 4) (1555, 1) 
(1555, 1): if l0 > 122 goto $stack1 = 0  YES, jumped to: (1555, 2) 

In the following all of the instructions which were not covered will be shown: 

(1441, 0): if l0 == null goto $stack2 = l1  NO 
(1536, 1): if l0 > 90 goto $stack1 = 0  NO 
(1517, 1): if $stack1 != 0 goto $stack3 = 1  NO 
(1498, 1): if l0 != 127 goto $stack1 = 0  NO 
(1479, 1): if l0 >= 127 goto $stack1 = 0  NO 
(1460, 0): if l0 >= 128 goto $stack1 = 0  NO 
(1555, 1): if l0 > 122 goto $stack1 = 0  NO 


comp5111.assignment.cut.Subject$GregorianTasks


In the following all of the instructions which were covered will be shown: 

(1732, 3): if $stack2 != 0 goto $stack4 = 1  YES, jumped to: (1732, 6) 
(1761, 0): if l1 != 2 goto $stack4 = new java.lang.IllegalArgumentException  YES, jumped to: (1762, 0) (1761, 1) 
(1728, 0): if l0 <= 1900 goto $stack1 = l0 & 3  YES, jumped to: (1732, 0) (1728, 1) 
(1759, 0): if l1 == 1 goto return 31  YES, jumped to: (1759, 1) (1759, 7) 
(1761, 2): if $stack6 == 0 goto $stack7 = 28  YES, jumped to: (1761, 3) 
(1728, 1): if l0 >= 2100 goto $stack1 = l0 & 3  YES, jumped to: (1732, 0) 
(1759, 1): if l1 == 3 goto return 31  YES, jumped to: (1759, 2) (1759, 7) 
(1759, 2): if l1 == 5 goto return 31  YES, jumped to: (1759, 3) (1759, 7) 
(1759, 3): if l1 == 7 goto return 31  YES, jumped to: (1759, 4) (1759, 7) 
(1821, 1): if l2 <= $stack9 goto return  YES, jumped to: (1827, 0) 
(1759, 4): if l1 == 8 goto return 31  YES, jumped to: (1759, 5) 
(1759, 5): if l1 == 10 goto return 31  YES, jumped to: (1759, 7) (1759, 6) 
(1759, 6): if l1 != 12 goto (branch)  YES, jumped to: (1760, 0) (1759, 7) 
(1815, 0): if l1 < 1 goto $stack5 = new java.lang.IllegalArgumentException  YES, jumped to: (1816, 0) (1815, 1) 
(1815, 1): if l1 <= 12 goto (branch)  YES, jumped to: (1816, 0) (1818, 0) 
(1931, 0): if l0 != 10 goto (branch)  YES, jumped to: (1931, 1) (1932, 0) 
(1929, 0): if l0 != 8 goto (branch)  YES, jumped to: (1930, 0) 
(1927, 0): if l0 != 6 goto (branch)  YES, jumped to: (1928, 0) (1927, 1) 
(1861, 0): if l2 < 1 goto $stack8 = new java.lang.IllegalArgumentException  YES, jumped to: (1861, 1) (1862, 0) 
(1925, 0): if l0 != 4 goto (branch)  YES, jumped to: (1926, 0) 
(1861, 1): if l2 <= 31 goto $stack10 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)  YES, jumped to: (1862, 0) (1864, 0) 
(1923, 0): if l0 != 2 goto (branch)  YES, jumped to: (1924, 0) (1923, 1) 
(1890, 0): if l7 > 0 goto return l7  YES, jumped to: (1894, 0) (1891, 0) 
(1760, 0): if l1 == 4 goto return 30  YES, jumped to: (1760, 1) (1760, 4) 
(1760, 1): if l1 == 6 goto return 30  YES, jumped to: (1760, 2) (1760, 4) 
(1760, 2): if l1 == 9 goto return 30  YES, jumped to: (1760, 3) (1760, 4) 
(1760, 3): if l1 != 11 goto (branch)  YES, jumped to: (1761, 0) (1760, 4) 
(1818, 0): if l2 < 1 goto $stack7 = new java.lang.IllegalArgumentException  YES, jumped to: (1818, 1) (1819, 0) 
(1818, 1): if l2 <= 31 goto $stack9 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)  YES, jumped to: (1821, 0) (1819, 0) 
(1880, 0): if l4 >= 0 goto l6 = staticinvoke <java.lang.Math: int floorDiv(int,int)>(l5, 4)  YES, jumped to: (1887, 0) (1881, 0) 
(1878, 0): if l1 > 2 goto l6 = staticinvoke <java.lang.Math: int floorDiv(int,int)>(l5, 4)  YES, jumped to: (1887, 0) (1879, 0) 
(1812, 0): if l0 < -999999999 goto $stack3 = new java.lang.IllegalArgumentException  YES, jumped to: (1812, 1) 
(1812, 1): if l0 <= 999999999 goto (branch)  YES, jumped to: (1815, 0) 
(1874, 0): if l4 >= 0 goto (branch)  YES, jumped to: (1875, 0) (1878, 0) 
(1932, 0): if l0 != 11 goto (branch)  YES, jumped to: (1932, 1) 
(1930, 0): if l0 != 9 goto (branch)  YES, jumped to: (1931, 0) 
(1928, 0): if l0 != 7 goto (branch)  YES, jumped to: (1929, 0) (1928, 1) 
(1864, 1): if l2 <= $stack10 goto l3 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>(l1)  YES, jumped to: (1870, 0) 
(1926, 0): if l0 != 5 goto (branch)  YES, jumped to: (1927, 0) (1926, 1) 
(1924, 0): if l0 != 3 goto (branch)  YES, jumped to: (1925, 0) 
(1732, 1): if $stack1 == 0 goto $stack4 = 1  YES, jumped to: (1732, 2) (1732, 6) 
(1922, 0): if l0 != 1 goto (branch)  YES, jumped to: (1923, 0) (1922, 1) 

In the following all of the instructions which were not covered will be shown: 

(1732, 3): if $stack2 != 0 goto $stack4 = 1  NO 
(1728, 1): if l0 >= 2100 goto $stack1 = l0 & 3  NO 
(1732, 5): if $stack3 != 0 goto $stack4 = 0  NO 
(1761, 2): if $stack6 == 0 goto $stack7 = 28  NO 
(1821, 1): if l2 <= $stack9 goto return  NO 
(1759, 4): if l1 == 8 goto return 31  NO 
(1904, 0): if l1 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l1)  NO 
(1933, 0): if l0 != 12 goto $stack1 = new java.lang.IllegalArgumentException  NO 
(1929, 0): if l0 != 8 goto (branch)  NO 
(1925, 0): if l0 != 4 goto (branch)  NO 
(1729, 1): if $stack7 != 0 goto $stack8 = 0  NO 
(1909, 0): if l2 >= 10 goto virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l2)  NO 
(1812, 0): if l0 < -999999999 goto $stack3 = new java.lang.IllegalArgumentException  NO 
(1812, 1): if l0 <= 999999999 goto (branch)  NO 
(1932, 0): if l0 != 11 goto (branch)  NO 
(1930, 0): if l0 != 9 goto (branch)  NO 
(1864, 1): if l2 <= $stack10 goto l3 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>(l1)  NO 
(1924, 0): if l0 != 3 goto (branch)  NO 


comp5111.assignment.cut.Subject$ArrayTasks


In the following all of the instructions which were covered will be shown: 

(1664, 1): if l2 < $stack4 goto (branch)  YES, jumped to: (1665, 0) (1667, 0) 
(1661, 0): if l0 == null goto return -1  YES, jumped to: (1662, 0) (1661, 1) 
(1661, 1): if l2 >= 0 goto $stack4 = lengthof l0  YES, jumped to: (1664, 0) (1662, 0) 
(1609, 0): if l0 == null goto $stack1 = 0  YES, jumped to: (1609, 3) (1609, 1) 
(1674, 1): if l3 < 0 goto return -1  YES, jumped to: (1680, 0) (1675, 0) 
(1675, 2): if $stack10 == 0 goto l3 = l3 + -1  YES, jumped to: (1674, 0) (1676, 0) 
(1673, 3): if $stack7 == 0 goto return -1  YES, jumped to: (1680, 0) (1674, 0) 
(1669, 1): if $stack12 != null goto l3 = l3 + -1  YES, jumped to: (1668, 0) 
(1667, 0): if l1 != null goto $stack5 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>()  YES, jumped to: (1673, 0) (1668, 0) 
(1668, 1): if l3 < 0 goto (branch)  YES, jumped to: (1669, 0) (1668, 2) 
(1619, 1): if $stack1 != 0 goto $stack2 = 0  YES, jumped to: (1619, 2) (1619, 4) 

In the following all of the instructions which were not covered will be shown: 

(1669, 1): if $stack12 != null goto l3 = l3 + -1  NO 


comp5111.assignment.cut.Subject


In the following all of the instructions which were covered will be shown: 


In the following all of the instructions which were not covered will be shown: 



comp5111.assignment.cut.Subject$FilenameTasks


In the following all of the instructions which were covered will be shown: 

(153, 0): if l1 == 0 goto $stack13 = lengthof l2  YES, jumped to: (163, 0) 
(54, 0): if l0 != 92 goto $stack1 = new java.lang.IllegalArgumentException  YES, jumped to: (57, 0) 
(149, 1): if $stack11 == 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  YES, jumped to: (152, 0) 
(116, 1): if $stack7 == 0 goto return 0  YES, jumped to: (117, 0) 
(213, 2): if l2 >= $stack4 goto return 1  YES, jumped to: (214, 0) (222, 0) 
(145, 0): if l1 == 0 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  YES, jumped to: (148, 0) 
(81, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>(l0)  YES, jumped to: (84, 0) 
(178, 2): if l5 != $stack18 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  YES, jumped to: (178, 3) 
(178, 4): if $stack24 == 0 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  YES, jumped to: (185, 0) 
(172, 0): if l4 <= 1 goto l3#27 = l3#27 + 1  YES, jumped to: (198, 0) 
(170, 1): if $stack16 == 0 goto l4 = 0  YES, jumped to: (171, 0) (176, 0) 
(232, 0): if l0 == 47 goto $stack1 = 1  YES, jumped to: (232, 1) 
(265, 1): if $stack9 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (265, 2) 
(232, 1): if l0 != 92 goto $stack1 = 0  YES, jumped to: (232, 4) 
(168, 2): if l5 >= $stack14 goto (branch)  YES, jumped to: (169, 0) (200, 0) 
(265, 3): if $stack32 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (266, 0) 
(100, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int)>(47)  YES, jumped to: (103, 0) 
(185, 1): if $stack19 <= 4 goto l7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l6, 16)  YES, jumped to: (190, 0) (186, 0) 
(218, 4): if $stack10 != 0 goto l2 = l2 + 1  YES, jumped to: (219, 0) (213, 0) 
(216, 2): if l2 != $stack14 goto $stack15 = 0  YES, jumped to: (216, 3) 
(214, 2): if $stack6 == 0 goto $stack8 = <comp5111.assignment.cut.Subject$FilenameTasks: java.util.regex.Pattern REG_NAME_PART_PATTERN>  YES, jumped to: (218, 0) (216, 0) 
(245, 1): if $stack1 < 0 goto return l0  YES, jumped to: (249, 0) 
(148, 1): if $stack10 == 0 goto $stack11 = virtualinvoke l0.<java.lang.String: boolean endsWith(java.lang.String)>(":")  YES, jumped to: (149, 0) 
(51, 0): if l0 != 47 goto (branch)  YES, jumped to: (54, 0) 
(200, 0): if l3#27 > 8 goto $stack15 = 0  YES, jumped to: (200, 1) 
(200, 1): if l3#27 >= 8 goto $stack15 = 1  YES, jumped to: (200, 2) 
(200, 2): if l1 == 0 goto $stack15 = 0  YES, jumped to: (200, 5) 
(163, 1): if $stack13 <= 8 goto l3#27 = 0  YES, jumped to: (166, 0) 

In the following all of the instructions which were not covered will be shown: 

(155, 1): if $stack30 == 0 goto $stack31 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>("::")  NO 
(279, 0): if l8 != 63 goto (branch)  NO 
(275, 1): if $stack20 == 0 goto (branch)  NO 
(81, 0): if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>(l0)  NO 
(172, 0): if l4 <= 1 goto l3#27 = l3#27 + 1  NO 
(148, 1): if $stack10 == 0 goto $stack11 = virtualinvoke l0.<java.lang.String: boolean endsWith(java.lang.String)>(":")  NO 
(148, 3): if $stack45 == 0 goto return 0  NO 
(194, 0): if l7 < 0 goto return 0  NO 
(194, 1): if l7 <= 65535 goto l3#27 = l3#27 + 1  NO 
(289, 1): if $stack13 == 0 goto $stack14 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(128, 1): if $stack11 <= 1 goto l2 = l2 + 1  NO 
(128, 3): if $stack14 == 0 goto l2 = l2 + 1  NO 
(124, 0): if l4 <= 255 goto $stack11 = virtualinvoke l3.<java.lang.String: int length()>()  NO 
(153, 0): if l1 == 0 goto $stack13 = lengthof l2  NO 
(281, 0): if l4 == 42 goto l4 = l8  NO 
(54, 0): if l0 != 92 goto $stack1 = new java.lang.IllegalArgumentException  NO 
(149, 1): if $stack11 == 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  NO 
(116, 1): if $stack7 == 0 goto return 0  NO 
(149, 3): if $stack41 != 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")  NO 
(116, 3): if $stack8 == 4 goto l2 = 1  NO 
(145, 0): if l1 == 0 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  NO 
(178, 2): if l5 != $stack18 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  NO 
(273, 2): if l7 >= l6 goto $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()  NO 
(145, 3): if $stack49 == $stack50 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")  NO 
(178, 4): if $stack24 == 0 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()  NO 
(232, 0): if l0 == 47 goto $stack1 = 1  NO 
(265, 1): if $stack9 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  NO 
(232, 1): if l0 != 92 goto $stack1 = 0  NO 
(265, 3): if $stack32 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  NO 
(100, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int)>(47)  NO 
(158, 1): if $stack31 == 0 goto $stack32 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(158, 3): if $stack36 != 0 goto $stack32 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>  NO 
(121, 1): if l2 > 4 goto return 1  NO 
(216, 2): if l2 != $stack14 goto $stack15 = 0  NO 
(245, 1): if $stack1 < 0 goto return l0  NO 
(51, 0): if l0 != 47 goto (branch)  NO 
(179, 1): if $stack27 != 0 goto l3#27 = l3#27 + 2  NO 
(274, 0): if l8 == 63 goto $stack20 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()  NO 
(274, 1): if l8 != 42 goto virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(l8)  NO 
(200, 0): if l3#27 > 8 goto $stack15 = 0  NO 
(200, 1): if l3#27 >= 8 goto $stack15 = 1  NO 
(200, 2): if l1 == 0 goto $stack15 = 0  NO 
(163, 1): if $stack13 <= 8 goto l3#27 = 0  NO 


comp5111.assignment.cut.Subject$StringTasks


In the following all of the instructions which were covered will be shown: 

(448, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (451, 0) 
(799, 1): if $stack4 == 0 goto (branch)  YES, jumped to: (802, 0) (800, 0) 
(349, 1): if l2 >= l1 goto return 1  YES, jumped to: (350, 0) 
(795, 0): if l1 != null goto $stack4 = virtualinvoke l1.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (799, 0) 
(568, 0): if l1 == 0 goto $stack25 = new java.lang.String  YES, jumped to: (568, 1) (575, 0) 
(791, 0): if l2 != 0 goto (branch)  YES, jumped to: (792, 0) (795, 0) 
(663, 0): if l0 == null goto return 1  YES, jumped to: (663, 1) (664, 0) 
(568, 1): if l7 != 2 goto $stack25 = new java.lang.String  YES, jumped to: (575, 0) (568, 2) 
(663, 1): if l1 != null goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (666, 0) (664, 0) 
(568, 2): if l5 != 1 goto $stack25 = new java.lang.String  YES, jumped to: (575, 0) 
(849, 0): if l1 == 0 goto $stack8 = 0  YES, jumped to: (849, 4) 
(494, 1): if $stack4 != 1 goto $stack5 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (502, 0) (495, 0) 
(845, 2): if $stack12 == 0 goto l4 = l4 + 1  YES, jumped to: (846, 0) (839, 0) 
(556, 1): if $stack9 == 0 goto l2 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()  YES, jumped to: (557, 0) (559, 0) 
(490, 1): if $stack3 == 0 goto $stack4 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (494, 0) (491, 0) 
(618, 1): if l6 >= l2 goto return 0  YES, jumped to: (619, 0) (636, 0) 
(742, 0): if l0 != l1 goto (branch)  YES, jumped to: (745, 0) (743, 0) 
(833, 1): if $stack5 != 0 goto return 0  YES, jumped to: (834, 0) (833, 2) 
(416, 1): if l2 >= l1 goto return 1  YES, jumped to: (421, 0) (417, 0) 
(672, 1): if l8 >= l4 goto l6 = l6 + 1  YES, jumped to: (673, 0) (670, 0) 
(833, 3): if $stack6 != 1 goto l1 = 0  YES, jumped to: (834, 0) (836, 0) 
(350, 2): if $stack5 != 0 goto l2 = l2 + 1  YES, jumped to: (351, 0) 
(412, 1): if $stack3 == 0 goto l1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (413, 0) (415, 0) 
(346, 0): if l1 != 0 goto l2 = 0  YES, jumped to: (349, 0) (347, 0) 
(565, 0): if l7 != l5 goto (branch)  YES, jumped to: (566, 0) (568, 0) 
(751, 1): if $stack6 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (751, 2) 
(751, 3): if $stack12 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (752, 0) 
(458, 0): if l4 != 10 goto return l3  YES, jumped to: (461, 0) 
(553, 0): if l0 != null goto $stack9 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  YES, jumped to: (556, 0) 
(611, 1): if $stack9 != 0 goto return 0  YES, jumped to: (611, 2) (612, 0) 
(611, 3): if $stack10 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (612, 0) (614, 0) 
(673, 1): if $stack13 != l7 goto l8 = l8 + 1  YES, jumped to: (672, 0) 
(863, 0): if l0 == null goto return l0  YES, jumped to: (863, 1) 
(417, 2): if $stack6 != 0 goto l2 = l2 + 1  YES, jumped to: (418, 0) 
(863, 1): if l1 == null goto return l0  YES, jumped to: (863, 2) 
(863, 2): if l2 != null goto l3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>(l1)  YES, jumped to: (867, 0) 
(496, 0): if l1 == 13 goto return ""  YES, jumped to: (496, 1) 
(880, 0): if l6 != l4 goto $stack12 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l3)  YES, jumped to: (885, 0) (881, 0) 
(496, 1): if l1 != 10 goto return l0  YES, jumped to: (499, 0) 
(620, 1): if l8 >= l3 goto l6 = l6 + 1  YES, jumped to: (621, 0) (618, 0) 
(748, 2): if $stack4 == $stack5 goto $stack6 = l0 instanceof java.lang.String  YES, jumped to: (749, 0) (751, 0) 
(843, 2): if $stack10 == 0 goto $stack11 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  YES, jumped to: (845, 0) 
(839, 1): if l4 >= l3 goto (branch)  YES, jumped to: (840, 0) (849, 0) 
(323, 0): if l0 != null goto $stack1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (323, 3) (323, 1) 
(802, 0): if l2 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  YES, jumped to: (802, 1) (806, 0) 
(802, 4): if $stack8 == -1 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  YES, jumped to: (803, 0) (806, 0) 
(509, 0): if l2 == 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  YES, jumped to: (510, 0) 
(670, 1): if l6 >= l2 goto return 1  YES, jumped to: (671, 0) (688, 0) 
(377, 0): if l0 == null goto $stack2 = 1  YES, jumped to: (377, 1) (377, 3) 
(505, 0): if l2 != 10 goto (branch)  YES, jumped to: (509, 0) 
(377, 2): if $stack1 != 0 goto $stack2 = 0  YES, jumped to: (377, 5) (377, 3) 
(563, 3): if l6 >= $stack15 goto $stack16 = new java.lang.String  YES, jumped to: (564, 0) (580, 0) 
(877, 1): if l4 != $stack11 goto (branch)  YES, jumped to: (878, 0) (880, 0) 
(621, 1): if $stack15 != l7 goto l8 = l8 + 1  YES, jumped to: (620, 0) 
(745, 0): if l0 == null goto return 0  YES, jumped to: (745, 1) (746, 0) 
(745, 1): if l1 != null goto $stack4 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  YES, jumped to: (748, 0) (746, 0) 
(840, 0): if l1 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  YES, jumped to: (843, 0) 
(869, 0): if l3 >= 0 goto l4 = virtualinvoke l0.<java.lang.String: int length()>()  YES, jumped to: (873, 0) (870, 0) 
(452, 0): if l1 >= 2 goto l2 = l1 - 1  YES, jumped to: (453, 0) (455, 0) 

In the following all of the instructions which were not covered will be shown: 

(448, 0): if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int length()>()  NO 
(349, 1): if l2 >= l1 goto return 1  NO 
(795, 0): if l1 != null goto $stack4 = virtualinvoke l1.<java.lang.String: boolean isEmpty()>()  NO 
(506, 2): if $stack12 != 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  NO 
(568, 2): if l5 != 1 goto $stack25 = new java.lang.String  NO 
(630, 0): if l6 >= l4 goto l8 = l8 + 1  NO 
(626, 0): if l8 != l5 goto (branch)  NO 
(630, 5): if $stack21 != $stack22 goto l8 = l8 + 1  NO 
(849, 0): if l1 == 0 goto $stack8 = 0  NO 
(849, 1): if l2 == 0 goto $stack8 = 0  NO 
(622, 1): if $stack18 != 0 goto (branch)  NO 
(350, 2): if $stack5 != 0 goto l2 = l2 + 1  NO 
(796, 0): if l2 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  NO 
(796, 4): if $stack15 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)  NO 
(751, 1): if $stack6 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(751, 3): if $stack12 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()  NO 
(458, 0): if l4 != 10 goto return l3  NO 
(553, 0): if l0 != null goto $stack9 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()  NO 
(458, 3): if $stack9 != 13 goto return l3  NO 
(673, 1): if $stack13 != l7 goto l8 = l8 + 1  NO 
(417, 2): if $stack6 != 0 goto l2 = l2 + 1  NO 
(863, 0): if l0 == null goto return l0  NO 
(863, 1): if l1 == null goto return l0  NO 
(863, 2): if l2 != null goto l3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>(l1)  NO 
(570, 0): if l8 == l4 goto (branch)  NO 
(756, 1): if l3 >= l2 goto return 1  NO 
(496, 0): if l1 == 13 goto return ""  NO 
(496, 1): if l1 != 10 goto return l0  NO 
(682, 0): if l6 >= l3 goto l8 = l8 + 1  NO 
(843, 2): if $stack10 == 0 goto $stack11 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 
(678, 0): if l8 != l5 goto (branch)  NO 
(682, 5): if $stack19 != $stack20 goto l8 = l8 + 1  NO 
(674, 1): if $stack16 != 0 goto (branch)  NO 
(509, 0): if l2 == 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)  NO 
(505, 0): if l2 != 10 goto (branch)  NO 
(757, 2): if $stack8 == $stack9 goto l3 = l3 + 1  NO 
(621, 1): if $stack15 != l7 goto l8 = l8 + 1  NO 
(840, 0): if l1 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 
(840, 1): if l2 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)  NO 


comp5111.assignment.cut.Subject$BooleanTasks


In the following all of the instructions which were covered will be shown: 

(1393, 0): if l0 != l1 goto (branch)  YES, jumped to: (1396, 0) (1394, 0) 
(1396, 0): if l0 == 0 goto $stack2 = -1  YES, jumped to: (1396, 1) (1396, 3) 

In the following all of the instructions which were not covered will be shown: 

